	protected void searchTextualOccurrences(Program program) {
		TextSearcher searcher = TextSearcherFactory.createSearcher(changedFile,
				getTextualSearchPattern());
		searcher.search(null);

		/**
		 * an iterator of @link FileMatch
		 */
		final Iterator<?> searchIterator = searcher.getResults().iterator();
		FileMatch currentMatch = (FileMatch) (searchIterator.hasNext() ? searchIterator
				.next() : null);
		/**
		 * an iterator of @link Comment
		 */
		final Iterator<Comment> commentIterator = program.comments().iterator();
		Comment currentComment = (Comment) (commentIterator.hasNext() ? commentIterator
				.next() : null);

		while (currentComment != null && currentMatch != null) {

			while (isInside(currentComment, currentMatch)) {
				// if the comment abs the text - add change
				if (textInsideComment(currentComment, currentMatch)) {
					addChange(currentMatch.getOffset() + 1,
							PhpRefactoringCoreMessages
									.getString("AbstractRename_0")); //$NON-NLS-1$
				}
				currentMatch = (FileMatch) (searchIterator.hasNext() ? searchIterator
						.next() : null);
			}

			while (isCommentBefore(currentMatch, currentComment)) {
				currentComment = (Comment) (commentIterator.hasNext() ? commentIterator
						.next() : null);
			}

			while (isMatchBefore(currentMatch, currentComment)) {
				currentMatch = (FileMatch) (searchIterator.hasNext() ? searchIterator
						.next() : null);
			}
		}
	}

