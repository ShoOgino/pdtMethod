	private void addReplaceExpressionWithTemp() {
		IASTFragment[] fragmentsToReplace = retainOnlyReplacableMatches(true);

		ASTRewrite rewrite = fRewriter;
		HashSet<IASTFragment> seen = new HashSet<>();
		for (int i = 0; i < fragmentsToReplace.length; i++) {
			IASTFragment fragment = fragmentsToReplace[i];
			if (!seen.add(fragment))
				continue;
			Identifier tempName = fRewriter.getAST().newIdentifier(getFullVariableName());
			TextEditGroup description = new TextEditGroup("replace "); //$NON-NLS-1$

			fragment.replace(rewrite, tempName, description);
			// if (fLinkedProposalModel != null)
			// fLinkedProposalModel.getPositionGroup(KEY_NAME,
			// true).addPosition(rewrite.track(tempName), false);
		}
	}

