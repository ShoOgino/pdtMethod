	public boolean visit(FunctionDeclaration function) {
		boolean result = super.visit(function);
		// Searching for matching text at the program level.
		if (this.searchTextual) {
			searchTextualOccurrences(function.getProgramRoot());
			return result;
		}
		IMethod method = ModelUtils.getFunctionMethod(function);
		if (method != null) {
			PHPDocBlock doc = ModelUtils.getPHPDoc(method);
			if (doc != null) {
				PHPDocTag[] tags = doc.getTags();
				for (PHPDocTag tag : tags) {
					if (tag.isValidMethodDescriptorTag()
							&& tag.getVariableReference().getName().equals("$" + oldName)) { //$NON-NLS-1$
						// add all variable references, even if they are
						// duplicated in this PHPDocBlock
						addChange(tag.getVariableReference().sourceStart() + 1, getRenameDescription());
					}
				}
			}
		}
		return result;
	}

