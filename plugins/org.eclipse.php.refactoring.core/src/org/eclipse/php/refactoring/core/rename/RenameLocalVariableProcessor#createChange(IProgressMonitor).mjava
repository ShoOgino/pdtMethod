	/**
	 * Derive the change
	 */
	@Override
	public Change createChange(IProgressMonitor pm) throws CoreException,
			OperationCanceledException {
		try {
			pm.beginTask(RenameLocalVariableProcessor.RENAME_IS_PROCESSING,
					participantFiles.size());
			pm.setTaskName(RenameLocalVariableProcessor.CREATING_MODIFICATIONS_LABEL);

			if (pm.isCanceled())
				throw new OperationCanceledException();

			// get target parameters
			final String newElementName = getNewElementName();
			final RenameLocalVariable rename = new RenameLocalVariable(
					resource, ((Identifier) identifier.getName()).getName(),
					newElementName, getUpdateTextualMatches());

			// aggregate the changes identifiers
			this.functionDeclaration.accept(rename);

			if (pm.isCanceled())
				throw new OperationCanceledException();

			pm.worked(1);
			TextFileChange change = null;
			if (rename.hasChanges()) {
				// create the change
				change = acquireChange(resource,
						getProgram(functionDeclaration));
				rename.updateChange(change);
			}
			return change;

		} finally {
			pm.done();
		}
	}

