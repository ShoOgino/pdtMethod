	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor#
	 * loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,
	 * org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
	 */
	@Override
	public RefactoringParticipant[] loadParticipants(RefactoringStatus status,
			SharableParticipants sharedParticipants) {

		try {
			String[] affectedNatures = ResourceProcessors
					.computeAffectedNatures(fProject);
			MoveArguments arguments = new MoveArguments(fResourceDestination,
					getUpdateReferences());
			List<IProject> list = new ArrayList<>();
			list.add(fProject);
			return ParticipantManager.loadMoveParticipants(status, this, list,
					arguments, null, affectedNatures, sharedParticipants);
		} catch (CoreException e) {
			e.printStackTrace();
		}
		return new RefactoringParticipant[0];
	}

