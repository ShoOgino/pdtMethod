	public boolean visit(FunctionDeclaration function) {
		boolean result = super.visit(function);
		if (this.searchTextual) {
			return result;
		}
		IMethod method = ModelUtils.getFunctionMethod(function);
		if (method != null) {
			IType currentNamespace = PHPModelUtils.getCurrentNamespace(method);
			ISourceModule sm = method.getSourceModule();
			PHPDocBlock doc = ModelUtils.getPHPDoc(method);
			if (doc == null) {
				return result;
			}
			PHPDocTag[] tags = doc.getTags();
			for (PHPDocTag tag : tags) {
				List<TypeReference> matchRefs = new ArrayList<TypeReference>();
				for (TypeReference ref : tag.getTypeReferences()) {
					if (ref.getName().equals(oldName)) {
						IType[] elements = ModelUtils.getTypes(oldName, sm, doc.sourceStart(), currentNamespace);
						for (int i = 0; i < elements.length; i++) {
							for (int j = 0; j < types.length; j++) {
								if (elements[i].equals(types[j])) {
									matchRefs.add(ref);
								}
							}
						}
					}
				}
				for (TypeReference ref : matchRefs) {
					addChange(ref.sourceStart(), getRenameDescription());
				}
			}
		}
		return result;
	}

