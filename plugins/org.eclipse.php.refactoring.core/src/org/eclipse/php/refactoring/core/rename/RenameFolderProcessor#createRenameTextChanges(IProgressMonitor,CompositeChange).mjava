	/**
	 * Derive the change
	 */
	private void createRenameTextChanges(IProgressMonitor pm, CompositeChange rootChange)
			throws CoreException, OperationCanceledException {

		try {
			pm.beginTask(RenameClassProcessor.RENAME_IS_PROCESSING, 1);
			pm.setTaskName(RenameClassProcessor.CREATING_MODIFICATIONS_LABEL);

			if (pm.isCanceled()) {
				throw new OperationCanceledException();
			}

			// get target parameters
			String newElementName = getNewElementName();

			// If update class and update reference are all false, ignore the
			// loop.
			if (getUpdateReferences()) {
				for (Entry<IFile, Program> entry : participantFiles.entrySet()) {
					final IFile file = entry.getKey();
					final Program program = entry.getValue();
					final RenameIncludeFolder rename = new RenameIncludeFolder(file, getCurrentElementName(),
							newElementName, this.resource.getFullPath(), false, getUpdateReferences());

					// aggregate the changes identifiers
					program.accept(rename);

					if (pm.isCanceled()) {
						throw new OperationCanceledException();
					}

					pm.worked(1);

					if (rename.hasChanges()) {
						ProgramFileChange change = new ProgramFileChange(file.getName(), file, program);
						change.setEdit(new MultiTextEdit());
						change.setTextType("php"); //$NON-NLS-1$

						rootChange.add(change);
						rename.updateChange(change);
					}
				}
			}
		} finally {
			pm.done();
		}
	}

