	private IASTFragment[] getMatchingFragments(boolean clean) {
		if (fReplaceAllOccurrences) {
			if (clean || allMatchingFragments == null) {
				allMatchingFragments = ASTFragmentFactory.createFragmentForFullSubtree(getEnclosingBodyNode())
						.getSubFragmentsMatching(getSelectedExpression());
				Comparator<IASTFragment> comparator = new Comparator<IASTFragment>() {

					@Override
					public int compare(IASTFragment o1, IASTFragment o2) {
						return o1.getStartPosition() - o2.getStartPosition();
					}
				};
				Arrays.sort(allMatchingFragments, comparator);
			}
			return allMatchingFragments;

		} else {
			return new IASTFragment[] { getSelectedExpression() };
		}
	}

