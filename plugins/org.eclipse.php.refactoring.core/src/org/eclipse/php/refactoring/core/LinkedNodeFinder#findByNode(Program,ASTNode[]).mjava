	/**
	 * Find all nodes connected to the given name node. If the node has a
	 * binding then all nodes connected to this binding are returned. If the
	 * node has no binding, then all nodes that also miss a binding and have the
	 * same name are returned.
	 * 
	 * @param root
	 *            The root of the AST tree to search
	 * @param name
	 *            The node to find linked nodes for
	 * @return Return
	 */
	public static OccurrenceLocation[] findByNode(Program root, ASTNode[] nodes) {

		List<OccurrenceLocation> locationList = new ArrayList<OccurrenceLocation>();
		for (ASTNode selectedNode : nodes) {
			OccurrenceLocation[] locations = findByNode(root, selectedNode);
			if (locations != null) {
				locationList.addAll(Arrays.asList(locations));
			}
		}

		return locationList
				.toArray(new OccurrenceLocation[locationList.size()]);
	}

