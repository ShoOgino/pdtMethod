	/**
	 * Gets the current selection
	 * 
	 * @param astRoot
	 * @return
	 */
	private RefactoringStatus checkSelection(RefactoringStatus status, IProgressMonitor pm) {

		try {
			pm.beginTask("", 8); //$NON-NLS-1$

			IExpressionFragment selectedExpression = getSelectedExpression();

			if (selectedExpression == null) {
				return RefactoringStatus
						.createFatalErrorStatus(PHPRefactoringCoreMessages.getString("ExtractVariableRefactoring.2")); //$NON-NLS-1$
			}
			pm.worked(1);

			enclosingBodyNode = getEnclosingBodyNode();
			if (enclosingBodyNode == null) {
				return RefactoringStatus
						.createFatalErrorStatus(PHPRefactoringCoreMessages.getString("ExtractVariableRefactoring.3")); //$NON-NLS-1$
			}
			pm.worked(1);

			if (scopeHasSyntaxErrors(enclosingBodyNode)) {
				return RefactoringStatus
						.createFatalErrorStatus("Unable to activate refactoring. Please fix syntax errors"); //$NON-NLS-1$
			}
			pm.worked(1);

			Expression expression = getSelectedExpression().getAssociatedExpression();

			status.merge(canExtract(expression));

			pm.worked(1);

			return status;

		} finally {
			pm.done();
		}
	}

