	private void checkExpression(RefactoringStatus status) {
		ASTNode[] nodes = getSelectedNodes();
		if (nodes != null && nodes.length == 1) {
			ASTNode node = nodes[0];
			if (!(node instanceof ExpressionStatement) && !(node instanceof EchoStatement)
					&& !(node instanceof InfixExpression) && !(node instanceof ForStatement)
					&& !(node instanceof DoStatement) && !(node instanceof ForEachStatement)
					&& !(node instanceof IfStatement) && !(node instanceof SwitchStatement)
					&& !(node instanceof TryStatement) && !(node instanceof WhileStatement)) {
				status.addFatalError(PhpRefactoringCoreMessages.getString("ExtractFunctionAnalyzer.2")); //$NON-NLS-1$
			}
		}

		if (nodes == null || nodes.length == 0) {
			status.addFatalError(PhpRefactoringCoreMessages.getString("ExtractFunctionAnalyzer.3")); //$NON-NLS-1$
		}

	}

