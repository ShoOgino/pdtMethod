	/**
	 * Apply the launch configuration delegate class that will be used when
	 * using this launch with the {@link PHPLaunchDelegateProxy}. This method
	 * sets the class name of the launch delegate that is associated with the
	 * debugger that was defined to this launch configuration. The class name is
	 * retrieved from the debugger's {@link IDebuggerConfiguration}.
	 * 
	 * @param configuration
	 *            A ILaunchConfigurationWorkingCopy
	 */
	protected void applyLaunchDelegateConfiguration(
			final ILaunchConfigurationWorkingCopy configuration) {
		String debuggerID = null;
		try {
			debuggerID = configuration.getAttribute(
					PHPDebugCorePreferenceNames.PHP_DEBUGGER_ID, (String) null);
			if (debuggerID == null) {
				String serverName = configuration.getAttribute(Server.NAME,
						(String) null);
				debuggerID = PHPDebugPlugin.getDebuggerId(serverName);
			}
			IDebuggerConfiguration debuggerConfiguration = PHPDebuggersRegistry
					.getDebuggerConfiguration(debuggerID);
			configuration.setAttribute(
					PHPDebugCorePreferenceNames.CONFIGURATION_DELEGATE_CLASS,
					debuggerConfiguration.getWebLaunchDelegateClass());
		} catch (Exception e) {
			Logger.logException(e);
		}
	}

