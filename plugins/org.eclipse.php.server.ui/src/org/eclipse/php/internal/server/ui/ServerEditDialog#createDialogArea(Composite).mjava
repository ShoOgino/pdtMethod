	protected Control createDialogArea(Composite parent) {
		// create the top level composite for the dialog area
		Composite composite = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		layout.marginHeight = 0;
		layout.marginWidth = 0;
		layout.verticalSpacing = 0;
		layout.horizontalSpacing = 0;
		composite.setLayout(layout);
		GridData gridData = new GridData(GridData.FILL_BOTH);
		composite.setLayoutData(gridData);
		composite.setFont(parent.getFont());
		// Create a tabbed container that will hold all the fragments
		tabs = SWTUtil.createTabFolder(composite);
		ICompositeFragmentFactory[] factories = WizardFragmentsFactoryRegistry
				.getFragmentsFactories(FRAGMENT_GROUP_ID);
		for (ICompositeFragmentFactory element : factories) {
			CTabItem tabItem = new CTabItem(tabs, SWT.BORDER);
			CompositeFragment fragment = element.createComposite(tabs, this);
			fragment.setData(server);
			tabItem.setText(fragment.getDisplayName());
			tabItem.setControl(fragment);
			tabItem.setData(fragment.getId());
			runtimeComposites.add(fragment);
		}
		tabs.addSelectionListener(new SelectionListener() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				widgetDefaultSelected(e);
			}

			@Override
			public void widgetDefaultSelected(SelectionEvent e) {
				int tabIdx = tabs.getSelectionIndex();
				CTabItem item = tabs.getItem(tabIdx);
				CompositeFragment fragment = (CompositeFragment) item
						.getControl();
				setTitle(fragment.getTitle());
				setDescription(fragment.getDescription());
				fragment.validate();
			}
		});
		getShell().setText(
				PHPServerUIMessages.getString("ServerEditDialog.editServer")); //$NON-NLS-1$
		getShell().setImage(
				ServersPluginImages.get(ServersPluginImages.IMG_SERVER));

		tabsListener = new TabsSelectionListener();
		tabs.addSelectionListener(tabsListener);

		// set the init selection of tabitem.
		if (tabID != null) {
			setSelect(tabID);
		}
		return tabs;
	}

