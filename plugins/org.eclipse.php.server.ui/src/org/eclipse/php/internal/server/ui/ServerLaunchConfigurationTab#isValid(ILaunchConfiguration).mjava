	/**
	 * @see org.eclipse.debug.ui.ILaunchConfigurationTab#isValid(ILaunchConfiguration)
	 */
	public boolean isValid(ILaunchConfiguration launchConfig) {
		setMessage(null);
		setErrorMessage(null);
		// TODO - Note that this method of removing invalid launches is still
		// buggy
		// In order to fix it completely, we might have to perform similar
		// checks when removing or renaming a server from
		// the PHP Servers preferences page.
		try {
			String serverName = launchConfig.getAttribute(Server.NAME, ""); //$NON-NLS-1$
			if (!serverName.equals("")) { //$NON-NLS-1$
				Server server = ServersManager.getServer(serverName);
				if (server == null) {
					deleteLaunchConfiguration(launchConfig);
					ILaunchConfiguration[] allConfigurations = DebugPlugin
							.getDefault().getLaunchManager()
							.getLaunchConfigurations();
					for (ILaunchConfiguration element : allConfigurations) {
						launchConfig = element;
						serverName = launchConfig.getAttribute(Server.NAME, ""); //$NON-NLS-1$
						if (!serverName.equals("") && ServersManager.getServer(serverName) == null) { //$NON-NLS-1$
							// The server was removed, so remove this launch
							// configuration!
							deleteLaunchConfiguration(launchConfig);
						}
					}
					return false;
				}
			}

			String fileName = launchConfig.getAttribute(Server.FILE_NAME, ""); //$NON-NLS-1$
			IResource resource = ResourcesPlugin.getWorkspace().getRoot()
					.findMember(fileName);
			if (!(resource instanceof IFile)) {
				setErrorMessage(PHPServerUIMessages
						.getString("ServerTab.file_project_doesNotExist")); //$NON-NLS-1$
				return false;
			}

		} catch (CoreException e) {
			// ignore
		}

		return isValidExtension(launchConfig);
	}

