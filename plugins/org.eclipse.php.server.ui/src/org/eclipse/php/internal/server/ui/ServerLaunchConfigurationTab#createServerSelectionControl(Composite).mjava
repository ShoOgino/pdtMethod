	protected void createServerSelectionControl(Composite parent) {
		Font font = parent.getFont();
		GridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
		Composite composite = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		layout.numColumns = 2;
		composite.setLayout(layout);
		composite.setLayoutData(data);

		Group group = new Group(composite, SWT.NONE);
		group.setText(PHPServerUIMessages.getString("ServerTab.server")); //$NON-NLS-1$
		GridLayout ly = new GridLayout();
		ly.numColumns = 1;
		GridData gridData = new GridData(GridData.FILL_HORIZONTAL);
		group.setLayout(ly);
		group.setLayoutData(gridData);

		Composite debuggerServerComp = new Composite(group, SWT.NONE);
		layout = new GridLayout(2, false);
		debuggerServerComp.setLayout(layout);
		debuggerServerComp.setFont(font);

		// Add the debuggers combo
		Label label = new Label(debuggerServerComp, SWT.WRAP);
		data = new GridData(GridData.BEGINNING);
		data.widthHint = 100;
		label.setLayoutData(data);
		label.setFont(font);
		label.setText("Server Debugger:");

		fDebuggersCombo = new Combo(debuggerServerComp, SWT.DROP_DOWN
				| SWT.READ_ONLY);
		fDebuggersCombo.setFont(font);
		data = new GridData(GridData.FILL_HORIZONTAL);
		data.widthHint = 100;
		fDebuggersCombo.setLayoutData(data);
		fDebuggersCombo.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(final SelectionEvent e) {
				updateLaunchConfigurationDialog();
				updateDebugServerTesters();
			}
		});

		Composite phpServerComp = new Composite(group, SWT.NONE);
		layout = new GridLayout(4, false);
		phpServerComp.setLayout(layout);
		data = new GridData(GridData.FILL_HORIZONTAL);
		phpServerComp.setLayoutData(data);
		phpServerComp.setFont(font);

		label = new Label(phpServerComp, SWT.WRAP);
		data = new GridData(GridData.BEGINNING);
		data.widthHint = 100;
		label.setLayoutData(data);
		label.setFont(font);
		label.setText("PHP Server:");

		serverCombo = new Combo(phpServerComp, SWT.SINGLE | SWT.BORDER
				| SWT.READ_ONLY);
		data = new GridData(GridData.FILL_HORIZONTAL);
		data.widthHint = 250;
		serverCombo.setLayoutData(data);
		serverCombo.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				handleServerSelection();
			}
		});

		createNewServer = createPushButton(phpServerComp, PHPServerUIMessages
				.getString("ServerTab.new"), null); //$NON-NLS-1$
		createNewServer.addSelectionListener(fListener);

		configureServers = createPushButton(phpServerComp, PHPServerUIMessages
				.getString("ServerTab.configure"), null); //$NON-NLS-1$
		configureServers.addSelectionListener(fListener);

		servers = new ArrayList<Server>();
		populateServerList(servers);

		// initialize the servers list
		if (!servers.isEmpty()) {
			for (int i = 0; i < servers.size(); i++) {
				Server svr = servers.get(i);
				serverCombo.add(svr.getName());
			}
		}

		// select first item in list
		if (serverCombo.getItemCount() > 0) {
			serverCombo.select(0);
		}

		// initialize the debuggers list
		fillDebuggers();

		serverCombo.forceFocus();

		Composite validateDebuggerComp = new Composite(group, SWT.NONE);
		layout = new GridLayout(1, false);
		validateDebuggerComp.setLayout(layout);
		data = new GridData(GridData.FILL_HORIZONTAL);
		validateDebuggerComp.setLayoutData(data);
		validateDebuggerComp.setFont(font);

		validateDebuggerBtn = new Button(validateDebuggerComp, SWT.NONE);
		validateDebuggerBtn.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent event) {
				updateDebugServerTesters();
				int selectedServerIndex = serverCombo.getSelectionIndex();
				Server server = servers.get(selectedServerIndex);
				final Shell shell = getShell();
				for (IDebugServerConnectionTest debugServerTester : debugTesters) {
					debugServerTester.testConnection(server, shell);
				}
			}
		});

		data = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);
		validateDebuggerBtn.setLayoutData(data);
		validateDebuggerBtn.setText("Test Debugger");
	}

