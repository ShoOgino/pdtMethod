	protected void createServerSelectionControl(Composite parent) {
		GridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
		Composite composite = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		layout.numColumns = 2;
		composite.setLayout(layout);
		composite.setLayoutData(data);

		Group group = new Group(composite, SWT.NONE);
		group.setText("Server");
		GridLayout ly = new GridLayout();
		ly.numColumns = 3;
		GridData gridData = new GridData(GridData.FILL_HORIZONTAL);
		group.setLayout(ly);
		group.setLayoutData(gridData);

		serverCombo = new Combo(group, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
		serverCombo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		serverCombo.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				handleServerSelection();
			}
		});

		createNewServer = createPushButton(group, "New", null);
		createNewServer.addSelectionListener(fListener);

		configureServers = createPushButton(group, "Configure...", null);
		configureServers.addSelectionListener(fListener);

		servers = new ArrayList();
		populateServerList((ArrayList) servers);
		// initialize

		if (!servers.isEmpty()) {
			for (int i = 0; i < servers.size(); i++) {
				Server svr = (Server) servers.get(i);
				serverCombo.add(svr.getName());
			}
		}

		// select first item in list
		if (serverCombo.getItemCount() > 0)
			serverCombo.select(0);

		serverCombo.forceFocus();
	}

