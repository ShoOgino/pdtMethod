	/**
	 * Sets the PHPexes to be displayed in this block
	 * 
	 * @param vms PHPexes to be displayed
	 */
	protected void setPHPexes(final List jres) {
		fVMs.clear();
		fVMs.addAll(jres);
		// sort by name
		Collections.sort(fVMs, new Comparator() {
			public int compare(final Object o1, final Object o2) {
				final PHPexeItem left = (PHPexeItem) o1;
				final PHPexeItem right = (PHPexeItem) o2;
				return left.getName().compareToIgnoreCase(right.getName());
			}

			public boolean equals(final Object obj) {
				return obj == this;
			}
		});
		// now make an array of names
		final String[] names = new String[fVMs.size()];
		final Iterator iter = fVMs.iterator();
		int i = 0;
		while (iter.hasNext()) {
			final PHPexeItem vm = (PHPexeItem) iter.next();
			names[i] = vm.getName() + " (" + vm.getPhpEXE().toString() + ")"; //$NON-NLS-1$ //$NON-NLS-2$
			i++;
		}
		fCombo.setItems(names);
	}

