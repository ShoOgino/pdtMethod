        /* (non-Javadoc)
         * @see org.eclipse.jface.viewers.ITreeContentProvider#getChildren(java.lang.Object)
         */
        public Object[] getChildren(Object element) {
            try {
                if (element instanceof PHPDebugTarget) {
                    IThread[] threads = ((PHPDebugTarget) element).getThreads();
                    if (threads != null) {
                        if (threads[0] != null) {
                            IStackFrame frame = threads[0].getTopStackFrame();
                            if (frame == null)
                                return new Expression[0];
                            Expression[] variables = ((PHPStackFrame) frame).getStackVariables();
                            if (variables == null) {
                            	return new Expression[0];
                            }
                            return variables;
                        }
                    }
                } else if (element instanceof PHPThread) {
                    IStackFrame frame = ((PHPThread) element).getTopStackFrame();
                    if (frame == null)
                        return new Expression[0];
                    Expression[] variables = ((PHPStackFrame) frame).getStackVariables();
                    if (variables == null) {
                    	return new Expression[0];
                    }
                    return variables;
                } else if (element instanceof PHPStackFrame) {
                	Expression[] variables = ((PHPStackFrame) element).getStackVariables();
                	if (variables == null) {
                    	return new Expression[0];
                    }
                    return variables;
                } else if (element instanceof Expression) {
                    Expression eExp = (Expression) element;
                    ExpressionValue value = eExp.getValue();
                    Expression[] eChildren = value.getChildren();
                    if (eChildren == null)
                        return new Expression[0];
                    if (eChildren.length == 0) {
                        ExpressionsManager expressionManager = fTarget.getExpressionManager();
                        expressionManager.update(eExp, 1);
                        value = eExp.getValue();
                        eChildren = value.getChildren();
                        if (eChildren == null)
                            eChildren = new Expression[0];
                    }
                    return eChildren;
                }
            } catch (DebugException e) {
                Logger.logException("StackViewContentProvider unexpected error", e);
            }
            return new Object[0];
        }

