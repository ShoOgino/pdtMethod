	private static IPHPConsoleEventListener[] getConsoleEventListeners() {
		if (fConsoleEventListeners == null) {
			Map<String, IPHPConsoleEventListener> listeners = new HashMap<>();
			IExtensionRegistry registry = Platform.getExtensionRegistry();
			IConfigurationElement[] elements = registry.getConfigurationElementsFor(PHPDebugUIPlugin.getID(),
					"phpConsoleListeners"); //$NON-NLS-1$
			for (IConfigurationElement element : elements) {
				if ("listener".equals(element.getName())) { //$NON-NLS-1$
					String id = element.getAttribute("id"); //$NON-NLS-1$
					if (!listeners.containsKey(id)) {
						String overridesIds = element.getAttribute("overridesId"); //$NON-NLS-1$
						if (overridesIds != null) {
							StringTokenizer st = new StringTokenizer(overridesIds, ", "); //$NON-NLS-1$
							while (st.hasMoreTokens()) {
								listeners.put(st.nextToken(), null);
							}
						}
						try {
							listeners.put(id, (IPHPConsoleEventListener) element.createExecutableExtension("class")); //$NON-NLS-1$
						} catch (CoreException e) {
							PHPDebugUIPlugin.log(e);
						}
					}
				}
			}
			Collection<IPHPConsoleEventListener> l = listeners.values();
			while (l.remove(null)) {
				; // remove null elements
			}
			fConsoleEventListeners = l.toArray(new IPHPConsoleEventListener[listeners.size()]);
		}
		return fConsoleEventListeners;
	}

