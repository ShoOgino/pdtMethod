	private void addProjectPreferenceSubsection(Composite composite) {

		Group defultPrefsGroup = new Group(composite, SWT.NONE);
		defultPrefsGroup.setText(PHPDebugUIMessages.PHPDebugPreferencesBlock_0);
		defultPrefsGroup.setFont(composite.getFont());
		GridLayout layout = new GridLayout();
		layout.numColumns = 3;
		layout.verticalSpacing = 10;
		defultPrefsGroup.setLayout(layout);
		defultPrefsGroup.setLayoutData(new GridData(GridData.FILL_BOTH));

		addLabelControl(defultPrefsGroup, PHPDebugUIMessages.PhpDebugPreferencePage_phpDebugger, PHPDebugCorePreferenceNames.PHP_DEBUGGER_ID);
		fDefaultDebugger = addCombo(defultPrefsGroup, 2);
		addLink(defultPrefsGroup, PHPDebugUIMessages.PHPDebugPreferencesBlock_1, DEBUGGERS_PAGE_ID);

		addLabelControl(defultPrefsGroup, PHPDebugUIMessages.PhpDebugPreferencePage_9, ServersManager.DEFAULT_SERVER_PREFERENCES_KEY);
		fDefaultServer = addCombo(defultPrefsGroup, 2);
		addLink(defultPrefsGroup, PHPDebugUIMessages.PhpDebugPreferencePage_serversLink, SERVERS_PAGE_ID);

		addLabelControl(defultPrefsGroup, PHPDebugUIMessages.PhpDebugPreferencePage_12, PHPDebugCorePreferenceNames.DEFAULT_PHP);
		fDefaultPHPExe = addCombo(defultPrefsGroup, 2);
		addLink(defultPrefsGroup, PHPDebugUIMessages.PhpDebugPreferencePage_installedPHPsLink, PHP_EXE_PAGE_ID);

		new Label(composite, SWT.NONE); // dummy label

		Group encodingGroup = new Group(composite, SWT.NONE);
		encodingGroup.setText(PHPDebugUIMessages.PHPDebugPreferencesBlock_2);
		encodingGroup.setLayout(new GridLayout(2, false));
		encodingGroup.setLayoutData(new GridData(GridData.FILL_BOTH));

		addLabelControl(encodingGroup, PHPDebugUIMessages.PHPDebugPreferencesAddon_debugTransferEncoding, PHPDebugCorePreferenceNames.TRANSFER_ENCODING);
		fDebugEncodingSettings = addEncodingSettings(encodingGroup);

		addLabelControl(encodingGroup, PHPDebugUIMessages.PHPDebugPreferencesAddon_debugOutputEncoding, PHPDebugCorePreferenceNames.OUTPUT_ENCODING);
		fOutputEncodingSettings = addEncodingSettings(encodingGroup);

		new Label(composite, SWT.NONE); // dummy label

		fStopAtFirstLine = addCheckBox(composite, PHPDebugUIMessages.PhpDebugPreferencePage_1, PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE, 0);

		// Add a default debugger listener that will update the possible executables
		// and, maybe, servers that can work with this debugger.
		fDefaultDebugger.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				String selectedDebugger = getSelectedDebuggerId();
				PHPexeItem[] items = PHPexes.getInstance().getItems(selectedDebugger);
				loadPHPExes(fDefaultPHPExe, items);
			}
		});
	}

