	protected String getLineBreakpointText(ILineBreakpoint breakpoint) {
		IMarker marker = breakpoint.getMarker();
		IResource resource = marker.getResource();
		try {
			Integer lineNumber = (Integer) marker
					.getAttribute(IMarker.LINE_NUMBER);
			String fileName = null;

			if (resource instanceof IFile) {
				fileName = resource.getFullPath().toString();
			} else if (resource instanceof IWorkspaceRoot) {
				fileName = (String) marker
						.getAttribute(StructuredResourceMarkerAnnotationModel.SECONDARY_ID_KEY);

				IPath path = new Path(fileName);

				if (path.getDevice() == null) {
					String fullPathString = path.toString();
					String absolutePath = fullPathString
							.substring(fullPathString.indexOf(':') + 1);
					path = new Path(absolutePath);
				} else {
					path = EnvironmentPathUtils.getLocalPath(path);
				}


				NonExistingPHPFileEditorInput nonExistingEditorInput = NonExistingPHPFileEditorInput
						.findEditorInput(path);
				if (nonExistingEditorInput != null) {
					fileName = nonExistingEditorInput.getName();
				} else {
					if (EnvironmentPathUtils.isFull(path)) {
						fileName = EnvironmentPathUtils
								.getLocalPathString(path);
					} else {
						File file = path.toFile();
						fileName = file.getAbsolutePath();
					}
				}

			}
			if (fileName != null) {
				return fileName + " [line: " + lineNumber.toString() + "]";
			}
		} catch (CoreException e) {
			Logger.logException(e);
		}
		return null;
	}

