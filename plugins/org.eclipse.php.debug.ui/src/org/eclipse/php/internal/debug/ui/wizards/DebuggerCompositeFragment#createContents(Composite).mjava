	protected void createContents(Composite parent) {
		debuggersIds = new LinkedList<String>(PHPDebuggersRegistry.getDebuggersIds());
		mainComposite = parent;
		Composite debuggerChoice = new Composite(parent, SWT.NONE);
		GridLayout dcLayout = new GridLayout();
		dcLayout.numColumns = 4;
		debuggerChoice.setLayout(dcLayout);
		debuggerChoice.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
		Label debuggerLabel = new Label(debuggerChoice, SWT.NONE);
		debuggerLabel.setText("Debugger:"); //$NON-NLS-1$
		debuggerLabel.setLayoutData(new GridData());
		debuggerCombo = new Combo(debuggerChoice, SWT.DROP_DOWN | SWT.READ_ONLY);
		GridData dcData = new GridData(SWT.LEFT, SWT.FILL, false, false);
		debuggerCombo.setLayoutData(dcData);
		debuggerCombo.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				if (getDebuggerOwner() != null) {
					modifiedValuesCache.debuggerId = debuggersIds.get(debuggerCombo.getSelectionIndex());
					updateItem();
					// create settings panel
					createSettings(modifiedValuesCache.debuggerId);
					// Validate debugger data
					validate();
				}
			}
		});
		debuggerTest = SWTFactory.createPushButton(debuggerChoice, Messages.DebuggerCompositeFragment_Test_button,
				null);
		debuggerTest.addSelectionListener(new SelectionListener() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				widgetDefaultSelected(e);
			}

			@Override
			public void widgetDefaultSelected(SelectionEvent e) {
				if (debuggerSettingsSection != null) {
					debuggerSettingsSection.performTest();
				}
			}
		});
		debuggerGlobalSettings = new Link(debuggerChoice, SWT.NONE);
		GridData dgsData = new GridData(SWT.RIGHT, SWT.CENTER, true, false);
		debuggerGlobalSettings.setLayoutData(dgsData);
		debuggerGlobalSettings.setText(Messages.DebuggerCompositeFragment_Global_settings_link);
		debuggerGlobalSettings.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetDefaultSelected(SelectionEvent e) {
				String selectedDebuggerId = debuggersIds.get(debuggerCombo.getSelectionIndex());
				AbstractDebuggerConfiguration globalConfiguration = PHPDebuggersRegistry
						.getDebuggerConfiguration(selectedDebuggerId);
				globalConfiguration
						.openConfigurationDialog(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell());
			}

			@Override
			public void widgetSelected(SelectionEvent e) {
				widgetDefaultSelected(e);
			}
		});
		for (int i = 0; i < debuggersIds.size(); ++i) {
			String id = debuggersIds.get(i);
			String debuggerName = PHPDebuggersRegistry.getDebuggerName(id);
			debuggerCombo.add(debuggerName, i);
		}
		Label separator = new Label(parent, SWT.SEPARATOR | SWT.HORIZONTAL);
		separator.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
		Dialog.applyDialogFont(this);
		// Initialize & validate
		init();
		validate();
		// Set focus on debuggers combo
		debuggerCombo.forceFocus();
	}

