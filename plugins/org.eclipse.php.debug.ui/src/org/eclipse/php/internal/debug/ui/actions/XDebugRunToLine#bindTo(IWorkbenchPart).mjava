	/**
	 * Binds this action to operate on the given part's run to line adapter.
	 *  
	 * @param part
	 */
	private void bindTo(IWorkbenchPart part) {
		IDebugContextManager manager = DebugUITools.getDebugContextManager();
		if (fActivePart != null && !fActivePart.equals(part)) {
			manager.getContextService(fActivePart.getSite().getWorkbenchWindow()).removeDebugContextListener(fContextListener);
		}
		fPartTarget = null;
		fActivePart = part;
		if (part != null) {
			IWorkbenchWindow workbenchWindow = part.getSite().getWorkbenchWindow();
			IDebugContextService service = manager.getContextService(workbenchWindow);
			service.addDebugContextListener(fContextListener);
			if (part instanceof org.eclipse.php.internal.ui.editor.PHPStructuredEditor) {
				fPartTarget = new XDebugRunToLineTarget();
			} else {
				fPartTarget = (IRunToLineTarget) part.getAdapter(IRunToLineTarget.class);
				if (fPartTarget == null) {
					IAdapterManager adapterManager = Platform.getAdapterManager();
					// TODO: we could restrict loading to cases when the debugging context is on
					if (adapterManager.hasAdapter(part, IRunToLineTarget.class.getName())) {
						fPartTarget = (IRunToLineTarget) adapterManager.loadAdapter(part, IRunToLineTarget.class.getName());
					}
				}
			}
			ISelection activeContext = service.getActiveContext();
			fContextListener.contextActivated(activeContext);
		}
		update();
	}

