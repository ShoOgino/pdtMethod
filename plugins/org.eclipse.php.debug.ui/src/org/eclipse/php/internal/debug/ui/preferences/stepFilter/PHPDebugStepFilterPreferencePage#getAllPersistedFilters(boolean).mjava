	/**
	 * Returns all of the committed filters along with extended filters list
	 * 
	 * @return an array of committed filters
	 * @since 3.2
	 */
	protected DebugStepFilter[] getAllPersistedFilters(boolean defaults) {
		ArrayList<DebugStepFilter> filtersToAdd = new ArrayList<DebugStepFilter>();

		IPreferenceStore store = getPreferenceStore();
		String[] parsedFilters = parseList(store.getString(IPHPDebugConstants.PREF_STEP_FILTERS_LIST));
		for (int i = 0; i < parsedFilters.length; i++) {
			String[] tokens = parsedFilters[i].split("\\" + DebugStepFilter.FILTER_TOKENS_DELIM); //$NON-NLS-1$
			if (tokens.length < 3) {
				return new DebugStepFilter[0];
			}
			DebugStepFilter filter = new DebugStepFilter(Integer.parseInt(tokens[0]), Boolean.parseBoolean(tokens[1]),
					Boolean.parseBoolean(tokens[2]), tokens[3]);

			filtersToAdd.add(filter);
		}

		DebugStepFilter[] extendedList = DebugStepFilterController.getInstance().getExtendedFiltersList();
		for (DebugStepFilter extendedFilter : extendedList) {
			if (!filtersToAdd.contains(extendedFilter)) {
				filtersToAdd.add(extendedFilter);
			}
		}

		DebugStepFilter[] result = new DebugStepFilter[filtersToAdd.size()];
		filtersToAdd.toArray(result);
		return result;

	}

