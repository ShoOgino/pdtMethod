	protected Control createDialogArea(Composite parent) {
		Composite container = (Composite) super.createDialogArea(parent);

		GridLayout gridLayout = new GridLayout();
		gridLayout.numColumns = 2;
		gridLayout.marginHeight = 15;
		gridLayout.marginWidth = 15;
		container.setLayout(gridLayout);

		int textStyles = SWT.SINGLE | SWT.LEFT;
		Label label = new Label(container, textStyles);
		label
				.setText(PHPDebugUIMessages.CreateStepFilterDialog_patternToFilter);
		label.setFont(container.getFont());

		// create & configure Text widget for editor
		// Fix for bug 1766. Border behavior on for text fields varies per
		// platform.
		// On Motif, you always get a border, on other platforms,
		// you don't. Specifying a border on Motif results in the characters
		// getting pushed down so that only there very tops are visible. Thus,
		// we have to specify different style constants for the different
		// platforms.
		if (!SWT.getPlatform().equals("motif")) { //$NON-NLS-1$
			textStyles |= SWT.BORDER;
		}

		text = new Text(container, textStyles);
		GridData gridData = new GridData(GridData.FILL_HORIZONTAL);
		gridData.horizontalSpan = 1;
		gridData.widthHint = 300;
		text.setLayoutData(gridData);
		text.setFont(container.getFont());

		text.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				validateChange();
				if (!filterValid) {
					updateStatus(new StatusInfo(
							IStatus.ERROR,
							PHPDebugUIMessages.CreateStepFilterDialog_invalidPathPattern));
					return;
				} else if (isDuplicateFilter(text.getText().trim())) {
					updateStatus(new StatusInfo(
							IStatus.ERROR,
							PHPDebugUIMessages.CreateStepFilterDialog_stepFilterAlreadyExists));
					return;
				} else {
					filterValid = true;
					updateStatus(new StatusInfo());
				}
			}
		});

		return container;
	}

