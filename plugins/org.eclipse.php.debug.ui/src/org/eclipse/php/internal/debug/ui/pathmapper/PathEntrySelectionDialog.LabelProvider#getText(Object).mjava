		public String getText(Object element) {
			if (element == EXTERNAL_CONTAINER) {
				return "External Files";
			}

			if (element instanceof IBuildpathEntry) {
				IBuildpathEntry includePathEntry = (IBuildpathEntry) element;
				return EnvironmentPathUtils.getLocalPathString(includePathEntry.getPath());
			}

			if (!(element instanceof PathEntry)) {
				return super.getText(element);
			}

			PathEntry entry = (PathEntry) element;
			String path = entry.getResolvedPath();

			if (entry.getType() == Type.WORKSPACE) {
				VirtualPath tmpPath = entry.getAbstractPath().clone();
				tmpPath.removeFirstSegment();
				path = tmpPath.toString();
				if (path.startsWith("/")) {
					path = path.substring(1);
				}
			}
			if (entry.getType() == Type.INCLUDE_FOLDER || entry.getType() == Type.INCLUDE_VAR) {
				IBuildpathEntry includePathEntry = (IBuildpathEntry) entry.getContainer();
				String includePath = EnvironmentPathUtils.getLocalPathString(includePathEntry.getPath());
				// TODO : fix once DLTK exposes variables
//				if (includePathEntry.getEntryKind() == IBuildpathEntry.IPE_VARIABLE) {
//					IPath p = IncludePathVariableManager.instance().resolveVariablePath(includePath);
//					if (p != null) {
//						includePath = p.toOSString();
//					}
//				}
				if (includePath != null && path.startsWith(includePath)) {
					path = path.substring(includePath.length());
				}
				if (path.startsWith("/")) {
					path = path.substring(1);
				}
			}
			return path;
		}

