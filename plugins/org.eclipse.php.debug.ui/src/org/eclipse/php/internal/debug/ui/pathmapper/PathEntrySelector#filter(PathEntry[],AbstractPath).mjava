	public PathEntry[] filter(final PathEntry[] entries, final AbstractPath remotePath) {
		final List<PathEntry> l = new LinkedList<PathEntry>();
		Runnable r = new Runnable() {
			public void run() {
				// grab usable shell from somewhere:
				Shell shell = Display.getDefault().getActiveShell();
				if (shell == null) {
					IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
					if (window == null) {
						IWorkbenchWindow windows[] = PlatformUI.getWorkbench().getWorkbenchWindows();
						window = windows[0];
					}
					if (window != null) {
						shell = window.getShell();
					}
				}
				PathEntrySelectionDialog selectDialog = new PathEntrySelectionDialog(shell, remotePath, entries);
				if (selectDialog.open() == Window.OK) {
					PathEntry pathEntry = (PathEntry) selectDialog.getFirstResult();
					if (pathEntry != null) {
						l.add(pathEntry);
					}
				}
			}
		};
		if (Display.getCurrent() != null) {
			r.run();
		} else {
			Display.getDefault().syncExec(r);
		}
		return l.toArray(new PathEntry[l.size()]);
	}

