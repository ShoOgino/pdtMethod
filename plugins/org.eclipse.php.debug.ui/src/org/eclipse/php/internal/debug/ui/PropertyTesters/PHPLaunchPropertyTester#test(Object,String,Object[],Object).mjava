	/**
	 * Executes the property test determined by the parameter <code>property</code>. 
	 * 
	 * @param receiver the receiver of the property test
	 * @param property the property to test
	 * @param args additional arguments to evaluate the property. If no arguments
	 *  are specified in the <code>test</code> expression an array of length 0
	 *  is passed
	 * @param expectedValue the expected value of the property. The value is either 
	 *  of type <code>java.lang.String</code> or a boxed base type. If no value was
	 *  specified in the <code>test</code> expressions then <code>null</code> is passed
	 * 
	 * @return returns <code>true<code> if the property is equal to the expected value; 
	 *  otherwise <code>false</code> is returned
	 */
	public boolean test(Object receiver, String property, Object[] args, Object expectedValue) {
		if (receiver instanceof List) {
			List<?> list = (List<?>) receiver;
			if (list.size() > 0) {
				Object obj = list.get(0);
				
				if (PROPERTY.equals(property)) {
					if (obj instanceof IEditorInput) {
						IModelElement modelElement = DLTKUIPlugin.getEditorInputModelElement((IEditorInput) obj);
						if (modelElement != null) {
							return PHPModelUtil.isPhpElement(modelElement);
						}
					}
					else if (obj instanceof IAdaptable) {
						IResource resource = (IResource) ((IAdaptable) obj).getAdapter(IResource.class);
						if (resource instanceof IFile) {
							return PHPModelUtil.isPhpFile((IFile)resource);
						}
						IModelElement modelElement = (IModelElement) ((IAdaptable) obj).getAdapter(IModelElement.class);
						if (modelElement != null) {
							return PHPModelUtil.isPhpElement(modelElement);
						}
					}
				}
			}
		}
		return false;
	}

