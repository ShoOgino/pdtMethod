	/**
	 * Returns a selected {@link IResource} from a user dialog. 
	 * 
	 * @param project The project to display
	 * @param shell A Shell
	 * @param fileExtensions	The required file extension
	 * @param requiredNatures	The required nature
	 * @param allowExternalFiles Allow selection from an external files that are currently opened in the editor
	 * @return A selected IResource
	 */
	public static IResource getFileFromDialog(IProject project, Shell shell, String[] fileExtensions, String[] requiredNatures, boolean allowExternalFiles) {
		LaunchUtilities inst = new LaunchUtilities();

		ApplicationFileSelectionDialog d = new ApplicationFileSelectionDialog(shell, inst.new WebLaunchLabelProvider(), PHPDebugUIMessages.LaunchUtilities_selectFile, PHPDebugUIMessages.LaunchUtilities_selectProjectFile, fileExtensions, requiredNatures, false, allowExternalFiles);

		if (project != null) {
			d.setInput(project);
			d.setInitialSelection(project);
		} else {
			IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
			d.setInput(root);
			d.setInitialSelection(root);
		}

		d.setAllowMultiple(false);
		d.setComparator(new ResourceSorter(ResourceSorter.TYPE));
		d.open();

		if (d.getReturnCode() == Window.OK) {
			Object[] targetFiles = d.getResult();
			Object target = targetFiles[0];

			return (IResource) target;
		}

		return null;
	}

