	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.debug.ui.ILaunchShortcut#launch(org.eclipse.ui.IEditorPart,
	 * java.lang.String)
	 */
	@Override
	public void launch(IEditorPart editor, String mode) {
		IEditorInput input = editor.getEditorInput();
		IFile file = input.getAdapter(IFile.class);
		if (file == null) {
			IPath path = null;
			try {
				if (input instanceof IStorageEditorInput) {
					IStorageEditorInput editorInput = (IStorageEditorInput) input;
					IStorage storage = editorInput.getStorage();
					path = storage.getFullPath();
				} else if (input instanceof IURIEditorInput) {
					path = URIUtil.toPath(((IURIEditorInput) input).getURI());
				} else if (input instanceof NonExistingPHPFileEditorInput) {
					// handle untitled document debugging
					// first save the file to the disk and after that set the
					// document as dirty
					if (editor instanceof ITextEditor) {
						ITextEditor textEditor = (ITextEditor) editor;
						final TextFileDocumentProvider documentProvider = (TextFileDocumentProvider) textEditor
								.getDocumentProvider();
						final IDocument document = documentProvider.getDocument(input);
						documentProvider.saveDocument(null, input, document, true);
						// set document dirty
						document.replace(0, 0, ""); //$NON-NLS-1$
					}
					path = ((NonExistingPHPFileEditorInput) input).getPath(input);// Untitled
					// dummy
					// path
				}
				if (path != null) {
					File systemFile = new File(path.toOSString());
					if (systemFile.exists()) {
						searchAndLaunch(new Object[] { systemFile }, mode, getPHPExeLaunchConfigType());
					}
				}
			} catch (Exception e) {
				Logger.logException(e);
			}
		} else {
			searchAndLaunch(new Object[] { file }, mode, getPHPExeLaunchConfigType());
		}
	}

