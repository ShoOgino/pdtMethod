	private void initializeFields() {
		Iterator<String> debuggers = debuggersIds.iterator();
		while (debuggers.hasNext()) {
			String id = debuggers.next();
			String debuggerName = PHPDebuggersRegistry.getDebuggerName(id);
			fDebuggers.add(debuggerName);
		}
		if (fEditedPHPexe == null) {
			fPHPexeName.setText(""); //$NON-NLS-1$
			fPHPRoot.setText(""); //$NON-NLS-1$
			String defaultDebuggerId = PHPDebuggersRegistry.getDefaultDebuggerId();
			if (defaultDebuggerId != null) {
				int index = fDebuggers.indexOf(PHPDebuggersRegistry.getDebuggerName(defaultDebuggerId));
				fDebuggers.select(index);
			} else {
				if (fDebuggers.getItemCount() > 0) {
					fDebuggers.select(0);
				} else {
					hideDebuggersCombo();
				}
			}
		} else {
			fPHPexeName.setText(fEditedPHPexe.getName());
			fPHPexeName.setEnabled(fEditedPHPexe.isEditable());
			fPHPRoot.setText(fEditedPHPexe.getLocation().getAbsolutePath());
			fPHPRoot.setEnabled(fEditedPHPexe.isEditable());
			String debuggerID = fEditedPHPexe.getDebuggerID();
			fDebuggers.setEnabled(fEditedPHPexe.isEditable());
			fDebuggersLabel.setEnabled(fEditedPHPexe.isEditable());
			int index = fDebuggers.indexOf(PHPDebuggersRegistry.getDebuggerName(debuggerID));
			if (index > -1) {
				fDebuggers.select(index);
			} else {
				if (fDebuggers.getItemCount() > 0) {
					fDebuggers.select(0);
				} else {
					hideDebuggersCombo();
				}
			}
		}
		setPHPexeNameStatus(validatePHPexeName());
		setEditingEnabledStatus(validateEditingEnabled());
		updateStatusLine();
	}

