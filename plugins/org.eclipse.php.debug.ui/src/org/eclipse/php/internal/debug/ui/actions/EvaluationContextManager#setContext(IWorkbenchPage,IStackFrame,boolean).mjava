	/**
	 * Sets the evaluation context for the given page, and notes that a valid
	 * execution context exists.
	 * 
	 * @param page
	 * @param frame
	 */
	private void setContext(IWorkbenchPage page, IStackFrame frame, boolean instOf) {
		if (fContextsByPage == null) {
			fContextsByPage = new HashMap();
		}
		fContextsByPage.put(page, frame);
		System.setProperty(DEBUGGER_ACTIVE, "true"); //$NON-NLS-1$
		// if (frame.canForceReturn()) {
		// System.setProperty(SUPPORTS_FORCE_RETURN, "true");
		// } else {
		// System.setProperty(SUPPORTS_FORCE_RETURN, "false");
		// }
		// if
		// (((IJavaDebugTarget)frame.getDebugTarget()).supportsInstanceRetrieval()){
		// System.setProperty(SUPPORTS_INSTANCE_RETRIEVAL, "true");
		// } else {
		// System.setProperty(SUPPORTS_INSTANCE_RETRIEVAL, "false");
		// }
		// if (instOf) {
		// System.setProperty(INSTANCE_OF_IJAVA_STACK_FRAME, "true");
		// } else {
		// System.setProperty(INSTANCE_OF_IJAVA_STACK_FRAME, "false");
		// }
	}

