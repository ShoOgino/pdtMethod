	/* (non-Javadoc)
	 * @see org.eclipse.ui.IWorkbenchPart#createPartControl(org.eclipse.swt.widgets.Composite)
	 */
	public void createPartControl(Composite parent) {
	    Composite container = new Composite(parent,SWT.NONE);

	    GridLayout layout = new GridLayout();
	    layout.numColumns=1;
	    layout.makeColumnsEqualWidth=true;
	    layout.marginHeight = 0;
	    layout.marginWidth = 0;
	    container.setLayout(layout);
	    RowLayout rowLayout =new RowLayout();
	    rowLayout.spacing=1;

	    GridData gridData=new GridData();
		gridData.grabExcessHorizontalSpace=true;
		gridData.grabExcessVerticalSpace=true;
		gridData.horizontalAlignment=SWT.FILL;
		gridData.verticalAlignment=SWT.FILL;

	    try {
	    	swtBrowser = new Browser(container,SWT.NONE);
	    	swtBrowser.setLayoutData(gridData);
	    } catch (SWTError error) {
	    	swtBrowser = null;
	    	Label label = new Label(container, SWT.WRAP);
	    	label.setText(PHPDebugUIMessages.DebugBrowserView_swtBrowserNotAvailable0);
	    	label.setLayoutData(gridData);
	    }

		debugViewHelper = new DebugViewHelper();

        terminateListener = new IDebugEventSetListener() {
        	IPHPDebugTarget target;
			public void handleDebugEvents(DebugEvent[] events) {
				if (events != null) {
					int size = events.length;
					for (int i = 0; i < size; i++) {
						Object obj = events[i].getSource();

						if(!(obj instanceof IPHPDebugTarget))
							continue;

						if ( events[i].getKind() == DebugEvent.TERMINATE) {
							target = (IPHPDebugTarget)obj;
							Job job = new UIJob("debug output") { //$NON-NLS-1$
								public IStatus runInUIThread(IProgressMonitor monitor) {
									update(target);
									return Status.OK_STATUS;
								}
							};
							job.schedule();
						}
					}
				}
			}
		};
		DebugPlugin.getDefault().addDebugEventListener(terminateListener);
		getSite().getWorkbenchWindow().getSelectionService().addSelectionListener(IDebugUIConstants.ID_DEBUG_VIEW, this);


        if (fPartListener == null) {
            fPartListener= new DebugViewPartListener();
            getSite().getPage().addPartListener(fPartListener);
        }
        PlatformUI.getWorkbench().getHelpSystem().setHelp(parent, IPHPHelpContextIds.BROWSER_OUTPUT_VIEW);
	}

