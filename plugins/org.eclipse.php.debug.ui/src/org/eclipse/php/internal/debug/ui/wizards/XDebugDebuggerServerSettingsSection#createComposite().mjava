	protected Composite createComposite() {
		// Main composite
		Composite settingsComposite = new Composite(compositeFragment, SWT.NONE);
		GridLayout scLayout = new GridLayout();
		scLayout.marginHeight = 0;
		scLayout.marginWidth = 0;
		settingsComposite.setLayout(scLayout);
		GridData scGridData = new GridData(SWT.FILL, SWT.FILL, true, true);
		scGridData.horizontalSpan = 2;
		settingsComposite.setLayoutData(scGridData);
		// Connection group
		Group connectionGroup = new Group(settingsComposite, SWT.NONE);
		connectionGroup.setFont(compositeFragment.getFont());
		GridLayout cgLayout = new GridLayout(2, false);
		connectionGroup.setLayout(cgLayout);
		GridData cgGridData = new GridData(GridData.FILL_HORIZONTAL);
		connectionGroup.setLayoutData(cgGridData);
		connectionGroup
				.setText(Messages.XDebugDebuggerSettingsSection_Connection_settings);
		// Client port
		Label clientPortLabel = new Label(connectionGroup, SWT.None);
		clientPortLabel
				.setText(Messages.XDebugDebuggerSettingsSection_Client_port);
		final Text clientPortText = new Text(connectionGroup, SWT.BORDER);
		GridData cptLayoutData = new GridData(GridData.FILL_HORIZONTAL);
		clientPortText.setLayoutData(cptLayoutData);
		clientPortText.setText(settingsWorkingCopy
				.getAttribute(PROP_CLIENT_PORT));
		clientPortText.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				String port = clientPortText.getText();
				settingsWorkingCopy.setAttribute(PROP_CLIENT_PORT, port);
				validate();
			}
		});
		// Advanced sub-group
		Group advancedSubGroup = new Group(connectionGroup, SWT.NONE);
		advancedSubGroup.setLayout(new GridLayout(2, false));
		GridData dbgpGridData = new GridData(GridData.FILL_HORIZONTAL);
		dbgpGridData.horizontalSpan = 2;
		advancedSubGroup.setLayoutData(dbgpGridData);
		advancedSubGroup
				.setText(Messages.XDebugDebuggerSettingsSection_Advanced_group);
		// Enable DBGp proxy
		final Button enableProxy = new Button(advancedSubGroup, SWT.CHECK);
		GridData epGridData = new GridData(SWT.LEFT, SWT.CENTER, true, false);
		epGridData.horizontalSpan = 2;
		enableProxy.setLayoutData(epGridData);
		enableProxy
				.setText(Messages.XDebugDebuggerSettingsSection_Enable_DBGp_proxy);
		// Proxy IDE key
		Label proxyIdeKeyLabel = new Label(advancedSubGroup, SWT.None);
		proxyIdeKeyLabel
				.setText(Messages.XDebugDebuggerSettingsSection_Proxy_ide_key);
		final Text proxyIdeKeyText = new Text(advancedSubGroup, SWT.BORDER);
		GridData pikLayoutData = new GridData(GridData.FILL_HORIZONTAL);
		proxyIdeKeyText.setLayoutData(pikLayoutData);
		proxyIdeKeyText.setText(settingsWorkingCopy
				.getAttribute(PROP_PROXY_IDE_KEY));
		proxyIdeKeyText.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				String ideKey = proxyIdeKeyText.getText();
				settingsWorkingCopy.setAttribute(PROP_PROXY_IDE_KEY, ideKey);
				validate();
			}
		});
		// Proxy address
		Label proxyAddressLabel = new Label(advancedSubGroup, SWT.None);
		proxyAddressLabel
				.setText(Messages.XDebugDebuggerSettingsSection_Proxy_address);
		final Text proxyAddressText = new Text(advancedSubGroup, SWT.BORDER);
		GridData patLayoutData = new GridData(GridData.FILL_HORIZONTAL);
		proxyAddressText.setLayoutData(patLayoutData);
		proxyAddressText.setText(settingsWorkingCopy
				.getAttribute(PROP_PROXY_ADDRESS));
		proxyAddressText.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				String proxyAddress = proxyAddressText.getText();
				settingsWorkingCopy.setAttribute(PROP_PROXY_ADDRESS,
						proxyAddress);
				validate();
			}
		});
		// Set up enabled/disabled for proxy
		enableProxy.addSelectionListener(new SelectionListener() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				widgetDefaultSelected(e);
			}

			@Override
			public void widgetDefaultSelected(SelectionEvent e) {
				proxyIdeKeyText.setEnabled(enableProxy.getSelection());
				proxyAddressText.setEnabled(enableProxy.getSelection());
				settingsWorkingCopy.setAttribute(PROP_PROXY_ENABLE,
						String.valueOf(enableProxy.getSelection()));
				validate();
			}
		});
		boolean isProxyEnabled = Boolean.valueOf(settingsWorkingCopy
				.getAttribute(PROP_PROXY_ENABLE));
		enableProxy.setSelection(isProxyEnabled);
		proxyIdeKeyText.setEnabled(isProxyEnabled);
		proxyAddressText.setEnabled(isProxyEnabled);
		return settingsComposite;
	}

