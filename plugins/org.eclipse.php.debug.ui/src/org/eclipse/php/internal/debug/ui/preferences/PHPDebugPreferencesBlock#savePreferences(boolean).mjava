	private void savePreferences(boolean isProjectSpecific) {
		// TODO - Might do the same for the default server
		IEclipsePreferences prefs = PHPDebugPlugin.getInstancePreferences();
		IScopeContext[] preferenceScopes = createPreferenceScopes(propertyPage);
		IEclipsePreferences debugUINode = preferenceScopes[0].getNode(getPreferenceNodeQualifier());
		String phpExe = fDefaultPHPExe.getText();
		IProject project = getProject(propertyPage);
		if (isProjectSpecific && debugUINode != null && preferenceScopes[0] instanceof ProjectScope
				&& project != null) {
			debugUINode.putBoolean(PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE, fStopAtFirstLine.getSelection());
			if (!PHPDebugUIMessages.PhpDebugPreferencePage_noExeDefined.equals(phpExe)) {
				debugUINode.put(PHPDebugCorePreferenceNames.DEFAULT_PHP, phpExe);
			}
			debugUINode.put(PHPDebugCorePreferenceNames.TRANSFER_ENCODING, fDebugEncodingSettings.getText());
			debugUINode.put(PHPDebugCorePreferenceNames.OUTPUT_ENCODING, fOutputEncodingSettings.getText());

			ServersManager.setDefaultServer(project, fDefaultServer.getText());
			Server server = ServersManager.getServer(fDefaultServer.getText());
			setBasePathValue(project, fDefaultBasePath.getText());
		} else {
			if (project == null) {
				// Workspace settings
				prefs.putBoolean(PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE, fStopAtFirstLine.getSelection());
				prefs.put(PHPDebugCorePreferenceNames.TRANSFER_ENCODING, fDebugEncodingSettings.getText());
				prefs.put(PHPDebugCorePreferenceNames.OUTPUT_ENCODING, fOutputEncodingSettings.getText());
				if (!PHPDebugUIMessages.PhpDebugPreferencePage_noExeDefined.equals(phpExe)) {
					prefs.put(PHPDebugCorePreferenceNames.DEFAULT_PHP, phpExe);
				}
				ServersManager.setDefaultServer(project, fDefaultServer.getText());
			} else {
				if (debugUINode != null) {
					// Removed a project specific
					debugUINode.remove(PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE);
					debugUINode.remove(PHPDebugCorePreferenceNames.DEFAULT_PHP);
					ServersManager.setDefaultServer(project, (Server) null);
					debugUINode.remove(PHPDebugCorePreferenceNames.TRANSFER_ENCODING);
					debugUINode.remove(PHPDebugCorePreferenceNames.OUTPUT_ENCODING);
					// if (defaultBasePath != null) {
					// prefs.put(PHPDebugCorePreferenceNames.DEFAULT_BASE_PATH,
					// defaultBasePath);
					// }
				}
			}
		}
		try {
			if (debugUINode != null) {
				debugUINode.flush();
			}
			prefs.flush();
		} catch (BackingStoreException e) {
			Logger.logException(e);
		}
	}

