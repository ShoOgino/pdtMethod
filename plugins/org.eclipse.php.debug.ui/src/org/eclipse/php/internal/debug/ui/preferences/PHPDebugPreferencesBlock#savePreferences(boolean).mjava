	private void savePreferences(boolean isProjectSpecific) {
		// TODO - Might do the same for the default server
		Preferences prefs = PHPProjectPreferences.getModelPreferences();
		IScopeContext[] preferenceScopes = createPreferenceScopes(propertyPage);
		IEclipsePreferences debugUINode = preferenceScopes[0]
				.getNode(getPreferenceNodeQualifier());
		String phpExe = fDefaultPHPExe.getText();
		IProject project = getProject(propertyPage);
		if (isProjectSpecific && debugUINode != null
				&& preferenceScopes[0] instanceof ProjectScope
				&& project != null) {
			debugUINode.putBoolean(
					PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE,
					fStopAtFirstLine.getSelection());
			if (!PHPDebugUIMessages.PhpDebugPreferencePage_noExeDefined
					.equals(phpExe)) {
				debugUINode
						.put(PHPDebugCorePreferenceNames.DEFAULT_PHP, phpExe);
			}
			debugUINode.put(PHPDebugCorePreferenceNames.TRANSFER_ENCODING,
					fDebugEncodingSettings.getText());
			debugUINode.put(PHPDebugCorePreferenceNames.OUTPUT_ENCODING,
					fOutputEncodingSettings.getText());

			ServersManager.setDefaultServer(project, fDefaultServer.getText());
			Server server = ServersManager.getServer(fDefaultServer.getText());
			setBasePathValue(project, fDefaultBasePath.getText());
		} else {
			if (project == null) {
				// Workspace settings
				prefs.setValue(PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE,
						fStopAtFirstLine.getSelection());
				prefs.setValue(PHPDebugCorePreferenceNames.TRANSFER_ENCODING,
						fDebugEncodingSettings.getText());
				prefs.setValue(PHPDebugCorePreferenceNames.OUTPUT_ENCODING,
						fOutputEncodingSettings.getText());
				if (!PHPDebugUIMessages.PhpDebugPreferencePage_noExeDefined
						.equals(phpExe)) {
					prefs.setValue(PHPDebugCorePreferenceNames.DEFAULT_PHP,
							phpExe);
				}
				ServersManager.setDefaultServer(project,
						fDefaultServer.getText());
			} else {
				if (debugUINode != null) {
					// Removed a project specific
					debugUINode
							.remove(PHPDebugCorePreferenceNames.STOP_AT_FIRST_LINE);
					debugUINode.remove(PHPDebugCorePreferenceNames.DEFAULT_PHP);
					ServersManager.setDefaultServer(project, (Server) null);
					debugUINode
							.remove(PHPDebugCorePreferenceNames.TRANSFER_ENCODING);
					debugUINode
							.remove(PHPDebugCorePreferenceNames.OUTPUT_ENCODING);
					prefs.setValue(
							PHPDebugCorePreferenceNames.DEFAULT_BASE_PATH,
							defaultBasePath);
				}
			}
		}
		try {
			debugUINode.flush();
			PHPDebugPlugin.getDefault().savePluginPreferences();
		} catch (BackingStoreException e) {
			Logger.logException(e);
		}
	}

