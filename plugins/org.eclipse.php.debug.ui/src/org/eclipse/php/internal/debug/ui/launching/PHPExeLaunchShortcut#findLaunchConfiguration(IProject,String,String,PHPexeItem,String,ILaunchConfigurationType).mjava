	/**
	 * Locate a configuration to relaunch for the given type. If one cannot be
	 * found, create one.
	 * 
	 * @return a re-useable config or <code>null</code> if none
	 */
	protected static ILaunchConfiguration findLaunchConfiguration(
			IProject phpProject, String phpPathString,
			String phpFileFullLocation, PHPexeItem defaultEXE, String mode,
			ILaunchConfigurationType configType) {
		ILaunchConfiguration config = null;

		try {
			ILaunchConfiguration[] configs = DebugPlugin.getDefault()
					.getLaunchManager().getLaunchConfigurations(configType);

			int numConfigs = configs == null ? 0 : configs.length;
			for (int i = 0; i < numConfigs; i++) {
				String fileName = configs[i].getAttribute(
						IPHPDebugConstants.ATTR_FILE, (String) null);
				String exeName = configs[i].getAttribute(
						IPHPDebugConstants.ATTR_EXECUTABLE_LOCATION,
						(String) null);
				String iniPath = configs[i].getAttribute(
						IPHPDebugConstants.ATTR_INI_LOCATION, (String) null);
				PHPexeItem item = PHPexes.getInstance().getItemForFile(exeName,
						iniPath);

				if (phpPathString.equals(fileName) && defaultEXE.equals(item)) {
					config = configs[i];
					break;
				}
			}

			if (config == null) {
				config = createConfiguration(phpProject, phpPathString,
						phpFileFullLocation, defaultEXE, configType);
			}
		} catch (CoreException ce) {
			ce.printStackTrace();
		}
		return config;
	}

