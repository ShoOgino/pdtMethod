	/**
	 * Display the given evaluation result.
	 */
	protected void displayResult(final IWatchExpressionResult result) {
		IWorkbenchPart part = getTargetPart();
		final StyledText styledText = getStyledText(part);
		if (styledText != null) {
			expression = new IExpression() {

				@Override
				public String getModelIdentifier() {
					return getDebugTarget().getModelIdentifier();
				}

				@Override
				public ILaunch getLaunch() {
					return getDebugTarget().getLaunch();
				}

				@SuppressWarnings({ "unchecked", "rawtypes" })
				@Override
				public Object getAdapter(Class adapter) {
					return AdapterManager.getDefault().getAdapter(this, adapter);
				}

				@Override
				public String getExpressionText() {
					return result.getExpressionText();
				}

				@Override
				public IValue getValue() {
					return result.getValue();
				}

				@Override
				public IDebugTarget getDebugTarget() {
					IValue value = getValue();
					if (value != null) {
						return getValue().getDebugTarget();
					} else if (result instanceof IWatchExpressionResultExtension) {
						return ((IWatchExpressionResultExtension) result).getDebugTarget();
					}
					// An expression should never be created with a null value
					// *and*
					// a null result.
					return null;
				}

				@Override
				public void dispose() {

				}
			};
			PHPDebugUIPlugin.getStandardDisplay().asyncExec(new Runnable() {
				@Override
				public void run() {
					showPopup(styledText);
				}
			});
		}
		evaluationCleanup();
	}

