	/**
	 * Creates this block's control in the given control.
	 * 
	 * @param anscestor containing control
	 */
	public void createControl(final Composite ancestor) {
		final Font font = ancestor.getFont();
		Composite composite = null;
		if (isTitled) {
			Group g = new Group(ancestor, SWT.NULL);
			if (fTitle == null)
				fTitle = PHPDebugUIMessages.PHPexesComboBlock_3;
			g.setText(fTitle);
			composite = g;
		} else {
			composite = new Composite(ancestor, SWT.NULL);
		}
		GridLayout layout = new GridLayout(4, true);
		composite.setLayout(layout);
		composite.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		composite.setFont(font);
		fControl = composite;

		GridData data;
		fCombo = new Combo(composite, SWT.DROP_DOWN | SWT.READ_ONLY);
		fCombo.setFont(font);
		data = new GridData(GridData.FILL_HORIZONTAL);
		data.horizontalSpan = 3;
		fCombo.setLayoutData(data);
		fCombo.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(final SelectionEvent e) {
				setPHPexe(getPHPexe());
			}
		});

		link = new Link(composite, SWT.NONE);
		link.setFont(font);
		data = new GridData(SWT.BEGINNING, SWT.BOTTOM, true, false);
		data.horizontalSpan = 1;
		link.setLayoutData(data);
		link.setText(PHPDebugUIMessages.PhpDebugPreferencePage_installedPHPsLink);
		link.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				PHPexeItem selected = getPHPexe();
				new ShowPHPsPreferences().run(null);
				fillWithWorkspacePHPexes();
				if (phpExecutables.contains(selected)) {
					String name = selected.getName() + " (" + selected.getPhpEXE().toString() + ")"; //$NON-NLS-1$ //$NON-NLS-2$
					fCombo.select(fCombo.indexOf(name));
				}
			}
		});

		if (getPHPs(true).getDefaultItem() == null) {
			MessageDialog.openInformation(getShell(), PHPDebugUIMessages.PHPsComboBlock_NoPHPsTitle, PHPDebugUIMessages.PHPsComboBlock_noPHPsMessage);
			new ShowPHPsPreferences().run(null);
		}
		fillWithWorkspacePHPexes();
	}

