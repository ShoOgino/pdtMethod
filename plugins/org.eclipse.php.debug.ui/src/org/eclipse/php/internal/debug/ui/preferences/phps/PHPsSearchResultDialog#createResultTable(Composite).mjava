	private Control createResultTable(Composite composite) {
		// Parent composite layout
		GridLayout compositeLayout = new GridLayout();
		compositeLayout.marginHeight = 0;
		compositeLayout.marginWidth = 0;
		compositeLayout.numColumns = 2;
		composite.setLayout(compositeLayout);
		// Result table composite
		Composite tableComposite = new Composite(composite, SWT.NONE);
		GridLayout tableCompositeLayout = new GridLayout();
		tableCompositeLayout.marginHeight = 0;
		tableCompositeLayout.marginWidth = 0;
		tableComposite.setLayout(tableCompositeLayout);
		GridData tcGridData = new GridData(SWT.FILL, SWT.FILL, true, true);
		tcGridData.widthHint = 600;
		tableComposite.setLayoutData(tcGridData);
		// Buttons composite
		Composite buttonsComposite = new Composite(composite, SWT.NONE);
		GridLayout buttonsCompositeLayout = new GridLayout();
		buttonsCompositeLayout.marginHeight = 0;
		buttonsCompositeLayout.marginWidth = 0;
		buttonsComposite.setLayout(buttonsCompositeLayout);
		buttonsComposite.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false,
				false));
		GridData tableCompositeGridData = new GridData(SWT.FILL, SWT.FILL,
				true, true);
		Table resultTable = new Table(tableComposite, SWT.CHECK | SWT.SINGLE
				| SWT.FULL_SELECTION | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
		resultTable.setLayoutData(tableCompositeGridData);
		resultTable.setHeaderVisible(true);
		resultTable.setLinesVisible(true);
		resultTableViewer = new CheckboxTableViewer(resultTable);
		resultTableViewer.setLabelProvider(new LabelProvider());
		resultTableViewer.setContentProvider(new ArrayContentProvider());
		TableColumn nameColumn = new TableColumn(resultTable, SWT.LEFT);
		nameColumn.setText(Messages.PHPsSearchResultDialog_Name);
		TableColumn debuggerColumn = new TableColumn(resultTable, SWT.LEFT);
		debuggerColumn.setText(Messages.PHPsSearchResultDialog_Debugger_column);
		TableColumn locationColumn = new TableColumn(resultTable, SWT.LEFT);
		locationColumn.setText(Messages.PHPsSearchResultDialog_Location);
		TableColumnLayout clayout = new TableColumnLayout();
		clayout.setColumnData(nameColumn, new ColumnWeightData(28, true));
		clayout.setColumnData(debuggerColumn, new ColumnWeightData(22, true));
		clayout.setColumnData(locationColumn, new ColumnWeightData(50, true));
		resultTable.getParent().setLayout(clayout);
		resultTableViewer.setInput(results);
		resultTableViewer.setAllChecked(true);

		Button selectAll = new Button(buttonsComposite, SWT.PUSH);
		selectAll.setText(Messages.PHPsSearchResultDialog_Select_all);
		selectAll.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
		selectAll.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				resultTableViewer.setAllChecked(true);
			}
		});
		Button deselectAll = new Button(buttonsComposite, SWT.PUSH);
		deselectAll.setText(Messages.PHPsSearchResultDialog_Deselect_all);
		deselectAll
				.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
		deselectAll.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				resultTableViewer.setAllChecked(false);
			}
		});
		return composite;
	}

