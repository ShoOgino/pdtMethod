	// Returns the php debug target that is in contex.
	// In case that
	protected PHPDebugTarget getDebugTarget() {
		try {
			IAdaptable adaptable = DebugUITools.getDebugContext();
			if (adaptable instanceof PHPStackFrame) {
				PHPStackFrame stackFrame = (PHPStackFrame) adaptable;
				IEditorInput ei = getEditorPart().getEditorInput();
				if (ei instanceof FileEditorInput) {
					FileEditorInput fi = (FileEditorInput) getEditorPart().getEditorInput();
					String launchProjectName = stackFrame.getLaunch().getLaunchConfiguration().getAttribute(IPHPConstants.PHP_Project, (String) null);
					String fileProjectName = '/' + fi.getFile().getProject().getName();

					// First, check if the project name is the same.
					if (!launchProjectName.equals(fileProjectName)) {
						return null;
					}
					// Check for the file path within the project
					String fileInDebug = stackFrame.getSourceName();
					String fileInProject = fi.getFile().getProjectRelativePath().toString();
					if (fileInDebug != null && fileInDebug.endsWith('/' + fileInProject) || fileInDebug.equals(fileInProject)) {
						PHPDebugTarget debugTarget = (PHPDebugTarget) stackFrame.getDebugTarget();
						return debugTarget;
					}
				} else {
					// File on the include Path
					PHPDebugTarget debugTarget = (PHPDebugTarget) stackFrame.getDebugTarget();
					return debugTarget;
				}

			}
		} catch (CoreException e) {
			Logger.logException("Error retrieving the PHPDebugTarget.\n", e);
		}
		return null;
	}

