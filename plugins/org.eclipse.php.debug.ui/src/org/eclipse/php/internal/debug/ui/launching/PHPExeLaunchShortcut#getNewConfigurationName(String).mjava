	/**
	 * Returns a name for a newly created launch configuration according to the
	 * given file name. In case the name generation fails, return the
	 * "New_configuration" string.
	 * 
	 * @param fileName
	 *            The original file name that this shortcut shoul execute.
	 * @return The new configuration name, or "New_configuration" in case it fails
	 *         for some reason.
	 */
	protected static String getNewConfigurationName(String fileName) {
		String configurationName = PHPDebugUIMessages.PHPExeLaunchShortcut_0;
		try {
			IPath path = Path.fromOSString(fileName);

			NonExistingPHPFileEditorInput editorInput = NonExistingPHPFileEditorInput.findEditorInput(path);
			if (editorInput != null) {
				path = new Path(editorInput.getName());
			}

			String fileExtention = path.getFileExtension();
			String lastSegment = path.lastSegment();
			if (lastSegment != null) {
				if (fileExtention != null) {
					lastSegment = lastSegment.replaceFirst("." + fileExtention, //$NON-NLS-1$
							""); //$NON-NLS-1$
				}
				configurationName = lastSegment;
			}
		} catch (Exception e) {
			Logger.log(Logger.WARNING_DEBUG, "Could not generate configuration name for " + fileName //$NON-NLS-1$
					+ ".\nThe default name will be used.", e); //$NON-NLS-1$
		}
		return DebugPlugin.getDefault().getLaunchManager().generateUniqueLaunchConfigurationNameFrom(configurationName);
	}

