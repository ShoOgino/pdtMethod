	@Override
	protected void reveal(final ITextEditor textEditor) {
		if (fLineNumber >= 0) {
			try {
				final IDocument document = textEditor.getDocumentProvider().getDocument(textEditor.getEditorInput());
				int startPosition = document.getLineOffset(fLineNumber - 1);
				int length = document.getLineLength(fLineNumber - 1);
				final String line = document.get(startPosition, length);

				int methodPosition;
				if (fMethodName != null && (methodPosition = line.indexOf(fMethodName)) == line.lastIndexOf(fMethodName)
						&& methodPosition >= 0) {
					startPosition += methodPosition;
					length = fMethodName.length();
				} else {
					final String trimmedLine = line.trim();
					startPosition += line.indexOf(trimmedLine);
					length = trimmedLine.length();
				}
				textEditor.selectAndReveal(startPosition, length);
			} catch (final BadLocationException x) {
				// marker refers to invalid text position -> do nothing
			}
		}
	}

