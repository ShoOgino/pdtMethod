	private String[] open(boolean allowMultiple, final Class<?>[] visibleTypes, final Class<?> selectable) {

		ViewerFilter filter = new ViewerFilter() {

			@Override
			public boolean select(Viewer viewer, Object parentElement, Object element) {
				for (int i = 0; i < visibleTypes.length; i++) {
					if (visibleTypes[i].isAssignableFrom(element.getClass())) {
						return true;
					}
				}
				return false;
			}

		};
		dialog.addFilter(filter);

		dialog.setAllowMultiple(allowMultiple);

		if (dialog.open() == Window.OK) {
			Object[] objects = dialog.getResult();
			if (objects.length == 0) {
				return null;
			}
			String[] paths = new String[objects.length];
			for (int i = 0; i < objects.length; i++) {
				Object obj = objects[i];
				if (obj instanceof IResource) {
					IResource file = (IResource) objects[i];
					paths[i] = file.getFullPath().toString();
				} else if (obj instanceof IPath) {
					paths[i] = ((IPath) obj).toPortableString();
				}

			}
			return paths;
		}

		return null;
	}

