	@Override
	protected void superClassChanged() {
		super.superClassChanged();
		if (!fSuperClassStatus.isOK()) {
			return;
		}

		final StatusInfo status = new StatusInfo();
		String elementName = getSuperClassName();

		final IContainer root = getTestContainer();
		if (PHP_UNIT_CASE_BASE_CLASS_CACHE == null && root != null) {
			findTestCases(DLTKCore.create(root.getProject()));
		}
		boolean result = false;
		if (PHP_UNIT_CASE_BASE_CLASS_CACHE != null) {
			for (IType type : PHP_UNIT_CASE_BASE_CLASS_CACHE) {
				if (type.getElementName().equals(elementName)) {
					result = true;
				}
			}
			if (!result) {
				status.setError(PHPUnitMessages.PHPUnitWizardPage_21);
			}
		}
		fSuperClassStatus = status;
		updateStatus(getStatusList());

	}

