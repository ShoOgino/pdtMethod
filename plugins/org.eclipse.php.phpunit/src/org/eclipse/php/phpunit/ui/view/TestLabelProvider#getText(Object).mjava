	@Override
	public String getText(final Object element) {
		final PHPUnitElement test = (PHPUnitElement) element;
		String fileName = test.getLocalFile();
		if (StringUtils.isNotEmpty(fileName)) {
			IFile file = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(new Path(fileName));
			if (file == null) {
				file = view.getProject().getFile(fileName);
			}
			if (file != null) {
				fileName = file.getProjectRelativePath().toString();
			}
		}

		final int line = test.getLine();
		if (test instanceof PHPUnitTest) {
			String name = ((PHPUnitTest) test).getName();
			if (StringUtils.isEmpty(name)) {
				name = fileName + ":" + line; //$NON-NLS-1$
			}
			if (test instanceof PHPUnitTestCase) {
				final PHPUnitTestException exception = ((PHPUnitTestCase) test).getException();
				if (exception != null && StringUtils.isNotEmpty(exception.getMessage())) {
					name += ": " + exception.getMessage(); //$NON-NLS-1$
					if (StringUtils.isNotEmpty(exception.getDiff())) {
						name += " (see Object Diff tab ->)";//$NON-NLS-1$
					}
				}
			}
			return name;
		}
		if (test instanceof PHPUnitTestEvent) {
			final String message = ((PHPUnitTestEvent) test).getMessage();
			String prefix = StringUtils.EMPTY;
			if (test instanceof PHPUnitTestException) {
				prefix = ((PHPUnitTestException) test).getExceptionClass();
			} else if (test instanceof PHPUnitTestWarning) {
				prefix = ((PHPUnitTestWarning) test).getCode();
			}
			if (StringUtils.isNotEmpty(message)) {
				return prefix + ": " + message; //$NON-NLS-1$
			}
			return prefix;
		}
		if (test instanceof PHPUnitTraceFrame) {
			return test.toString() + "()"; //$NON-NLS-1$
		}
		return test.toString();
	}

