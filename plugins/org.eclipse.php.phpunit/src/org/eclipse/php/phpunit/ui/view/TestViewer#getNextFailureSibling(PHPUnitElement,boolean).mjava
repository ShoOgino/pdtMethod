	private PHPUnitTestCase getNextFailureSibling(final PHPUnitElement current, boolean showNext) {
		final PHPUnitTestGroup parent = (PHPUnitTestGroup) current.getParent();
		if (parent == null) {
			return null;
		}

		Set<PHPUnitTest> children = parent.getChildren();
		if (children == null) {
			return null;
		}
		List<PHPUnitTest> siblings = new ArrayList<>(children);
		if (!showNext) {
			Collections.reverse(siblings);
		}

		final int nextIndex = siblings.indexOf(current) + 1;
		for (int i = nextIndex; i < siblings.size(); i++) {
			final PHPUnitTest sibling = siblings.get(i);
			if (sibling.getStatus() > PHPUnitTest.STATUS_PASS) {
				if (sibling instanceof PHPUnitTestCase)
					return (PHPUnitTestCase) sibling;
				return getNextChildFailure((PHPUnitTestGroup) sibling, showNext);
			}
		}
		return getNextFailureSibling(parent, showNext);
	}

