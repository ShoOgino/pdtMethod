	@Override
	protected TreeViewer createTreeViewer(Composite parent) {
		viewer = super.createTreeViewer(parent);

		viewer.addSelectionChangedListener(event -> {
			if (isRefresh) {
				return;
			}

			isRefresh = true;
			try {
				IStructuredSelection ssel = ((IStructuredSelection) event.getSelection());
				String newText = ssel.isEmpty() ? "" //$NON-NLS-1$
						: ((IResource) ssel.getFirstElement()).getProjectRelativePath().toPortableString();
				text.setText(newText);
				result = null;
			} finally {
				isRefresh = false;
			}
		});

		Label label = new Label(parent, SWT.BORDER);
		label.setText(textMessage);
		text = new Text(parent, SWT.BORDER);
		text.setLayoutData(new GridData(SWT.FILL, SWT.DEFAULT, true, false));
		text.addModifyListener(e -> {
			if (isRefresh) {
				return;
			}

			isRefresh = true;
			try {
				String newtext = text.getText();
				IPath path = new Path(newtext);
				IResource res = ((IContainer) viewer.getInput()).findMember(path);
				if (res != null) {
					viewer.setSelection(new StructuredSelection(res));
				} else {
					viewer.setSelection(StructuredSelection.EMPTY);
				}
				result = Collections.singletonList(path);
			} finally {
				isRefresh = false;
			}
		});

		return viewer;
	}

