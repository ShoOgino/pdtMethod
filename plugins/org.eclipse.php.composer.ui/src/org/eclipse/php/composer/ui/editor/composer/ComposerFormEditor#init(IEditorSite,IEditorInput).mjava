	@Override
	public void init(IEditorSite site, IEditorInput input) throws PartInitException {
		jsonEditor.init(site, input);
		super.init(site, input);

		if (input instanceof IFileEditorInput) {
			jsonFile = ((IFileEditorInput) input).getFile();
			if (jsonFile != null) {
				project = jsonFile.getProject();
				composerProject = new ComposerProject(project);
				buildPathManager = new BuildPathManager(composerProject);

				setPartName(project.getName());
				ResourcesPlugin.getWorkspace().addResourceChangeListener(new IResourceChangeListener() {
					@Override
					public void resourceChanged(IResourceChangeEvent event) {
						ComposerFormEditor.this.resourceChanged(event);
					}
				});
			}
		}

		composerPackage = new ComposerPackage();
		composerPackage.addPropertyChangeListener(new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent e) {
				Logger.debug("Property change: " + e.getPropertyName() + ", oldValue: " + e.getOldValue() //$NON-NLS-1$ //$NON-NLS-2$
						+ ", newValue: " + e.getNewValue()); //$NON-NLS-1$

				if (e.getPropertyName().startsWith("require")) { //$NON-NLS-1$
					newDepSinceLastSave = true;
				}

				if (e.getPropertyName().startsWith("require-dev")) { //$NON-NLS-1$
					newDevDepSinceLastSave = true;
				}

				setDirty(true);
			}
		});
	}

