	@Override
	protected void createFormContent(IManagedForm managedForm) {
		ScrolledForm form = managedForm.getForm();
		FormToolkit toolkit = managedForm.getToolkit();

		form.getBody().setLayout(FormLayoutFactory.createFormGridLayout(true, 2));

		left = toolkit.createComposite(form.getBody(), SWT.NONE);
		left.setLayout(FormLayoutFactory.createFormPaneGridLayout(false, 1));
		left.setLayoutData(new GridData(GridData.FILL_BOTH));

		requireSection = new DependencySection(this, left, composerPackage.getRequire(),
				Messages.DependenciesPage_RequireSectionTitle, Messages.DependenciesPage_RequireSectionDescription,
				true);
		requireDevSection = new DependencySection(this, left, composerPackage.getRequireDev(),
				Messages.DependenciesPage_RequireDevSectionTitle,
				Messages.DependenciesPage_RequireDevSectionDescription, false);

		requireSection.setEnabled(enabled);
		requireSection.getSection().addExpansionListener(new ExpansionAdapter() {
			public void expansionStateChanging(ExpansionEvent e) {
				activeSection = e.getState() ? requireSection : requireDevSection;
				requireDevSection.getSection().setExpanded(!e.getState());
				((GridData) requireSection.getSection().getLayoutData()).grabExcessVerticalSpace = e.getState();
				((GridData) requireDevSection.getSection().getLayoutData()).grabExcessVerticalSpace = !e.getState();
			}
		});

		requireDevSection.setEnabled(enabled);
		requireDevSection.getSection().addExpansionListener(new ExpansionAdapter() {
			public void expansionStateChanging(ExpansionEvent e) {
				activeSection = e.getState() ? requireDevSection : requireSection;
				requireSection.getSection().setExpanded(!e.getState());
				((GridData) requireDevSection.getSection().getLayoutData()).grabExcessVerticalSpace = e.getState();
				((GridData) requireSection.getSection().getLayoutData()).grabExcessVerticalSpace = !e.getState();
			}
		});
		activeSection = requireSection;

		right = toolkit.createComposite(form.getBody(), SWT.NONE);
		right.setLayout(FormLayoutFactory.createFormPaneGridLayout(false, 1));
		right.setLayoutData(new GridData(GridData.FILL_BOTH));

		searchSection = new DependencySearchSection(this, right);
		searchSection.setEnabled(enabled);
		searchSection.addDependencySelectionFinishedListener(new DependencySelectionFinishedListener() {
			public void dependenciesSelected(Dependencies dependencies) {
				Dependencies deps = activeSection == requireSection ? composerPackage.getRequire()
						: composerPackage.getRequireDev();

				deps.addAll(dependencies);
				activeSection.setFocus();
			}
		});

	}

