	@Override
	protected Control createControl(Composite parent) {
		if (parent instanceof ToolBar) {
			// the FormHeading class sets the toolbar cursor to hand for some
			// reason,
			// we change it back so the input control can use a proper I-beam
			// cursor
			parent.setCursor(null);
		}

		FormToolkit toolkit = managedForm.getToolkit();
		Composite composite = toolkit.createComposite(parent);

		GridLayout layout = new GridLayout(3, false);
		layout.verticalSpacing = 0;
		layout.marginWidth = 0;

		switch (Platform.getOS()) {
		case Platform.OS_LINUX:
			layout.marginHeight = -2;
			break;
		case Platform.OS_MACOSX:
			layout.marginHeight = 1;
			break;

		default:
			layout.marginHeight = 0;
		}

		composite.setLayout(layout);
		composite.setBackground(null);
		composite.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
		Control label = toolkit.createLabel(composite, Messages.SearchControl_SearchLabel);
		label.setBackground(null);

		searchText = toolkit.createText(composite, "", SWT.FLAT | SWT.SEARCH); //$NON-NLS-1$
		searchText.setData(FormToolkit.TEXT_BORDER, Boolean.TRUE);
		searchText.setLayoutData(new GridData(200, -1));
		ToolBar cancelBar = new ToolBar(composite, SWT.FLAT);

		final ToolItem clearToolItem = new ToolItem(cancelBar, SWT.NONE);
		clearToolItem.setEnabled(false);
		clearToolItem.setImage(ComposerUIPluginImages.CLEAR.createImage());
		clearToolItem.setDisabledImage(ComposerUIPluginImages.CLEAR_DISABLED.createImage());
		clearToolItem.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				searchText.setText(""); //$NON-NLS-1$
			}
		});

		searchText.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				clearToolItem.setEnabled(searchText.getText().length() > 0);
				for (ModifyListener listener : modifyListeners) {
					listener.modifyText(e);
				}
			}
		});

		toolkit.paintBordersFor(composite);

		return composite;
	}

