	@Override
	public void createControl(Composite parent) {

		Composite control = new Composite(parent, SWT.NONE);

		int numColumns = 3;
		GridLayoutFactory.fillDefaults().numColumns(numColumns).applyTo(control);

		projectNameField = new StringDialogField();
		projectNameField.setLabelText(Messages.WizardResourceImportPage_ProjectNameLabel);
		projectNameField.doFillIntoGrid(control, numColumns);
		LayoutUtil.setHorizontalGrabbing(projectNameField.getTextControl(null));

		projectNameField.setDialogFieldListener(new IDialogFieldListener() {
			@Override
			public void dialogFieldChanged(DialogField field) {
				projectName = projectNameField.getText();
				updatePageCompletion();
			}
		});

		sourcePath = new StringButtonDialogField(new IStringButtonAdapter() {
			@Override
			public void changeControlPressed(DialogField field) {
				DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.OPEN);
				dialog.setMessage(Messages.WizardResourceImportPage_BrowseDialogMessage);
				sourceFromDialog = dialog.open();
				try {
					handleSourcePathChange();
				} catch (Exception e) {
					Logger.logException(e);
				}
			}
		});

		sourcePath.setLabelText(Messages.WizardResourceImportPage_SourcePathLabel);
		sourcePath.setButtonLabel(Messages.WizardResourceImportPage_BrowseButton);
		sourcePath.doFillIntoGrid(control, numColumns);
		sourcePath.getTextControl(null).setEnabled(false);

		useWorkspaceLocation = new Button(control, SWT.CHECK);
		useWorkspaceLocation.setText(Messages.WizardResourceImportPage_WorkspaceLocationCheckbox);
		useWorkspaceLocation.setSelection(true);

		GridDataFactory.fillDefaults().grab(true, false).span(3, 1).applyTo(useWorkspaceLocation);

		useWorkspaceLocation.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				targetPath.setEnabled(useWorkspaceLocation.getSelection() == false);
				useWorkspace = useWorkspaceLocation.getSelection();
				updatePageCompletion();
			}
		});

		// don't know if we can use this in the future. for now, simply use the
		// source location as the project location
		useWorkspaceLocation.setVisible(false);

		/*
		 * targetPath = new StringButtonDialogField(new IStringButtonAdapter() {
		 * 
		 * @Override public void changeControlPressed(DialogField field) {
		 * DirectoryDialog dialog = new DirectoryDialog(getShell(), SWT.OPEN);
		 * dialog.setMessage("Select the target location"); target =
		 * dialog.open(); try { handleTargetPathChange(); } catch (IOException
		 * e) { Logger.logException(e); } } });
		 * 
		 * targetPath.setLabelText("Target path");
		 * targetPath.setButtonLabel("Browse");
		 * targetPath.doFillIntoGrid(control, numColumns);
		 * targetPath.getTextControl(null).setEnabled(false);
		 * targetPath.setEnabled(false);
		 */

		LayoutUtil.setHorizontalGrabbing(sourcePath.getTextControl(null));
		setControl(control);

		workspace = ResourcesPlugin.getWorkspace();
		PlatformUI.getWorkbench().getHelpSystem().setHelp(control,
				ComposerUIPlugin.PLUGIN_ID + "." + "help_context_wizard_importer"); //$NON-NLS-1$ //$NON-NLS-2$
		setPageComplete(false);
	}

