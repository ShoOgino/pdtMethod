	@Override
	protected Control createDialogArea(Composite parent) {
		getShell().setText("Edit Script");
		getShell().setImage(ComposerUIPluginImages.EVENT.createImage());

		Composite contents = new Composite(parent, SWT.NONE);
		contents.setLayout(new GridLayout(2, false));

		Label lblEvent = new Label(contents, SWT.NONE);
		GridData gd_lblEvent = new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1);
		gd_lblEvent.widthHint = ComposerUIPluginConstants.DIALOG_LABEL_WIDTH;
		lblEvent.setLayoutData(gd_lblEvent);
		lblEvent.setText("Event");

		eventControl = new Combo(contents, SWT.READ_ONLY);
		eventControl.setEnabled(eventEnabled);
		GridData gd_eventControl = new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1);
		gd_eventControl.widthHint = ComposerUIPluginConstants.DIALOG_CONTROL_WIDTH;
		eventControl.setLayoutData(gd_eventControl);
		eventControl.setItems(Scripts.getEvents());
		eventControl.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				script.setScript(eventControl.getText());
			}
		});

		if (script.getScript() != null) {
			eventControl.setText(script.getScript());
		} else {
			// leave it null to indicate that there is no combo box selection
		}

		Label lblHandler = new Label(contents, SWT.NONE);
		lblHandler.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1));
		lblHandler.setText("Handler");

		handlerControl = new Text(contents, SWT.BORDER);
		handlerControl.setEnabled(handlerEnabled);
		handlerControl.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		handlerControl.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				script.getHandlers().add(handlerIndex, handlerControl.getText());
			}
		});

		if (script.getHandlers().get(handlerIndex) != null) {
			handlerControl.setText((String) script.getHandlers().get(handlerIndex));
		} else {
			// must never be null, so at least be sure to always return an empty
			// string
			handlerControl.setText(""); //$NON-NLS-1$
		}

		return contents;
	}

