	public boolean visit(DoStatement doStatement) {
		// do-while body
		lineWidth += 2;
		Statement body = doStatement.getBody();
		handleAction(doStatement.getStart() + 2, body, true);
		int lastPosition = body.getEnd();// this variable
		// will be changed
		int doActionEnd = body.getEnd();
		if (preferences.control_statement_insert_newline_before_while_in_do) {
			insertNewLine();
			indent();
		} else {
			lastPosition = setSpaceAfterBlock(doActionEnd);
		}

		String textBetween = ""; //$NON-NLS-1$
		int indexOfWhile = -1;
		try {
			textBetween = document.get(doActionEnd, doStatement.getCondition().getStart() - doActionEnd).toLowerCase();
		} catch (BadLocationException e) {
			Logger.logException(e);
			return false;
		}
		indexOfWhile = textBetween.indexOf("while"); //$NON-NLS-1$
		if (indexOfWhile > 0) {
			indexOfWhile += doActionEnd;
			handleChars(lastPosition, indexOfWhile);
			appendToBuffer("while"); //$NON-NLS-1$
			handleChars(indexOfWhile, indexOfWhile);
			lastPosition = indexOfWhile;
		} else {
			appendToBuffer("while"); //$NON-NLS-1$
		}

		// handle the chars between the 'while' and the condition start position
		if (this.preferences.insert_space_before_opening_paren_in_while) {
			insertSpace();
		}
		appendToBuffer(OPEN_PARN);
		if (this.preferences.insert_space_after_opening_paren_in_while) {
			insertSpace();
		}
		handleChars(lastPosition, doStatement.getCondition().getStart());

		// handle the while condition
		doStatement.getCondition().accept(this);

		// set the while closing paren spaces
		if (this.preferences.insert_space_before_closing_paren_in_while) {
			insertSpace();
		}
		appendToBuffer(CLOSE_PARN);

		handleSemicolon(doStatement.getCondition().getEnd(), doStatement.getEnd());
		return false;
	}

