	private void initCommentIndentVariables(int offset, int startLine,
			org.eclipse.php.internal.core.compiler.ast.nodes.Comment comment, boolean endWithNewLineIndent)
					throws BadLocationException {
		// TODO the value should be calculated from ReplaceEdit changes
		indentLengthForComment = 0;
		indentStringForComment = ""; //$NON-NLS-1$
		// https://bugs.eclipse.org/bugs/show_bug.cgi?id=461701
		// Indentation is never set and used when inside of <?= ?> tags.
		// See also method indent().
		if (isPhpEqualTag) {
			return;
		}
		IRegion startRegion = document.getLineInformation(startLine);
		String startLineContent = document
				.get(startRegion.getOffset(), comment.sourceStart() + offset - startRegion.getOffset()).trim();
		// indentStringForComment = FormatterUtils.getLineBlanks(document,
		// startRegion);

		StringBuffer sb = new StringBuffer();
		int lastIndentationLevel = indentationLevel;
		if (endWithNewLineIndent) {
			if (indentationLevelList.size() >= 2) {
				lastIndentationLevel = indentationLevelList.get(indentationLevelList.size() - 2);
			} else {
				lastIndentationLevel = indentationLevelList.get(indentationLevelList.size() - 1);
			}
		} else {
			lastIndentationLevel = indentationLevelList.get(indentationLevelList.size() - 1);
		}
		for (int i = 0; i < lastIndentationLevel * preferences.indentationSize; i++) {
			sb.append(preferences.indentationChar);
		}
		for (int i = 0; i < startLineContent.length(); i++) {
			sb.append(" "); //$NON-NLS-1$
		}
		if (startLineContent.length() > 0) {
			sb.append(" "); //$NON-NLS-1$
		}
		indentStringForComment = sb.toString();
		char[] blankArray = indentStringForComment.toCharArray();
		for (int i = 0; i < blankArray.length; i++) {
			if (blankArray[i] == '\t') {
				indentLengthForComment += 3;
			} else {
				indentLengthForComment++;
			}
		}
	}

