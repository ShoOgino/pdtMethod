	private CodeFormatterPreferences getPreferences(IProject project) throws Exception {

		IEclipsePreferences node = null;
		if (project != null) {
			ProjectScope scope = (ProjectScope) new ProjectScope(project);
			node = scope.getNode(FormatterCorePlugin.PLUGIN_ID);
		}

		Map<String, Object> p = new HashMap<String, Object>(defaultPrefrencesValues);
		if (node != null && node.keys().length > 0
				&& node.get(CodeFormatterConstants.FORMATTER_PROFILE, null) != null) {
			Set<String> propetiesNames = p.keySet();
			for (Iterator<String> iter = propetiesNames.iterator(); iter.hasNext();) {
				String property = (String) iter.next();
				String value = node.get(property, null);
				if (value != null) {
					p.put(property, value);
				}
			}
		} else {
			IPreferencesService service = Platform.getPreferencesService();
			String[] lookup = service.getLookupOrder(FormatterCorePlugin.PLUGIN_ID, null);
			Preferences[] nodes = new Preferences[lookup.length];
			for (int i = 0; i < lookup.length; i++) {
				nodes[i] = service.getRootNode().node(lookup[i]).node(FormatterCorePlugin.PLUGIN_ID);
			}
			for (String property : p.keySet()) {
				String value = service.get(property, null, nodes);
				if (value != null) {
					p.put(property, value);
				}
			}
		}

		fCodeFormatterPreferences.setPreferencesValues(p);

		return fCodeFormatterPreferences;
	}

