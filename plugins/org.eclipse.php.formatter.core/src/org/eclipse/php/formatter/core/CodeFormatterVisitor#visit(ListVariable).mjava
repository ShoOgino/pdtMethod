	@Override
	public boolean visit(ListVariable listVariable) {
		int addSpacesNoNewLineAfterLastSingleLineComment = 0;
		addNonBlanksToLineWidth(4);
		if (this.preferences.insert_space_before_opening_paren_in_list) {
			insertSpace();
		}
		appendToBuffer(OPEN_PARN);
		if (this.preferences.insert_space_after_opening_paren_in_list) {
			insertSpace();
		}

		int lastPosition = listVariable.getStart() + 4;
		List<Expression> variables = listVariable.variables();
		// VariablesArray will contain one empty ASTNode (i.e. EmptyExpression)
		// to represent empty list() statements.
		Expression[] variablesArray = variables.toArray(new Expression[variables.size()]);
		lastPosition = handleCommaList(variablesArray, lastPosition, true,
				this.preferences.insert_space_before_comma_in_list, this.preferences.insert_space_after_comma_in_list,
				NO_LINE_WRAP, NO_LINE_WRAP_INDENT, false);

		if (this.preferences.insert_space_before_closing_paren_in_list) {
			addSpacesNoNewLineAfterLastSingleLineComment = 1;
			insertSpace();
		}
		// appendToBuffer(CLOSE_PARN);
		handleChars(lastPosition, listVariable.getEnd() - 1, addSpacesNoNewLineAfterLastSingleLineComment);
		addNonBlanksToLineWidth(1);// we need to add the closing parenthesis

		return false;
	}

