	public boolean visit(ConditionalExpression conditionalExpression) {
		boolean isTernaryOperator = conditionalExpression.getOperatorType() == ConditionalExpression.OP_TERNARY;
		// start
		// condition ? true : false
		conditionalExpression.getCondition().accept(this);
		// condition -> if true
		if (this.preferences.insert_space_before_conditional_question_mark) {
			insertSpace();
		}

		appendToBuffer(QUESTION_MARK);
		if (!isTernaryOperator) {
			appendToBuffer(QUESTION_MARK);
		}

		Expression ifTrue = conditionalExpression.getIfTrue();
		Expression ifFalse = conditionalExpression.getIfFalse();
		int offset = conditionalExpression.getCondition().getStart();

		int colonOffset = 0;
		if (ifTrue != null) {
			if (this.preferences.insert_space_after_conditional_question_mark) {
				insertSpace();
			}
			handleChars(conditionalExpression.getCondition().getEnd(), ifTrue.getStart());
			ifTrue.accept(this);
			// iftrue -> iffalse
			if (this.preferences.insert_space_before_conditional_colon) {
				insertSpace();
			}
		} else {
			int length = offset;
			if (ifFalse != null) {
				length = ifFalse.getStart();
			}
			colonOffset = getCharPosition(conditionalExpression.getCondition().getEnd(), length, COLON);
			handleChars(conditionalExpression.getCondition().getEnd(), colonOffset);
		}

		if (isTernaryOperator) {
			appendToBuffer(COLON);

			if (this.preferences.insert_space_after_conditional_colon) {
				insertSpace();
			}
			if (ifTrue != null && ifFalse != null) {
				handleChars(ifTrue.getEnd(), conditionalExpression.getIfFalse().getStart());
			} else if (ifTrue == null && ifFalse != null) {
				handleChars(colonOffset, conditionalExpression.getIfFalse().getStart());
			} else if (ifTrue != null && ifFalse == null) {
				handleChars(ifTrue.getEnd(), colonOffset);
			}
		} else if (ifTrue != null) {
			handleChars(ifTrue.getEnd(), colonOffset);
		}

		if (ifFalse != null && isTernaryOperator) {
			ifFalse.accept(this);
		}
		// end

		return false;
	}

