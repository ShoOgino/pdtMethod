	public boolean visit(YieldExpression yieldExpression) {
		lineWidth += 5;
		// handle [key => expr] or just [expr]
		int lastPosition = yieldExpression.getStart() + 5;
		insertSpace();
		if (yieldExpression.getKey() != null) {
			handleChars(lastPosition, yieldExpression.getKey().getStart());
			yieldExpression.getKey().accept(this);
			if (this.preferences.insert_space_before_arrow_in_yield) {
				insertSpace();
			}
			appendToBuffer(KEY_VALUE_OPERATOR);
			if (this.preferences.insert_space_after_arrow_in_yield) {
				insertSpace();
			}
			lastPosition = yieldExpression.getKey().getEnd();
		} else if (yieldExpression.getOperator() == YieldExpression.OP_FROM) {
			insertSpace();
			appendToBuffer(FROM);
			insertSpace();
		}
		handleChars(lastPosition, yieldExpression.getExpression().getStart());
		yieldExpression.getExpression().accept(this);
		lastPosition = yieldExpression.getExpression().getEnd();

		return false;
	}

