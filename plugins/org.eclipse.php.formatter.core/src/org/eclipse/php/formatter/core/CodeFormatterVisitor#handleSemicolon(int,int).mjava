	/**
	 * handle the last semicolon of statement
	 * 
	 * @param start
	 *            the end position of the ASTNode before the semicolon
	 * @param end
	 *            the position of the semicolon -1
	 */
	private void handleSemicolon(int start, int end) {
		if (this.preferences.insert_space_before_semicolon && !isHeredocSemicolon) {
			insertSpace();
		}
		// check if the statement end with ; or ?>
		if (isContainChar(start, end, SEMICOLON)) {
			appendToBuffer(SEMICOLON);
			if (isHeredocSemicolon && isPHPEqualTag) {
				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=411322
				// always insert a new line after the closing HEREDOC tag
				isPHPEqualTag = false;
				insertNewLine();
				isPHPEqualTag = true;
			}
			isHeredocSemicolon = false;
		} else if (isContainChar(start, end, QUESTION_MARK)) {
			handlePHPEndTag(start, end, "?>"); //$NON-NLS-1$
		} else {
			handlePHPEndTag(start, end, "%>"); //$NON-NLS-1$
		}
		// till the semicolon
		handleChars(start, end);
		binaryExpressionLineWrapPolicy = -1;// reset the policy for binary
		// expression states
		if (wasBinaryExpressionWrapped) {
			indentationLevel -= binaryExpressionIndentGap;
			wasBinaryExpressionWrapped = false;
		}
		binaryExpressionIndentGap = 0;
		binaryExpressionSavedBuffer = null;
		if (isBinaryExpressionExtraIndentation) {
			indentationLevel--;
			isBinaryExpressionExtraIndentation = false;
		}
	}

