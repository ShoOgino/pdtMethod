	private void handleElseIfCases(IfStatement ifStatement)
			throws BadLocationException {
		int lastPosition = ifStatement.getTrueStatement().getEnd();
		int len;
		IfStatement falseIfStatement = (IfStatement) ifStatement
				.getFalseStatement();
		len = checkFirstTokenLength(falseIfStatement.getStart(),
				falseIfStatement.getCondition().getStart());
		boolean elseIndentationLevelChanged = false;

		// information needed to handleChars between if statement end to the
		// else if...
		String textBetween = ""; //$NON-NLS-1$
		int trueStatementEnd = ifStatement.getTrueStatement().getEnd();
		int indexOfElse = -1;
		textBetween = document.get(trueStatementEnd,
				ifStatement.getFalseStatement().getStart() - trueStatementEnd)
				.toLowerCase();
		indexOfElse = textBetween.lastIndexOf("else"); //$NON-NLS-1$

		if (ifStatement.getTrueStatement().getType() == ASTNode.BLOCK) {
			if (preferences.control_statement_insert_newline_before_else_and_elseif_in_if) {
				insertNewLine();
				indent();
			} else {
				if (len == 2) {
					lastPosition = setSpaceAfterBlock(ifStatement
							.getTrueStatement().getEnd());
				}
			}

			if (len != 2) {// elseif case
				if (indexOfElse > 0) {
					handleChars(lastPosition, ifStatement.getFalseStatement()
							.getStart());
				} else {
					// fix for setSpaceAfterBlock when no space is required
					// before 'elseif'
					if (!preferences.control_statement_insert_newline_before_else_and_elseif_in_if
							&& preferences.insert_space_after_closing_brace_in_block) {
						insertSpace();
					}
					handleChars(ifStatement.getTrueStatement().getEnd(),
							ifStatement.getFalseStatement().getStart());
				}
			} else {
				if (indexOfElse > 0) {
					indexOfElse += trueStatementEnd;
					handleChars(lastPosition, indexOfElse);
					appendToBuffer("else "); //$NON-NLS-1$
					if (!preferences.control_statement_keep_else_if_on_same_line) {
						insertNewLine();
						indentationLevel++;
						elseIndentationLevelChanged = true;
						indent();
					}
					handleChars(indexOfElse, ifStatement.getFalseStatement()
							.getStart());
					lastPosition = indexOfElse;
				} else {
					appendToBuffer("else "); //$NON-NLS-1$
					if (!preferences.control_statement_keep_else_if_on_same_line) {
						insertNewLine();
						indentationLevel++;
						elseIndentationLevelChanged = true;
						indent();
					}
					// the following line handles the case : '}else' when
					// setSpaceAfterBlock() is called and offset is set to +1
					indexOfElse = (trueStatementEnd < lastPosition) ? lastPosition
							: indexOfElse + trueStatementEnd;

					handleChars(indexOfElse, ifStatement.getFalseStatement()
							.getStart());
				}
			}
		} else { // if the true statement is not a block then we should add new
			// line
			insertNewLine();
			indent();
			if (indexOfElse > 0) {
				indexOfElse += trueStatementEnd;
				handleChars(lastPosition, indexOfElse);
				appendToBuffer("else "); //$NON-NLS-1$
				if (!preferences.control_statement_keep_else_if_on_same_line) {
					insertNewLine();
					indentationLevel++;
					elseIndentationLevelChanged = true;
					indent();
				}
				handleChars(indexOfElse, ifStatement.getFalseStatement()
						.getStart());
				lastPosition = indexOfElse;
			} else {
				appendToBuffer(len == 2 ? "else " : EMPTY_STRING); //$NON-NLS-1$
				if ((len == 2)
						&& !preferences.control_statement_keep_else_if_on_same_line) {
					insertNewLine();
					indentationLevel++;
					elseIndentationLevelChanged = true;
					indent();
				}
				if (indexOfElse == -1) {// in case of: STATEMENT;elseif ...
					indexOfElse = 0;
				}

				handleChars(indexOfElse + trueStatementEnd, ifStatement
						.getFalseStatement().getStart());
			}
		}
		boolean processed = isProcessed(ifStatement);
		ifStatement.getFalseStatement().accept(this);
		if (elseIndentationLevelChanged) {
			indentationLevel--;
		}
		if (ifStatement.getTrueStatement().getType() == ASTNode.BLOCK
				&& !((Block) ifStatement.getTrueStatement()).isCurly()
				&& !processed) {
			handleChars(ifStatement.getFalseStatement().getEnd(),
					ifStatement.getEnd());
			appendToBuffer("endif;"); //$NON-NLS-1$
			handleChars(ifStatement.getEnd(), ifStatement.getEnd());
		}
	}

