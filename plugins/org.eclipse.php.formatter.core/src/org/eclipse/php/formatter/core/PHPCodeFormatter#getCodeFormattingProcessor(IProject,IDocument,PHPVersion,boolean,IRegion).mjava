	private ICodeFormattingProcessor getCodeFormattingProcessor(IProject project, IDocument document,
			PHPVersion phpVersion, boolean useShortTags, IRegion region) throws Exception {
		CodeFormatterPreferences fCodeFormatterPreferences = getPreferences(project);
		int oldCommentLength = fCodeFormatterPreferences.comment_line_length;
		boolean forceSplit = fCodeFormatterPreferences.line_wrap_expressions_in_array_init_force_split;
		boolean insertSpaceAfterComma = fCodeFormatterPreferences.insert_space_after_list_comma_in_array;
		boolean insertNewLineBeforeCloseArray = fCodeFormatterPreferences.new_line_before_close_array_parenthesis_array;
		int lineWrapPolicy = fCodeFormatterPreferences.line_wrap_expressions_in_array_init_line_wrap_policy;
		if (isPasting) {
			fCodeFormatterPreferences.comment_line_length = 400;
			fCodeFormatterPreferences.line_wrap_expressions_in_array_init_force_split = true;
			fCodeFormatterPreferences.line_wrap_expressions_in_array_init_line_wrap_policy = CodeFormatterVisitor.WRAP_ALL_ELEMENTS;
			fCodeFormatterPreferences.insert_space_after_list_comma_in_array = false;
			fCodeFormatterPreferences.new_line_before_close_array_parenthesis_array = true;
		}
		ICodeFormattingProcessor codeFormattingProcessor = new CodeFormatterVisitor(document, fCodeFormatterPreferences,
				PHPModelUtils.getLineSeparator(project), phpVersion, useShortTags, region);

		if (isPasting) {
			fCodeFormatterPreferences.comment_line_length = oldCommentLength;
			fCodeFormatterPreferences.line_wrap_expressions_in_array_init_force_split = forceSplit;
			fCodeFormatterPreferences.line_wrap_expressions_in_array_init_line_wrap_policy = lineWrapPolicy;
			fCodeFormatterPreferences.insert_space_after_list_comma_in_array = insertSpaceAfterComma;
			fCodeFormatterPreferences.new_line_before_close_array_parenthesis_array = insertNewLineBeforeCloseArray;
		}
		return codeFormattingProcessor;
	}

