	public boolean visit(UseStatement useStatement) {
		int lastPosition = useStatement.getStart() + 3;
		lineWidth += 3;// the word 'use'
		insertSpace();

		if (useStatement.getStatementType() == UseStatement.T_FUNCTION) {
			appendToBuffer(PhpTokenNames
					.getName(CompilerParserConstants.T_FUNCTION) + SPACE);
		} else if (useStatement.getStatementType() == UseStatement.T_CONST) {
			appendToBuffer(PhpTokenNames
					.getName(CompilerParserConstants.T_CONST) + SPACE);
		}

		List<UseStatementPart> parts = useStatement.parts();
		lastPosition = handleCommaList(
				parts.toArray(new ASTNode[parts.size()]), lastPosition,
				this.preferences.insert_space_before_comma_in_global,
				this.preferences.insert_space_after_comma_in_global,
				NO_LINE_WRAP, NO_LINE_WRAP_INDENT, false);

		handleSemicolon(lastPosition, useStatement.getEnd());
		return false;
	}

