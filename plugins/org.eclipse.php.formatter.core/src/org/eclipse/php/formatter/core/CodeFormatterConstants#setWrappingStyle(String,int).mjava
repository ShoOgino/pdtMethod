	/**
	 * <p>
	 * Set the wrapping style of the given alignment value and return the new
	 * value. The given value should be created using the
	 * <code>createAlignmentValue(boolean, int, int)</code> API.
	 * </p>
	 * 
	 * @param value
	 *            the given alignment value
	 * @param wrappingStyle
	 *            the given wrapping style
	 * @return the new alignment value
	 * @see #WRAP_COMPACT
	 * @see #WRAP_COMPACT_FIRST_BREAK
	 * @see #WRAP_NEXT_PER_LINE
	 * @see #WRAP_NEXT_SHIFTED
	 * @see #WRAP_NO_SPLIT
	 * @see #WRAP_ONE_PER_LINE
	 * @see #createAlignmentValue(boolean, int, int)
	 * @exception IllegalArgumentException
	 *                if the given alignment value is null, if the given
	 *                wrapping style is not one of the possible wrapping styles,
	 *                or if the given alignment value doesn't have a valid
	 *                format.
	 */
	public static String setWrappingStyle(String value, int wrappingStyle) {
		// if (value == null) {
		// throw WRONG_ARGUMENT;
		// }
		// switch(wrappingStyle) {
		// case WRAP_COMPACT :
		// case WRAP_COMPACT_FIRST_BREAK :
		// case WRAP_NEXT_PER_LINE :
		// case WRAP_NEXT_SHIFTED :
		// case WRAP_NO_SPLIT :
		// case WRAP_ONE_PER_LINE :
		// break;
		// default:
		// throw WRONG_ARGUMENT;
		// }
		// try {
		// int existingValue = Integer.parseInt(value);
		// // clear existing split bits
		// existingValue &= ~(Alignment.SPLIT_MASK);
		// switch(wrappingStyle) {
		// case WRAP_COMPACT :
		// existingValue |= Alignment.M_COMPACT_SPLIT;
		// break;
		// case WRAP_COMPACT_FIRST_BREAK :
		// existingValue |= Alignment.M_COMPACT_FIRST_BREAK_SPLIT;
		// break;
		// case WRAP_NEXT_PER_LINE :
		// existingValue |= Alignment.M_NEXT_PER_LINE_SPLIT;
		// break;
		// case WRAP_NEXT_SHIFTED :
		// existingValue |= Alignment.M_NEXT_SHIFTED_SPLIT;
		// break;
		// case WRAP_ONE_PER_LINE :
		// existingValue |= Alignment.M_ONE_PER_LINE_SPLIT;
		// break;
		// }
		// return String.valueOf(existingValue);
		// } catch (NumberFormatException e) {
		// throw WRONG_ARGUMENT;
		// }
		return null;
	}

