	public static void dump(ScannerBuffer buffer, XMLStreamWriter writer, XMLElement elem, String ... blacklist) throws XMLStreamException {
		writer.writeStartDocument("utf-8", "1.0");
		writer.writeProcessingInstruction("xml-stylesheet","href=\"tree.xsl\" type=\"text/xsl\"");
		writer.writeStartElement("document");
		
		if (blacklist.length>0) {
			writer.writeStartElement("blacklist");
			for (String s: blacklist){
				writer.writeStartElement("symbol");
				writer.writeCharacters(s);
				writer.writeEndElement();
			}
			writer.writeEndElement();
		}
		
		writer.writeStartElement("parsetree");
		elem.dump(writer);
		writer.writeEndElement();

		if (buffer!=null){
			writer.writeStartElement("tokensequence");
			for (Symbol s:buffer.getBuffered()){
				if (s instanceof ComplexSymbol){
					ComplexSymbol cs = (ComplexSymbol)s;
					if (cs.value!=null){
						writer.writeStartElement("token");
						writer.writeAttribute("name",cs.getName());
						cs.getLeft().toXML(writer, "left");
						writer.writeCharacters(cs.value+"");
						cs.getRight().toXML(writer, "right");
						writer.writeEndElement();
					} else
					{
						writer.writeStartElement("keyword");
						writer.writeAttribute("left",cs.getLeft()+"");
						writer.writeAttribute("right",cs.getRight()+"");
						writer.writeCharacters(cs.getName()+"");
						writer.writeEndElement();
					}
				}
				else 
					if (s instanceof Symbol) {
						writer.writeStartElement("token");
						writer.writeCharacters(s.toString());
						writer.writeEndElement();						
					}
			}
			writer.writeEndElement();
		}
		writer.writeEndElement();
		writer.writeEndDocument();
		writer.flush();
		writer.close();
	}

