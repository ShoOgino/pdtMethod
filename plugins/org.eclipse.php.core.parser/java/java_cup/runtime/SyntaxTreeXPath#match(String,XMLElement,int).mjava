	private static boolean match(String m,XMLElement elem,int seq){
//		System.out.println("Matching "+elem.tagname+" with "+m);
		boolean result = true;
		String[] name = m.split("\\[");
		String[] tag = name[0].split("\\*");
		if (tag[0].isEmpty()) { // start is wildcard
			if (tag.length>2)
				result &= elem.tagname.contains(tag[1]);
			else	
				if (tag.length==2)
					result &= elem.tagname.endsWith(tag[1]);
				else
					result &= false;
		} else { // match with start
			if (tag.length==2)
				result &=elem.tagname.startsWith(tag[1]);
			else
				result = elem.tagname.equals(tag[0]);
		}
		for (int i=1; i<name.length; i++) {
			String predicate= name[i];
			if (!predicate.endsWith("]")) return false;
			predicate=predicate.substring(0, predicate.length()-1);
			
			if (predicate.startsWith("@")){
				if (predicate.substring(1).startsWith("variant"))
					if ((elem instanceof XMLElement.NonTerminal)&& Integer.parseInt(predicate.substring(9))==((XMLElement.NonTerminal)elem).getVariant())
							result&=true;
					else
						return false;
				else return false;
			} else 
			if (predicate.matches("\\d+")){
				result &= Integer.parseInt(predicate)==seq;
			}
			else 
				return false; // submatch
		}
		return result;
	}

