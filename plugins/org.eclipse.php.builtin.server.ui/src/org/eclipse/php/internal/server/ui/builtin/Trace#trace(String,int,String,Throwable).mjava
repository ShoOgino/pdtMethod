	/**
	 * Trace the given message and exception.
	 *
	 * @param level
	 *            a trace level
	 * @param s
	 *            a message
	 * @param t
	 *            a throwable
	 */
	private static void trace(String pluginId, int level, String s, Throwable t) {
		if (pluginId == null || s == null)
			return;

		if (!PHPServerUIPlugin.getDefault().isDebugging())
			return;

		StringBuffer sb = new StringBuffer(pluginId);
		if (pluginId.length() > pluginLength)
			pluginLength = pluginId.length();
		else if (pluginId.length() < pluginLength)
			sb.append(spacer.substring(0, pluginLength - pluginId.length()));
		sb.append(" "); //$NON-NLS-1$
		sb.append(levelNames[level]);
		sb.append(" "); //$NON-NLS-1$
		sb.append(sdf.format(new Date()));
		sb.append(" "); //$NON-NLS-1$
		sb.append(s);
		// Platform.getDebugOption(ServerCore.PLUGIN_ID + "/" + "resources");

		System.out.println(sb.toString());
		if (t != null)
			t.printStackTrace();
	}

