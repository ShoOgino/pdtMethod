	/*
	 * (non-Javadoc)
	 * @see org.eclipse.debug.core.model.ILaunchConfigurationDelegate#launch(org.eclipse.debug.core.ILaunchConfiguration, java.lang.String, org.eclipse.debug.core.ILaunch, org.eclipse.core.runtime.IProgressMonitor)
	 */
	public void launch(ILaunchConfiguration configuration, String mode, ILaunch launch, IProgressMonitor monitor) throws CoreException {

		IExtensionRegistry registry = Platform.getExtensionRegistry();
		IConfigurationElement[] elements = registry.getConfigurationElementsFor(Activator.PLUGIN_ID, "httpServerLaunchDelegate");
		if (elements == null || elements.length == 0 || !elements[0].getName().equals("launchDelegate")) {
			doLaunch(configuration, mode, launch, monitor);
			return;
		}

		// Get the best match configuration element
		IConfigurationElement element = null;
		for (int i = 0; i < elements.length; i++) {
			element = elements[i];
			// Stop the search at the first external plugin.
			if (!elements[i].getNamespaceIdentifier().startsWith(PHP_IDE_PLUGIN_PREFIX)) {
				break;
			}
		}
		IHTTPServerLaunch serverLaunch = (IHTTPServerLaunch) element.createExecutableExtension("class");
		serverLaunch.setHTTPServerDelegate(this);
		serverLaunch.launch(configuration, mode, launch, monitor);
	}

