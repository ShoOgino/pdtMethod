	// Loads the servers from the preferences store.
	private void loadServers() {
		// Add <none> dummy server first
		try {
			Server noneServer = new NoneServer();
			servers.put(noneServer.getName(), noneServer);
		} catch (MalformedURLException e) {
		}
		// Read all the configurations of the servers from the preferences and
		// place them into the
		// servers hash (map name to Server instance).
		IEclipsePreferences preferences = InstanceScope.INSTANCE.getNode(Activator.PLUGIN_ID);
		List<Map<String, Object>> serversConfigs = XMLPreferencesReader.read(preferences, SERVERS_PREFERENCES_KEY,
				true);
		ServersUpgrade upgrader = new ServersUpgrade();
		// Then we create the servers from their configurations...
		for (Map<String, Object> serverMap : serversConfigs) {
			Server server = new Server();
			server.restoreFromMap(serverMap);
			String serverName = server.getName();
			servers.put(serverName, server);
			// Register the manager as a Server lister to get nofitications
			// about attribute changes.
			server.addPropertyChangeListener(this);
			upgrader.check(serverMap);
		}
		// Perform upgrade if necessary
		upgrader.perform();
		// Create default server if there is no any
		createDefaultPHPServer();
	}

