	/**
	 * Copys a directory from a to b, only modifying as needed
	 * and deleting old files and directories.
	 * This method also gets a Map of ignored resources that will not be copied in the process. The Map should
	 * hold string names of the resources (without their paths) and the copy process will ignore any file 
	 * or any directory (and its sub-hirarchy) that appears in the ignored map.
	 * (Note: In the future we might wanna pass the full ignore path and not just the name)
	 *
	 * @param from a directory
	 * @param to a directory
	 * @param ignoredResources A Map of resources names that will be ignored in the copy process
	 * @param monitor a progress monitor
	 * @return true, only if the copy was successful
	 */
	public static boolean smartCopyDirectory(String from, String to, Map ignoredResources, IProgressMonitor monitor) {
		long timeDifference = 0L;
		// Create a temporary file on the, possibly, remote machine. Then check the time of 
		// the creation with compare to the local time.
		// In case that the time gap is higher then the CONSTANT_TIME_DIFF update the timeDifference variable.
		try {
			File tempFile = File.createTempFile("probe", null, new File(to));
			timeDifference = System.currentTimeMillis() - tempFile.lastModified();
			tempFile.delete();
		} catch (IOException ioe) {
		}
		return smartCopyDirectory(from, to, ignoredResources, timeDifference, monitor);
	}

