	/**
	 * Removes a Server from the manager. In case that that given server is set
	 * to be the default server for a project, the project will be set with the
	 * workspace default server.
	 * 
	 * @param serverName
	 *            The name of the server.
	 * @return The removed Server; null if non was found to be removed.
	 */
	public static Server removeServer(String serverName) {
		// Do it the long way...
		// Check if the removed server is the workspace default, and if so,
		// replace the default to the
		// first in the list.
		ServersManager manager = ServersManager.getInstance();
		Server removedServer = (Server) manager.servers.remove(serverName);
		Server workspaceDefault = getDefaultServer(null);
		if (workspaceDefault == null) {
			// Should not happen
			Logger.log(IStatus.ERROR,
					"There is no defined default server for the workspace.");
			return null;
		}
		if (removedServer == null) {
			// Should not happen
			Logger
					.log(IStatus.ERROR,
							"The requested server could not be found, thus, will not be removed.");
			return null;
		}

		if (workspaceDefault == removedServer) {
			// If the workspace default server is the same as the one we wish to
			// remove,
			// we should replace it.
			Server[] servers = getServers();
			if (servers.length > 0) {
				workspaceDefault = servers[0];
				setDefaultServer(null, workspaceDefault);
			}
		}

		// Check that if any one of the mapped projects holds a reference to the
		// removed server.
		// If so, replace it with the new default server.
		Object[] keys = manager.defaultServersMap.keySet().toArray();
		for (Object element : keys) {
			if (removedServer == manager.defaultServersMap.get(element)) {
				setDefaultServer((IProject) element, workspaceDefault);
			}
		}

		if (removedServer != null) {
			// Fire the event for the removal
			removedServer.removePropertyChangeListener(manager);
			ServerManagerEvent event = new ServerManagerEvent(
					ServerManagerEvent.MANAGER_EVENT_REMOVED, removedServer);
			manager.fireEvent(event);
		}
		return removedServer;
	}

