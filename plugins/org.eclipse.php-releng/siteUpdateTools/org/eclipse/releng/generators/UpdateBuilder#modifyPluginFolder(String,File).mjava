	/*
	 * Process a plugin that is stored as a folder.
	 * @param plugins
	 * @param i
	 * @param elementRoot
	 * @throws Exception
	 * 
	 * @since 1.2.0
	 */
	private void modifyPluginFolder(String pluginName, File elementRoot) throws Exception {
		File bundleElement = new File(elementRoot, File.separator + "META-INF" + File.separator + "MANIFEST.MF");
		File pluginElement = new File(elementRoot, "plugin.xml");
		boolean found = (bundleElement.exists() && pluginElement.exists());
		File element = new File(elementRoot, "plugin.xml");
		if (element.exists()) {
			modifyPlugin(element, "plugin", found);
			found = true;
		}
		element = new File(elementRoot, File.separator + "META-INF" + File.separator + "MANIFEST.MF");
		if (element.exists()) {
			modifyPlugin(element, "bundle", found);
		}
		element = new File(elementRoot, "fragment.xml");
		if (element.exists()) {
			modifyPlugin(element, "fragment", found);
			found = true;
		}

		if (!found)
			System.out.println("Could not find descriptor for: " + pluginName);
	}

