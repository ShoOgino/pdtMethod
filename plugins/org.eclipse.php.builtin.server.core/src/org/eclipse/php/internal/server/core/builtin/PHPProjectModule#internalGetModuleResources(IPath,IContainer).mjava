	private IModuleResource[] internalGetModuleResources(IPath path, IContainer container) throws CoreException {
		IResource[] resources = null;
		if (container instanceof IProject) {
			List<IResource> list = new ArrayList<IResource>();
			IProjectFragment[] projectFragments = fScriptProject.getAllProjectFragments();
			for (IProjectFragment fragment : projectFragments) {
				if (!fragment.isExternal()) {
					list.addAll(Arrays.asList(((IContainer) fragment.getResource()).members()));
				}
			}
			resources = list.toArray(new IResource[list.size()]);
		} else {
			resources = container.members();
		}
		if (resources != null) {
			int size = resources.length;
			List<IModuleResource> list = new ArrayList<IModuleResource>(size);
			for (int i = 0; i < size; i++) {
				IResource resource = resources[i];
				if (resource != null && resource.exists()) {
					String name = resource.getName();
					if (resource instanceof IContainer) {
						IContainer container2 = (IContainer) resource;
						ModuleFolder mf = new ModuleFolder(container2, name, path);
						mf.setMembers(internalGetModuleResources(path.append(name), container2));
						list.add(mf);
					} else if (resource instanceof IFile) {
						list.add(new ModuleFile((IFile) resource, name, path));
					}
				}
			}
			IModuleResource[] moduleResources = new IModuleResource[list.size()];
			list.toArray(moduleResources);
			return moduleResources;
		}
		return new IModuleResource[0];

	}

