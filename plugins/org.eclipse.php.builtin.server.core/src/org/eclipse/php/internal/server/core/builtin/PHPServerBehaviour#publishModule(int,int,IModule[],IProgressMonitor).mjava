	/*
	 * Publishes the given module to the server.
	 */
	@Override
	protected void publishModule(int kind, int deltaKind, IModule[] moduleTree, IProgressMonitor monitor)
			throws CoreException {

		Properties p = loadModulePublishLocations();

		PublishHelper helper = new PublishHelper(getRuntimeBaseDirectory().append("temp").toFile()); //$NON-NLS-1$
		// If parent web module
		if (moduleTree.length == 1) {
			publishDir(deltaKind, p, moduleTree, helper, monitor);
		}
		// // Else a child module
		// else {
		// // Try to determine the URI for the child module
		// IWebModule webModule = (IWebModule)
		// moduleTree[0].loadAdapter(IWebModule.class, monitor);
		// String childURI = null;
		// if (webModule != null) {
		// childURI = webModule.getURI(moduleTree[1]);
		// }
		// // Try to determine if child is binary
		// IJ2EEModule childModule = (IJ2EEModule)
		// moduleTree[1].loadAdapter(IJ2EEModule.class, monitor);
		// boolean isBinary = false;
		// if (childModule != null) {
		// isBinary = childModule.isBinary();
		// }
		//
		// if (isBinary) {
		// publishArchiveModule(childURI, kind, deltaKind, p, moduleTree,
		// helper, monitor);
		// } else {
		// publishJar(childURI, kind, deltaKind, p, moduleTree, helper,
		// monitor);
		// }
		// }

		setModulePublishState(moduleTree, IServer.PUBLISH_STATE_NONE);

		saveModulePublishLocations(p);
	}

