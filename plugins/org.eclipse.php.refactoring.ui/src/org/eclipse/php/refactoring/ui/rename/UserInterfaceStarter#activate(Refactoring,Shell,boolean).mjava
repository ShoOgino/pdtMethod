	/**
	 * Actually activates the user interface. This default implementation assumes
	 * that the configuration element passed to <code>initialize
	 * </code> has an attribute wizard denoting the wizard class to be used for the
	 * given refactoring.
	 * <p>
	 * Subclasses may override to open a different user interface
	 * 
	 * @param refactoring
	 *            the refactoring for which the user interface should be opened
	 * @param parent
	 *            the parent shell to be used
	 * @param mustSaveEditors
	 *            <code>true</code> iff dirty editors must be saved before the
	 *            refactoring is started, <code>false</code> otherwise
	 * 
	 * @exception CoreException
	 *                if the user interface can't be activated
	 */
	public boolean activate(Refactoring refactoring, Shell parent, boolean mustSaveEditors) throws CoreException {
		return new RefactoringStarter().activate(refactoring, fWizard, parent, fWizard.getDefaultPageTitle(),
				mustSaveEditors);
	}

