	private int computePHPAdornmentFlags(ASTNode node, int renderFlags) {
		final int type = node.getType();

		int flags = 0;
		if (showOverlayIcons(renderFlags)) {
			int modifiers = -1;
			switch (type) {
			case ASTNode.INTERFACE_DECLARATION:
				break;
			case ASTNode.CLASS_DECLARATION:
				ClassDeclaration typeDeclaration = (ClassDeclaration) node;
				modifiers = typeDeclaration.getModifier();
				break;
			case ASTNode.METHOD_DECLARATION:
				MethodDeclaration methodDeclaration = (MethodDeclaration) node;
				modifiers = methodDeclaration.getModifier();
				break;
			case ASTNode.FIELD_DECLARATION:
				FieldsDeclaration fieldsDeclaration = (FieldsDeclaration) node;
				modifiers = fieldsDeclaration.getModifier();
				break;
			case ASTNode.SCALAR:
				flags |= PHPElementImageDescriptor.CONSTANT;
				break;

			}
			if (modifiers != -1) {
				flags = computeAdornments(modifiers, flags);
			}
		}
		return flags;
	}

