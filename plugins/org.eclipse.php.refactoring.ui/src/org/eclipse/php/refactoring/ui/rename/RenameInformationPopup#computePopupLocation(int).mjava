	/**
	 * @param snapPosition
	 *            one of the SNAP_POSITION_* constants
	 * @return the location in display coordinates or <code>null</code> iff not
	 *         visible
	 */
	private Point computePopupLocation(int snapPosition) {
		if (fPopup == null || fPopup.isDisposed())
			return null;

		switch (snapPosition) {
		case SNAP_POSITION_LOWER_RIGHT: {
			StyledText eWidget = fEditor.getTextViewer().getTextWidget();
			Rectangle eBounds = eWidget.getClientArea();
			Point eLowerRight = eWidget.toDisplay(eBounds.x + eBounds.width,
					eBounds.y + eBounds.height);
			Point pSize = getExtent();
			return new Point(eLowerRight.x - pSize.x - 5, eLowerRight.y
					- pSize.y - 5);
		}

		case SNAP_POSITION_UNDER_RIGHT_FIELD:
		case SNAP_POSITION_OVER_RIGHT_FIELD: {
			LinkedPosition position = fRenameLinkedMode
					.getCurrentLinkedPosition();
			if (position == null)
				return null;
			ISourceViewer viewer = fEditor.getTextViewer();
			ITextViewerExtension5 viewer5 = (ITextViewerExtension5) viewer;
			int widgetOffset = viewer5.modelOffset2WidgetOffset(position.offset
					+ position.length);

			StyledText textWidget = viewer.getTextWidget();
			Point pos = textWidget.getLocationAtOffset(widgetOffset);
			Point pSize = getExtent();
			if (snapPosition == SNAP_POSITION_OVER_RIGHT_FIELD) {
				pos.y -= pSize.y + GAP;
			} else {
				pos.y += textWidget.getLineHeight(widgetOffset) + GAP;
			}
			pos.x += GAP;
			Point dPos = textWidget.toDisplay(pos);
			Rectangle displayBounds = textWidget.getDisplay().getClientArea();
			Rectangle dPopupRect = Geometry.createRectangle(dPos, pSize);
			Geometry.moveInside(dPopupRect, displayBounds);
			return new Point(dPopupRect.x, dPopupRect.y);
		}

		case SNAP_POSITION_UNDER_LEFT_FIELD:
		case SNAP_POSITION_OVER_LEFT_FIELD:
		default: // same as SNAP_POSITION_UNDER_LEFT_FIELD
		{
			LinkedPosition position = fRenameLinkedMode
					.getCurrentLinkedPosition();
			if (position == null)
				return null;
			ISourceViewer viewer = fEditor.getTextViewer();
			ITextViewerExtension5 viewer5 = (ITextViewerExtension5) viewer;
			int widgetOffset = viewer5
					.modelOffset2WidgetOffset(position.offset/* + position.length */);

			StyledText textWidget = viewer.getTextWidget();
			Point pos = textWidget.getLocationAtOffset(widgetOffset);
			Point pSize = getExtent();
			pSize.y += HAH + 1;
			pos.x -= HAO;
			if (snapPosition == SNAP_POSITION_OVER_LEFT_FIELD) {
				pos.y -= pSize.y;
			} else {
				pos.y += textWidget.getLineHeight(widgetOffset);
			}
			Point dPos = textWidget.toDisplay(pos);
			Rectangle displayBounds = textWidget.getDisplay().getClientArea();
			Rectangle dPopupRect = Geometry.createRectangle(dPos, pSize);
			Geometry.moveInside(dPopupRect, displayBounds);
			return new Point(dPopupRect.x, dPopupRect.y);
		}

		}
	}

