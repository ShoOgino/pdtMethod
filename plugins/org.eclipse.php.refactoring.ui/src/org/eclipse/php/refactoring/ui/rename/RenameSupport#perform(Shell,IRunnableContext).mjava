	/**
	 * Executes the rename refactoring without showing a dialog to gather
	 * additional user input. Only an error dialog is shown (if necessary) to
	 * present the result of the refactoring's full precondition checking.
	 * <p>
	 * The method has to be called from within the UI thread.
	 * </p>
	 * 
	 * @param parent
	 *            a shell used as a parent for the error dialog.
	 * @param context
	 *            a {@link IRunnableContext} to execute the operation.
	 * 
	 * @throws InterruptedException
	 *             if the operation has been canceled by the user.
	 * @throws InvocationTargetException
	 *             if an error occurred while executing the operation.
	 * 
	 * @see #openDialog(Shell)
	 * @see IRunnableContext#run(boolean, boolean,
	 *      org.eclipse.jface.operation.IRunnableWithProgress)
	 */
	public void perform(Shell parent, IRunnableContext context)
			throws InterruptedException, InvocationTargetException {
		try {
			ensureChecked();
			if (fPreCheckStatus.hasFatalError()) {
				showInformation(parent, fPreCheckStatus);
				return;
			}
		} catch (CoreException e) {
			throw new InvocationTargetException(e);
		}

		// TODO: helpers here
		RefactoringExecutionHelper helper = new RefactoringExecutionHelper(
				fRefactoring,
				RefactoringCore.getConditionCheckingFailedSeverity(), false,
				parent, context);
		helper.perform(false);
	}

