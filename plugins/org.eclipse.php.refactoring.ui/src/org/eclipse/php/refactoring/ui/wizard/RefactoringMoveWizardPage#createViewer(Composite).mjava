	private TreeViewer createViewer(Composite parent) {
		TreeViewer treeViewer = new TreeViewer(parent, SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
		GridData gd = new GridData(GridData.FILL_BOTH);
		gd.widthHint = convertWidthInCharsToPixels(40);
		gd.heightHint = convertHeightInCharsToPixels(15);
		treeViewer.getTree().setLayoutData(gd);

		treeViewer.getTree().setLayoutData(gd);
		treeViewer.setLabelProvider(new WorkbenchLabelProvider());
		treeViewer.setContentProvider(new BaseWorkbenchContentProvider());
		treeViewer.setComparator(new WorkbenchViewerComparator());
		treeViewer.setInput(ResourcesPlugin.getWorkspace());
		treeViewer.addFilter(new ViewerFilter() {
			public boolean select(Viewer viewer, Object parentElement, Object element) {
				if (element instanceof IProject) {
					IProject project = (IProject) element;
					return project.isAccessible();
				} else if (element instanceof IFolder) {
					return true;
				}
				return false;
			}
		});
		// treeViewer.addSelectionChangedListener(new
		// ISelectionChangedListener() {
		// public void selectionChanged(SelectionChangedEvent event) {
		// validatePage();
		// }
		// });
		// if (resourcesToMove.length > 0) {
		// fDestinationField.setSelection(new
		// StructuredSelection(resourcesToMove[0].getParent()));
		// }
		// treeViewer.setLabelProvider(new
		// PHPElementLabelProvider(PHPElementLabelProvider.SHOW_SMALL_ICONS));
		// treeViewer.setContentProvider(new ContainerContentProvider());
		// treeViewer.setSorter(new PHPElementSorter());
		// treeViewer.setInput(PHPWorkspaceModelManager.getInstance());
		return treeViewer;
	}

