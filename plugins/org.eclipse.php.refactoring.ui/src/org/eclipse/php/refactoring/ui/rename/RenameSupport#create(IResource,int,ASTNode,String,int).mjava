	/**
	 * Creates a new rename support for the given {@link }.
	 * 
	 * @param operatedFile
	 * 
	 * @param project
	 *            the {@link IJavaProject} to be renamed.
	 * @param newName
	 *            the project's new name. <code>null</code> is a valid value
	 *            indicating that no new name is provided.
	 * @param flags
	 *            flags controlling additional parameters. Valid flags are
	 *            <code>UPDATE_REFERENCES</code> or <code>NONE</code>.
	 * @return the {@link RenameSupport}.
	 * @throws CoreException
	 *             if an unexpected error occurred while creating the
	 *             {@link RenameSupport}.
	 */
	public static RenameSupport create(IResource operatedFile, int element, ASTNode locateNode, String newName,
			int flags) throws CoreException {
		AbstractRenameProcessor<?> processor = null;
		if (operatedFile instanceof IContainer) {
			processor = new RenameFolderProcessor((IContainer) operatedFile);
		} else {
			switch (element) {
			case PHPElementConciliator.CONCILIATOR_GLOBAL_VARIABLE:
				processor = new RenameGlobalVariableProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_FUNCTION:
				processor = new RenameFunctionProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_LOCAL_VARIABLE:
				processor = new RenameLocalVariableProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_CLASSNAME:
				processor = new RenameClassProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_TRAITNAME:
				processor = new RenameTraitProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_CONSTANT:
				processor = new RenameGlobalConstantProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_CLASS_MEMBER:
				processor = new RenameClassMemberProcessor((IFile) operatedFile, locateNode);
				break;
			case PHPElementConciliator.CONCILIATOR_PROGRAM:
				processor = new RenameFileProcessor(operatedFile, (Program) locateNode);
				break;
			}
		}
		return processor == null ? null : new RenameSupport(processor, newName, flags);
	}

