	private void createSignaturePreview(Composite composite, RowLayouter layouter) {
		Label previewLabel = new Label(composite, SWT.NONE);
		previewLabel.setText(RefactoringMessages.ExtractMethodInputPage_signature_preview);
		layouter.perform(previewLabel);

		// IPreferenceStore store=
		// RefactoringUIPlugin.getDefault().getPreferenceStore();
		fSignaturePreview = new PHPSourceViewer(composite,
				SWT.READ_ONLY | SWT.V_SCROLL | SWT.WRAP /* | SWT.BORDER */);
		// fSignaturePreview.configure(new
		// JavaSourceViewerConfiguration(JavaPlugin.getDefault().getJavaTextTools().getColorManager(),
		// store, null, null));
		// fSignaturePreview.getTextWidget().setFont(JFaceResources.getFont(PreferenceConstants.EDITOR_TEXT_FONT));
		fSignaturePreview.getTextWidget().setBackground(composite.getBackground());
		fSignaturePreview.setText(fSignaturePreviewDocument);
		fSignaturePreview.setEditable(false);

		// Layouting problems with wrapped text: see
		// https://bugs.eclipse.org/bugs/show_bug.cgi?id=9866
		Control signaturePreviewControl = fSignaturePreview.getTextWidget();

		fSignaturePreview.setLayout(new GridLayout());
		GridData gd = new GridData(GridData.FILL_BOTH);
		gd.horizontalSpan = 2;
		fSignaturePreview.setLayoutData(gd);

		PixelConverter pixelConverter = new PixelConverter(signaturePreviewControl);
		GridData gdata = new GridData(GridData.FILL_BOTH);
		gdata.widthHint = pixelConverter.convertWidthInCharsToPixels(50);
		gdata.heightHint = pixelConverter.convertHeightInCharsToPixels(2);
		signaturePreviewControl.setLayoutData(gdata);
		layouter.perform(signaturePreviewControl);
	}

