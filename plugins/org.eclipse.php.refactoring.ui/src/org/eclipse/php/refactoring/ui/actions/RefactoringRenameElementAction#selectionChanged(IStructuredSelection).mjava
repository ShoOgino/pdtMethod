	public void selectionChanged(IStructuredSelection selection) {
		setEnabled(true);

		if (selection instanceof ITextSelection) {
			setEnabled(true);
			return;
		}
		if (selection == null || selection.size() != 1) {
			setEnabled(false);
			return;
		}
		if (!selection.isEmpty()) {
			if (ActionUtils.containsOnlyProjects(selection.toList())) {
				setEnabled(createWorkbenchAction(selection).isEnabled());
				return;
			}
			// List elements = selection.toList();
			// IResource[] resources =
			// ActionUtils.getPHPResources(elements.toArray());
			// Collection<CodeData> refactorablePHPElements = new LinkedList();
			// Object[] phpElements = ActionUtils.getPHPElements(elements);
			// for (Object phpElement : phpElements) {
			// if (!(phpElement instanceof CodeData)) // XXX this is unclear!
			// continue;
			// CodeData codeData = (CodeData) phpElement;
			// if (codeData.isUserCode()) {
			// IResource res = PHPModelUtil.getResource(codeData);
			// if (res != null && res.exists())
			// refactorablePHPElements.add(codeData);
			// }
			// }

			// if (elements.size() != resources.length +
			// refactorablePHPElements.size())
			// setEnabled(false);
			// else
			setEnabled(true);
		}
	}

