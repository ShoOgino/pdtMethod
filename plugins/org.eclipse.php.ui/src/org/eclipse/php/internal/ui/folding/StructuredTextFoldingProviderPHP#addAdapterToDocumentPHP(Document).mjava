	/**
	 * Adds the php adapter to the document
	 * @param document
	 */
	private void addAdapterToDocumentPHP(Document document) {
		if (document == null) {
			return;
		}

		final INodeNotifier notifier = (INodeNotifier) document;

		// try and get the adapter for the current node and update the
		// adapter with projection information
		final ProjectionModelNodeAdapterPHP adapter = (ProjectionModelNodeAdapterPHP) notifier.getExistingAdapter(ProjectionModelNodeAdapterPHP.class);
		if (adapter != null) {
			adapter.updateAdapter(document, fViewer);
		} else {
			// just call getadapter so the adapter is created and
			// automatically initialized
			notifier.getAdapterFor(ProjectionModelNodeAdapterPHP.class);
		}
	}

