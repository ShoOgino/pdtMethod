	private ISourceModule createFakeSourceModule(String filePath) {
		// filePath = normalize(filePath);
		try {
			final IFileStore fileStore = EFS.getLocalFileSystem().getStore(
					new Path(filePath));
			IFileInfo fetchInfo = fileStore.fetchInfo();
			if (!fetchInfo.isDirectory() && fetchInfo.exists()) {
				IURIEditorInput editorInput = new FileStoreEditorInput(
						fileStore);
				final URI uri = editorInput.getURI();
				// final IFileStore fileStore = EFS.getStore(uri);
				final IPath path = URIUtil.toPath(uri);
				final String fileStoreName = fileStore.getName();
				if (fileStoreName == null || path == null)
					return null;

				WorkingCopyOwner woc = new WorkingCopyOwner() {
					/*
					 * @see
					 * org.eclipse.jdt.core.WorkingCopyOwner#createBuffer(org
					 * .eclipse .jdt.core.ICompilationUnit)
					 * 
					 * @since 3.2
					 */
					public IBuffer createBuffer(ISourceModule workingCopy) {
						return new DocumentAdapter(workingCopy, fileStore, path);
					}
				};

				IBuildpathEntry[] cpEntries = null;
				IScriptProject jp = findScriptProject(path);
				if (jp != null)
					cpEntries = jp.getResolvedBuildpath(true);

				if (cpEntries == null || cpEntries.length == 0)
					cpEntries = new IBuildpathEntry[] { ScriptRuntime
							.getDefaultInterpreterContainerEntry() };

				final ISourceModule cu = woc.newWorkingCopy(fileStoreName,
						cpEntries, new IProblemRequestor() {

							public void acceptProblem(IProblem problem) {
								// TODO Auto-generated method stub

							}

							public void beginReporting() {
								// TODO Auto-generated method stub

							}

							public void endReporting() {
								// TODO Auto-generated method stub

							}

							public boolean isActive() {
								// TODO Auto-generated method stub
								return false;
							}
						}, new NullProgressMonitor());

				// if (!isModifiable(editorInput))
				ScriptModelUtil.reconcile(cu);

				return cu;

			}
		} catch (CoreException ex) {
			return null;
		}
		return null;
	}

