	/**
	 * Returns all PHP editor text hovers contributed to the workbench.
	 * 
	 * @return an array of PHPEditorTextHoverDescriptor
	 * @since 2.1
	 */
	public PHPEditorTextHoverDescriptor[] getPHPEditorTextHoverDescriptors() {
		if (fPHPEditorTextHoverDescriptors == null) {
			fPHPEditorTextHoverDescriptors = PHPEditorTextHoverDescriptor.getContributedHovers();
			ConfigurationElementSorter sorter = new ConfigurationElementSorter() {
				/*
				 * @seeorg.eclipse.ui.texteditor.ConfigurationElementSorter#
				 * getConfigurationElement(java.lang.Object)
				 */
				public IConfigurationElement getConfigurationElement(Object object) {
					return ((PHPEditorTextHoverDescriptor) object).getConfigurationElement();
				}
			};
			sorter.sort(fPHPEditorTextHoverDescriptors);

			// Move Best Match hover to front
			for (int i = 0; i < fPHPEditorTextHoverDescriptors.length - 1; i++) {
				if (PreferenceConstants.ID_BESTMATCH_HOVER.equals(fPHPEditorTextHoverDescriptors[i].getId())) {
					PHPEditorTextHoverDescriptor hoverDescriptor = fPHPEditorTextHoverDescriptors[i];
					for (int j = i; j > 0; j--)
						fPHPEditorTextHoverDescriptors[j] = fPHPEditorTextHoverDescriptors[j - 1];
					fPHPEditorTextHoverDescriptors[0] = hoverDescriptor;
					break;
				}

			}
		}

		return fPHPEditorTextHoverDescriptors;
	}

