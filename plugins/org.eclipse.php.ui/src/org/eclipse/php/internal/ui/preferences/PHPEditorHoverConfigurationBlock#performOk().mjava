	public void performOk() {
		StringBuffer buf = new StringBuffer();
		StringBuffer maskBuf = new StringBuffer();
		for (int i = 0; i < fHoverConfigs.length; i++) {
			buf.append(getContributedHovers()[i].getId());
			buf.append(PHPEditorTextHoverDescriptor.VALUE_SEPARATOR);
			if (!fHoverConfigs[i].fIsEnabled)
				buf.append(PHPEditorTextHoverDescriptor.DISABLED_TAG);
			String modifier = fHoverConfigs[i].fModifierString;
			if (modifier == null || modifier.length() == 0)
				modifier = PHPEditorTextHoverDescriptor.NO_MODIFIER;
			buf.append(modifier);
			buf.append(PHPEditorTextHoverDescriptor.VALUE_SEPARATOR);

			maskBuf.append(getContributedHovers()[i].getId());
			maskBuf.append(PHPEditorTextHoverDescriptor.VALUE_SEPARATOR);
			maskBuf.append(fHoverConfigs[i].fStateMask);
			maskBuf.append(PHPEditorTextHoverDescriptor.VALUE_SEPARATOR);
		}
		fStore.setValue(PreferenceConstants.EDITOR_TEXT_HOVER_MODIFIERS, buf.toString());
		fStore.setValue(PreferenceConstants.EDITOR_TEXT_HOVER_MODIFIER_MASKS, maskBuf.toString());
		fStore.setValue(PreferenceConstants.EDITOR_ANNOTATION_ROLL_OVER, fRollOverCheckBox.getSelection());

		PHPUiPlugin.getDefault().resetPHPEditorTextHoverDescriptors();
	}

