		protected IUndoableOperation createOperation(final IPath path, final IResource resource) {
			IUndoableOperation operation = new AbstractOperation("Advanced rename") { //$NON-NLS-1$
				private IPath oldPath = resource.getFullPath();
				final private Map<Integer, IBreakpoint> breakpoints = new HashMap<Integer, IBreakpoint>(6);
				final private Map<Integer, Map<String, Object>> breakpointAttributes = new HashMap<Integer, Map<String, Object>>(6);

				@Override
				public IStatus execute(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
					doRunWithNewPath(path, resource, breakpoints, breakpointAttributes);
					return Status.OK_STATUS;
				}

				@Override
				public IStatus redo(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
					IResource newResource = ResourcesPlugin.getWorkspace().getRoot().findMember(resource.getFullPath());
					selectionChanged(new StructuredSelection(newResource));
					doRunWithNewPath(path, newResource, breakpoints, breakpointAttributes);
					return Status.OK_STATUS;
				}

				@Override
				public IStatus undo(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
					IResource newResource = ResourcesPlugin.getWorkspace().getRoot().findMember(path);
					selectionChanged(new StructuredSelection(newResource));
					doRunWithNewPath(oldPath, newResource, breakpoints, breakpointAttributes);
					return Status.OK_STATUS;
				}
			};
			return operation;
		}

