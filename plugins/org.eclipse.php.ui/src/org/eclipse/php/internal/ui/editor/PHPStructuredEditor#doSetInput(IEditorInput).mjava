	@Override
	protected void doSetInput(IEditorInput input) throws CoreException {
		IFile resource = null;
		isExternal = false;

		if (input instanceof IFileEditorInput) {
			// This is the existing workspace file
			final IFileEditorInput fileInput = (IFileEditorInput) input;
			resource = fileInput.getFile();
			if (getRefactorableFileEditorInput() != null && getRefactorableFileEditorInput().isRefactor()) {
				getRefactorableFileEditorInput().setRefactor(false);
				if (getDocumentProvider() != null) {
					getDocumentProvider().disconnect(getRefactorableFileEditorInput());
				}
				getRefactorableFileEditorInput().setFile(fileInput.getFile());
				input = getRefactorableFileEditorInput();
			} else {
				input = new RefactorableFileEditorInput(fileInput.getFile());
			}

		}

		if (resource != null) {
			if (PHPToolkitUtil.isPHPFile(resource)) {

				PHPSourceParser.editFile.set(resource);

				super.doSetInput(input);

				// At this point new document content was set, maybe even
				// getProject() value was updated (for example when document
				// was moved from one PHP project to another).
				initPHPVersionsListener();

			} else {
				super.doSetInput(input);
			}
		} else {
			isExternal = true;
			super.doSetInput(input);
		}

		ImageDescriptor imageDescriptor = input.getImageDescriptor();
		if (imageDescriptor != null) {
			setTitleImage(JFaceResources.getResources().createImageWithDefault(imageDescriptor));
		}
		if (isShowingOverrideIndicators()) {
			installOverrideIndicator(true);
		}

		if (fProjectionModelUpdater != null) {
			updateProjectionSupport();
		}

		if (fPHPEditorErrorTickUpdater != null) {
			fPHPEditorErrorTickUpdater.updateEditorImage(getModelElement());
		}
	}

