	/**
	 * Returns true if the given <code>edit</code> is minimal.
	 * <p>
	 * That is if:
	 * <ul>
	 * <li><b>true</b> if <code>edit</code> is a leaf</li>
	 * <li>if <code>edit</code> is a inner node then <b>true</b> if
	 *   <ul>
	 *   <li><code>edit</code> has same size as all its children</li>
	 *   <li><code>isPacked</code> is <b>true</b> for all children</li>
	 *   </ul>
	 * </li>
	 * </ul>
	 * </p>
	 *
	 * @param edit the edit to verify
	 * @return true if edit is minimal
	 * @since 3.4
	 */
	public static boolean isPacked(TextEdit edit) {
		if (!(edit instanceof MultiTextEdit))
			return true;

		if (!edit.hasChildren())
			return true;

		TextEdit[] children= edit.getChildren();
		if (edit.getOffset() != children[0].getOffset())
			return false;

		if (edit.getExclusiveEnd() != children[children.length - 1].getExclusiveEnd())
			return false;

		for (int i= 0; i < children.length; i++) {
			if (!isPacked(children[i]))
				return false;
		}

		return true;
	}

