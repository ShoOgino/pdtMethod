	private boolean canHandle(IStructuredSelection elements) {
		if (elements.size() == 0)
			return false;
		try {
			fSelectedElements.clear();
			for (Iterator iter = elements.iterator(); iter.hasNext();) {
				Object element = iter.next();
				fSelectedElements.add(element);
				if (!(element instanceof IProjectFragment
						|| element instanceof IScriptProject || element instanceof IncludePath))
					return false;
				if (element instanceof IScriptProject) {
					IScriptProject project = (IScriptProject) element;
					if (!BuildpathModifier.isSourceFolder(project)
							|| BuildPathUtils.isInBuildpath(project.getPath(),
									project))
						return false;
				} else if (element instanceof IProjectFragment) {
					IBuildpathEntry entry = ((IProjectFragment) element)
							.getRawBuildpathEntry();
					if (entry != null
							&& entry.getEntryKind() == IBuildpathEntry.BPE_CONTAINER) {
						return false;
					}
				} else if (element instanceof IncludePath) {
					return true;
				}
			}
			return true;
		} catch (ModelException e) {
		}
		return false;
	}

