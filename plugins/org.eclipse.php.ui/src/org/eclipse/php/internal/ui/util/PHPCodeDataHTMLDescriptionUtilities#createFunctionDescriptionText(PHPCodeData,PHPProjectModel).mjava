	public static final String createFunctionDescriptionText(PHPCodeData phpCodeData, PHPProjectModel projectModel) {
		descriptionText.delete(0, descriptionText.length());
		String desc = phpCodeData.getDescription();
		PHPCodeData container = phpCodeData.getContainer();
		String fileName = phpCodeData.isUserCode() ? phpCodeData.getUserData().getFileName() : null;
		boolean isClassFunction = container != null && container instanceof PHPClassData;

		// append the file name
		if (fileName != null) {
			File file = new File(fileName);
			Path path = new Path(fileName);
			if (path.getDevice() != null && !file.exists()) {
				fileName = new Path(fileName).lastSegment();
				descriptionText.append(getLocationTableRow(fileName));
			} else {
				descriptionText.append(getLocationTableRow(fileName));
			}

		}

		// append the class name if it exists
		if (isClassFunction) {
			descriptionText.append(getClassNameTableRow(container.getName(), projectModel));
		}
		// append description if it exists
		if (desc.length() > 0) {
			descriptionText.append(getDescriptionTableRow(desc));
		}
		// append tags information
		if (phpCodeData.getDocBlock() != null) {
			// append parameters info
			Iterator it = phpCodeData.getDocBlock().getTags(PHPDocTag.PARAM);
			if (it.hasNext()) {
				descriptionText.append(getParamTagTableRows(it));
			}
			// append return type
			it = phpCodeData.getDocBlock().getTags(PHPDocTag.RETURN);
			if (it.hasNext()) {
				descriptionText.append(getReturnTagTableRows(it));
			}
			// append throw info
			it = phpCodeData.getDocBlock().getTags(PHPDocTag.THROWS);
			if (it.hasNext()) {
				descriptionText.append(getThrowTagTableRows(it));
			}
			// append see also information
			it = phpCodeData.getDocBlock().getTags(PHPDocTag.SEE);
			if (it.hasNext()) {
				descriptionText.append(getSeeAlsoTagTableRows(it, projectModel, phpCodeData));
			}
			// append deprecated information
			it = phpCodeData.getDocBlock().getTags(PHPDocTag.DEPRECATED);
			if (it.hasNext()) {
				descriptionText.append(getDeprecatedTagTableRow(it));
			}
		}
		// append closing tags
		return descriptionText.toString();
	}

