	protected List computeScriptCompletionProposals(int offset, final ScriptContentAssistInvocationContext context, IProgressMonitor monitor) {
		
		// Source module getting
		ISourceModule sourceModule = context.getSourceModule();
		if (sourceModule == null) {
			return Collections.EMPTY_LIST;
		}

		// Create and configure collector
		final ScriptCompletionProposalCollector collector = createCollector(context);
		if (collector == null) {
			return Collections.EMPTY_LIST;
		}

		collector.setInvocationContext(context);

		Display display = Display.getDefault();
		display.syncExec(new Runnable() {
			public void run() {
				Point selection = context.getViewer().getSelectedRange();
				if (selection.y > 0) {
					collector.setReplacementLength(selection.y);
				}
			}
		});

		// Filling collector with proposals
		try {
			sourceModule.codeComplete(offset, collector);
		} catch (ModelException e) {
			handleCodeCompletionException(e, context);
		}

		ICompletionProposal[] proposals = collector.getScriptCompletionProposals();

		// Checking proposals
		if (proposals.length == 0) {
			String error = collector.getErrorMessage();
			if (error.length() > 0) {
				fErrorMessage = error;
			}

			return Collections.EMPTY_LIST;
		}

		return Arrays.asList(proposals);
	}

