	private int searchForClosingPeer(int offset, char openingPeer,
			char closingPeer, IDocument document) throws BadLocationException {
		boolean useGenericsHeuristic = openingPeer == '<';
		if (useGenericsHeuristic && !fHighlightAngularBrackets)
			return -1;
		PHPHeuristicScanner scanner = PHPHeuristicScanner
				.createHeuristicScanner(document, offset);
		if (useGenericsHeuristic
				&& !isTypeParameterBracket(offset, document, scanner))
			return -1;

		return scanner.findClosingPeer(offset + 1, openingPeer, closingPeer);
	}

