	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.dltk.internal.ui.StandardModelElementContentProvider#getChildren
	 * (java.lang.Object)
	 */
	@Override
	public Object[] getChildren(Object element) {

		// handle the project fragment used for containing the language model
		if (element instanceof IProjectFragment) {
			try {
				List<Object> children = new ArrayList<Object>();

				// Create the constant node that will aggregate all of the PHP
				// constants
				ConstantNode constantNode = new ConstantNode();
				children.add(constantNode);

				Object[] projectFragmentContent = getProjectFragmentContent((IProjectFragment) element);
				for (Object modelElement : projectFragmentContent) {
					if (modelElement instanceof ExternalSourceModule) {
						IModelElement[] externalSourceModuleChildren = ((ExternalSourceModule) modelElement)
								.getChildren();
						constantNode
								.addSourceModuleChildren(externalSourceModuleChildren);
						// filter the constants from the main view
						IModelElement[] elements = filterConstants(externalSourceModuleChildren);
						children.addAll(Arrays.asList(elements));
					}
				}

				Object[] array = children.toArray(new Object[children.size()]);
				return array;

			} catch (ModelException e) {
				Logger.logException(e);
			}
			// handle all method references
		} else if (element instanceof ISourceReference) {
			ISourceReference source = ((ISourceReference) element);
			return super.getChildren(source);
		} else if (element instanceof ConstantNode) {
			return ((ConstantNode) element).getChildren();
		}

		return NO_CHILDREN;
	}

