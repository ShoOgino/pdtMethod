	/** (non-Javadoc)
	 * @see org.eclipse.php.internal.core.phpModel.parser.ModelListener#fileDataChanged(org.eclipse.php.internal.core.phpModel.phpElementData.PHPFileData)
	 */
	public void fileDataChanged(final PHPFileData fileData) {

		// don't refresh for uninitialized viewers
		if (fDocument == null) {
			return;
		}

		final IStructuredModel model = StructuredModelManager.getModelManager().getExistingModelForRead(fDocument);
		assert model instanceof DOMModelForPHP : "Incompatible model or null";
		try {
			final DOMModelForPHP viewerModel = (DOMModelForPHP) model;
			if (viewerModel != null && viewerModel.getFileData() == fileData) {
				final IDOMDocument document = viewerModel.getDocument();
				// Update the PHP annotations
				final INodeAdapter adapterFor = document.getAdapterFor(ProjectionModelNodeAdapterPHP.class);
				if (adapterFor != null) {
					assert adapterFor instanceof ProjectionModelNodeAdapterPHP : "wrong adapter";
					final ProjectionModelNodeAdapterPHP phpAdapter = (ProjectionModelNodeAdapterPHP) adapterFor;
					phpAdapter.updateAdapter(document);
				}
			}
		} finally {
			if (model != null) {
				model.releaseFromRead();
			}
		}
	}

