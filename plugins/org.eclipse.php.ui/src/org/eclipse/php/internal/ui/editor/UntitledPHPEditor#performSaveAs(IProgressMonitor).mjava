	/**
	 * Overrides
	 */
	protected void performSaveAs(IProgressMonitor progressMonitor) {
		Shell shell = getSite().getShell();
		final IEditorInput input = getEditorInput();

		IDocumentProvider provider = getDocumentProvider();
		SaveAsDialog dialog = new SaveAsDialog(shell);
		dialog.setOriginalName(input.getName());
		dialog.create();

		if (dialog.open() == Window.CANCEL) {
			if (progressMonitor != null)
				progressMonitor.setCanceled(true);
			return;
		}

		IPath newPath = dialog.getResult();
		if (newPath == null) {
			if (progressMonitor != null)
				progressMonitor.setCanceled(true);
			return;
		}

		IWorkspace workspace = ResourcesPlugin.getWorkspace();
		IFile file = workspace.getRoot().getFile(newPath);
		final IEditorInput newInput = new FileEditorInput(file);

		if (provider == null) {
			// editor has programmatically been closed while the dialog was open
			return;
		}

		boolean success = false;
		try {
			provider.aboutToChange(newInput);
			provider.saveDocument(progressMonitor, newInput, provider
					.getDocument(input), true);
			success = true;

		} catch (CoreException x) {
			Logger.logException(x);
			final IStatus status = x.getStatus();
			if (status == null || status.getSeverity() != IStatus.CANCEL) {
				String title = PHPUIMessages
						.getString("UntitledPHPEditor_saveError"); //$NON-NLS-1$
				String msg = NLSUtility
						.format(
								PHPUIMessages
										.getString("UntitledPHPEditor_documentCannotBeSaved"), x.getMessage()); //$NON-NLS-1$
				MessageDialog.openError(shell, title, msg);
			}
		} finally {
			// 1. close the untitled document
			// 2. open the saved file from its new path
			close(false);
			try {
				IWorkbenchPage p = DLTKUIPlugin.getActivePage();
				if (p != null) {
					IDE.openEditor(p, newInput, PHPUiConstants.PHP_EDITOR_ID);
				}
			} catch (CoreException e) {
				Logger.logException(e);
			}
		}

		deleteUntitledStorageFile(file);

		if (progressMonitor != null)
			progressMonitor.setCanceled(!success);

		return;
	}

