		/**
		 * A post selection event has occurred.
		 * 
		 * @param selection
		 *                      the selection
		 */
		public void firePostSelectionChanged(final ITextSelection selection) {
			if (fCurrentJob != null) {
				fCurrentJob.cancel();
			}
			final ISourceModule typeRoot = EditorUtility.getEditorInputModelElement(fPart, false);
			if (typeRoot == null) {
				return;
			}

			fCurrentJob = new Job("Selection Job titile") { //$NON-NLS-1$
				@Override
				public IStatus run(IProgressMonitor monitor) {
					if (monitor == null) {
						monitor = new NullProgressMonitor();
					}

					try {
						if (!typeRoot.isConsistent()) {
							synchronized (this) {
								if (!monitor.isCanceled()) {
									schedule(1000);
								}
							}
							return Status.OK_STATUS;
						}
					} catch (ModelException e) {
						// never happens, fall thru
					}
					synchronized (fJobLock) {
						// The monitor is never null
						return calculateASTandInform(typeRoot, selection, monitor);
					}
				}
			};
			fCurrentJob.setPriority(Job.DECORATE);
			fCurrentJob.setSystem(true);
			fCurrentJob.schedule();
		}

