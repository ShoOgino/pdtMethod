	public static CompiledTemplate compileTemplate(ContextTypeRegistry contextTypeRegistry, Template template,
			String containerName, String fileName, String lineDelimiter) {
		String string = null;
		int offset = 0;
		if (template != null) {
			IDocument document = new Document();
			DocumentTemplateContext context = getContext(contextTypeRegistry, template, containerName, fileName,
					document);
			if (context instanceof PhpTemplateContext) {
				PhpTemplateContext phpTemplateContext = (PhpTemplateContext) context;
				phpTemplateContext.setLineDelimiter(lineDelimiter);
			}
			TemplateBuffer buffer = null;
			try {
				buffer = context.evaluate(template);
			} catch (BadLocationException e) {
				PHPUiPlugin.log(e);
			} catch (TemplateException e) {
				PHPUiPlugin.log(e);
			}
			if (buffer != null) {
				string = buffer.getString();
				TemplateVariable[] variables = buffer.getVariables();
				for (int i = 0; i != variables.length; i++) {
					TemplateVariable variable = variables[i];
					if ("cursor".equals(variable.getName())) { //$NON-NLS-1$
						offset = variable.getOffsets()[0];
					}
				}
			}
		}
		return new CompiledTemplate(string, offset);
	}

