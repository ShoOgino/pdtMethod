	public void connect(IDocument document) {
		if (document == null) {
			throw new IllegalStateException(PHPUIMessages.getString("PHPValidator.0")); //$NON-NLS-1$
		}

		this.document = document;

		if (!(document instanceof IStructuredDocument)) {
			throw new IllegalStateException(PHPUIMessages.getString("PHPValidator.1")); //$NON-NLS-1$
		}

		// check for read only files (such as include path files, etc.)
		if (FileBufferModelManager.getInstance().calculateId(document) == null) {
			this.document = null;
			return;
		}

		final IStructuredModel model = StructuredModelManager.getModelManager().getModelForRead((IStructuredDocument) document);
		if (model == null) {
			throw new IllegalStateException(PHPUIMessages.getString("PHPValidator.2")); //$NON-NLS-1$
		}

		try {
			// get the 
			assert model instanceof DOMModelForPHP;
			final DOMModelForPHP phpDomModel = (DOMModelForPHP) model;

			this.file = phpDomModel.getIFile();
			if (file == null) {
				throw new IllegalStateException(PHPUIMessages.getString("PHPValidator.3") + phpDomModel.getBaseLocation()); //$NON-NLS-1$
			}

		} finally {
			if (model != null) {
				model.releaseFromRead();
			}
		}

	}

