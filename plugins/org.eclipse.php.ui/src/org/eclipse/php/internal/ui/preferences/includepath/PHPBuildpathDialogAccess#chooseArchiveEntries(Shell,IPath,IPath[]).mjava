	/**
	 * Shows the UI to select new JAR or ZIP archive entries located in the
	 * workspace. The dialog returns the selected entries or <code>null</code>
	 * if the dialog has been canceled. The dialog does not apply any changes.
	 * 
	 * @param shell
	 *            The parent shell for the dialog.
	 * @param initialSelection
	 *            The path of the element (container or archive) to initially
	 *            select or <code>null</code> to not select an entry.
	 * @param usedEntries
	 *            An array of paths that are already on the buildpath and
	 *            therefore should not be selected again.
	 * @return Returns the new buildpath container entry paths or
	 *         <code>null</code> if the dialog has been canceled by the user.
	 */
	public static IPath[] chooseArchiveEntries(Shell shell,
			IPath initialSelection, IPath[] usedEntries) {
		if (usedEntries == null) {
			throw new IllegalArgumentException();
		}

		Class[] acceptedClasses = new Class[] { IFile.class };
		TypedElementSelectionValidator validator = new TypedElementSelectionValidator(
				acceptedClasses, true);
		ArrayList usedPhars = new ArrayList(usedEntries.length);
		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
		for (int i = 0; i < usedEntries.length; i++) {
			IResource resource = root.findMember(usedEntries[i]);
			if (resource instanceof IFile) {
				usedPhars.add(resource);
			}
		}
		IResource focus = initialSelection != null ? root
				.findMember(initialSelection) : null;

		ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(
				shell, new WorkbenchLabelProvider(),
				new WorkbenchContentProvider());
		dialog.setHelpAvailable(false);
		dialog.setValidator(validator);
		dialog
				.setTitle(Messages.BuildPathDialogAccess_ZIPArchiveDialog_new_title);
		dialog
				.setMessage(Messages.BuildPathDialogAccess_ZIPArchiveDialog_new_description);
		dialog.addFilter(new PHPArchiveFileFilter(usedPhars, true));
		dialog.setInput(root);
		dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
		dialog.setInitialSelection(focus);

		if (dialog.open() == Window.OK) {
			Object[] elements = dialog.getResult();
			IPath[] res = new IPath[elements.length];
			for (int i = 0; i < res.length; i++) {
				IResource elem = (IResource) elements[i];
				res[i] = elem.getFullPath();
			}
			return res;
		}
		return null;
	}

