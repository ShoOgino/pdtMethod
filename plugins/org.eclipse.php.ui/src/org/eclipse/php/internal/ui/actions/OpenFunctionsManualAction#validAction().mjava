	private boolean validAction() {
		ITextEditor editor = getTextEditor();
		if (editor == null) {
			return false;
		}

		IDocumentProvider docProvider = editor.getDocumentProvider();
		IEditorInput input = editor.getEditorInput();
		if (docProvider == null || input == null) {
			return false;
		}

		IDocument document = docProvider.getDocument(input);
		if (document == null) {
			return false;
		}

		if (!(document instanceof IStructuredDocument)) {
			return false;
		}

		ITextSelection currentSelection = getCurrentSelection();
		int offset = currentSelection.getOffset();
		IStructuredDocument structuredDocument = (IStructuredDocument) document;
		String partitionType;
		try {
			partitionType = structuredDocument.getPartition(offset).getType();
		} catch (BadLocationException e1) {
			Logger.logException(e1);
			return false;
		}
		if (!partitionType.equals(PHPPartitionTypes.PHP_DEFAULT)) {
			return false;
		}

		IStructuredDocumentRegion structuredDocumentRegion = structuredDocument.getRegionAtCharacterOffset(offset);
		ITextRegion textRegion = structuredDocumentRegion.getRegionAtCharacterOffset(offset);
		if (textRegion == null) {
			return false;
		}

		if (textRegion.getType() == PHPRegionContext.PHP_CONTENT) {
			PhpScriptRegion phpScriptRegion = (PhpScriptRegion) textRegion;
			try {
				textRegion = phpScriptRegion.getPhpToken(offset - structuredDocumentRegion.getStartOffset() - phpScriptRegion.getStart());
			} catch (BadLocationException e) {
				textRegion = null;
			}
		}
		if (textRegion == null) {
			return false;
		}

		CodeData[] codeDatas = CodeDataResolver.getInstance().resolve(structuredDocument, offset);
		if (codeDatas.length == 0) {
			return false;
		}
		CodeData codeData = codeDatas[0]; // XXX: handle multiple data!
		if (codeData.getUserData() != null) {
			return false;
		}

		if (codeData.isUserCode()) {
			return false;
		}

		if (!(codeData instanceof PHPFunctionData) && !(codeData instanceof PHPKeywordData)) {
			return false;
		}

		this.codeData = (PHPCodeData) codeData;
		return true;
	}

