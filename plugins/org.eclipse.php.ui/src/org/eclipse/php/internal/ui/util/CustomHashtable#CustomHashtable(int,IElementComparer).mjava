	/**
	 * Constructs a new hash table with the given capacity and the given element
	 * comparer.
	 * 
	 * @param capacity
	 *            the maximum number of elements that can be added without
	 *            rehashing
	 * @param comparer
	 *            the element comparer to use to compare keys and obtain hash
	 *            codes for keys, or <code>null</code> to use the normal
	 *            <code>equals</code> and <code>hashCode</code> methods
	 */
	public CustomHashtable(int capacity, IElementComparer comparer) {
		if (capacity >= 0) {
			elementCount = 0;
			elementData = new HashMapEntry[capacity == 0 ? 1 : capacity];
			firstSlot = elementData.length;
			loadFactor = 0.75f;
			computeMaxSize();
		} else
			throw new IllegalArgumentException();
		this.comparer = comparer;
	}

