	/**
	 * Opens local file in editor just like {@link OpenLocalFileAction} does.
	 * 
	 * @param filePath
	 *            Full path string of the local file
	 * @param lineNumber
	 *            Line number to reveal
	 * @throws CoreException
	 */
	public static IEditorPart openLocalFile(String filePath, int lineNumber)
			throws CoreException {

		IResource member = ResourcesPlugin.getWorkspace().getRoot().findMember(
				filePath);
		if (member instanceof IFile) {
			IEditorPart editor = org.eclipse.dltk.internal.ui.editor.EditorUtility
					.openInEditor(member, true);
			org.eclipse.dltk.internal.ui.editor.EditorUtility.revealInEditor(
					editor, lineNumber);
			return editor;
		}

		IPath path = new Path(filePath);
		String parentPath = path.removeLastSegments(1).toOSString();
		IFileStore fileStore = EFS.getLocalFileSystem().getStore(
				new Path(parentPath));

		fileStore = fileStore.getChild(path.lastSegment());

		if (!fileStore.fetchInfo().isDirectory()
				&& fileStore.fetchInfo().exists()) {

			IWorkbenchPage page = DLTKUIPlugin.getActivePage();
			IEditorPart editorPart = null;
			try {
				editorPart = IDE.openEditorOnFileStore(page, fileStore);
				// if the open file request has a line number, try to set the
				// cursor on that line
				if (lineNumber >= 0) {
					org.eclipse.dltk.internal.ui.editor.EditorUtility
							.revealInEditor(editorPart, lineNumber - 1); // XXX:
					// look
					// why
					// we
					// have
					// to
					// provide
					// lineNumber
					// -1
				}
				return editorPart;

			} catch (PartInitException e) {
				Logger.logException("Failed to open local file", e); //$NON-NLS-1$
			}
		}
		return null;
	}

