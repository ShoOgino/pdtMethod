	@Override
	public ISelection getSelection(final TreeViewer viewer, final ISelection selection) {
		if (!isLinkedWithEditor(viewer)) {
			return lastSelection;
		}
		if (!selection.isEmpty()) {
			lastSelection = selection;
		}
		final IContentProvider contentProvider = viewer.getContentProvider();
		if (contentProvider instanceof PHPOutlineContentProvider) {
			if (MODE_PHP == mode) {
				if (lastSelection instanceof IStructuredSelection && lastSelection instanceof TextSelection) {
					IEditorPart activeEditor = PHPUiPlugin.getActiveEditor();
					if (activeEditor instanceof PHPStructuredEditor) {
						ISourceReference computedSourceReference = ((PHPStructuredEditor) activeEditor)
								.computeHighlightRangeSourceReference();
						if (computedSourceReference != null) {
							Object parent = ((PHPOutlineContentProvider) contentProvider)
									.getParent(computedSourceReference);
							for (Object element : ((PHPOutlineContentProvider) contentProvider).getChildren(parent))
								if (element == computedSourceReference) {
									lastSelection = new StructuredSelection(computedSourceReference);
									return lastSelection;
								}
							lastSelection = new StructuredSelection(parent);
							return lastSelection;
						}
					}
				}
			}
		}
		return super.getSelection(viewer, lastSelection);
	}

