	@Override
	public IContentAssistProcessor[] getContentAssistProcessors(
			ISourceViewer sourceViewer, String partitionType) {
		IContentAssistProcessor[] processors = null;

		if (sourceViewer instanceof PHPStructuredTextViewer) {

			ITextEditor textEditor = ((PHPStructuredTextViewer) sourceViewer)
					.getTextEditor();
			if (phpCompletionProcessor == null) {
				ContentAssistant phpContentAssistant = (ContentAssistant) getPHPContentAssistant(sourceViewer);
				// phpCompletionProcessor may be initialized in
				// getPHPContentAssistant call
				if (phpCompletionProcessor == null) {
					phpCompletionProcessor = new PHPCompletionProcessor(
							textEditor, phpContentAssistant,
							PHPPartitionTypes.PHP_DEFAULT);
					addContentAssistProcessors(sourceViewer);
				}
			} else {
				ContentAssistant phpContentAssistant = (ContentAssistant) getPHPContentAssistant(sourceViewer);
				// make sure current contentAssistant install dltk's
				// ContentAssistProcessor.CompletionListener,so we can call
				// IContentAssistantExtension3.setRepeatedInvocationTrigger for
				// PHPContentAssistant,so we can press "ctrl+space" to switch
				// between different template categories
				if (phpCompletionProcessor.getAssistant() != phpContentAssistant) {
					phpCompletionProcessor = new PHPCompletionProcessor(
							textEditor, phpContentAssistant,
							PHPPartitionTypes.PHP_DEFAULT);
				}
			}

			if (partitionType == PHPPartitionTypes.PHP_DEFAULT) {
				processors = new IContentAssistProcessor[] { phpCompletionProcessor };
			} else {
				IContentAssistProcessor[] superProcessors;
				if (partitionType.equals(ICSSPartitions.STYLE)
						|| partitionType.equals(ICSSPartitions.COMMENT)) {
					IContentAssistProcessor processor = new CSSStructuredContentAssistProcessor(
							this.getContentAssistant(), partitionType,
							sourceViewer);
					superProcessors = new IContentAssistProcessor[] { processor };

				} else {
					superProcessors = super.getContentAssistProcessors(
							sourceViewer, partitionType);
				}
				processorMap.put(partitionType, superProcessors);
				if (superProcessors != null) {
					processors = new IContentAssistProcessor[superProcessors.length + 1];
					System.arraycopy(superProcessors, 0, processors, 0,
							superProcessors.length);
					processors[superProcessors.length] = phpCompletionProcessor;
				} else {
					processors = new IContentAssistProcessor[] { phpCompletionProcessor };
				}
			}
		} else {
			processors = new IContentAssistProcessor[0];
		}
		return processors;
	}

