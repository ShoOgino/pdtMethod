	/**
	 * finds the closest codeData to the offset
	 * @param skippedAreaEndoffset 
	 */
	private PHPCodeData getClosestCodeData(IStructuredDocument document, PHPFileData fileData, int offset, int skippedAreaEndoffset) {

		PHPCodeData closestCodeData = null;
		int closestCodeDataOffset = document.getLength();
		PHPClassData classes[] = fileData.getClasses();

		for (int i = 0; i < classes.length; i++) {
			PHPClassData classData = classes[i];
			int startOffset = classData.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = classData.getUserData().getEndPosition();
				if (endOffset > offset) {
					return getClosestCodeDataFromClass(document, classData, offset, skippedAreaEndoffset);
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = classData;
				}
			}
		}

		PHPFunctionData functions[] = fileData.getFunctions();

		for (int i = 0; i < functions.length; i++) {
			PHPFunctionData functionData = functions[i];
			int startOffset = functionData.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = functionData.getUserData().getEndPosition();
				if (endOffset > offset) {
					return null;
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = functionData;
				}
			}
		}

		PHPConstantData constants[] = fileData.getConstants();

		for (int i = 0; i < constants.length; i++) {
			PHPConstantData constant = constants[i];
			int startOffset = constant.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = constant.getUserData().getEndPosition();
				if (endOffset > offset) {
					return null;
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = constant;
				}
			}
		}

		if (closestCodeData != null && isNoCodeBetween(document, skippedAreaEndoffset, closestCodeDataOffset)) {
			return closestCodeData;
		}
		return null;
	}

