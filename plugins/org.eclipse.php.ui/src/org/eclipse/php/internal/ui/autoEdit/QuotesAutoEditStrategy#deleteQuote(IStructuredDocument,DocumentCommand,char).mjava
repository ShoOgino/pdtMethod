	private void deleteQuote(IStructuredDocument document,
			DocumentCommand command, char removedChar) {
		int offset = command.offset;

		IStructuredDocumentRegion sdRegion = document
				.getRegionAtCharacterOffset(offset);
		if (sdRegion == null
				|| sdRegion.getType() != PHPRegionTypes.PHP_CONTENT) {
			return;
		}
		try {
			ITextRegion tRegion = sdRegion.getRegionAtCharacterOffset(offset);
			int regionStart = sdRegion.getStartOffset(tRegion);
			// in case of container we have the extract the PhpScriptRegion
			if (tRegion instanceof ITextRegionContainer) {
				ITextRegionContainer container = (ITextRegionContainer) tRegion;
				tRegion = container.getRegionAtCharacterOffset(offset);
				regionStart += tRegion.getStart();
			}

			if (tRegion instanceof IPhpScriptRegion) {
				IPhpScriptRegion scriptRegion = (IPhpScriptRegion) tRegion;
				tRegion = scriptRegion.getPhpToken(offset - regionStart);

				if (tRegion == null
						|| tRegion.getType() != PHPRegionTypes.PHP_CONSTANT_ENCAPSED_STRING) {
					return;
				}

				if (offset != tRegion.getStart() + regionStart
						|| (tRegion.getTextLength() != 2 && !isBetweenBackquotes(
								sdRegion, offset))) {
					// looking only for the cases where the user is trying to
					// remove the first quote out of two coupled ones.
					return;
				}

				char nextChar = document.getChar(offset + 1);
				if (nextChar != removedChar) {
					return;
				}
				command.length = 2;
			}
		} catch (BadLocationException e) {
		}
	}

