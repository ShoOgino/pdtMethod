	/**
	 * Shows the UI to configure a JAR or ZIP archive located in the workspace. The
	 * dialog returns the configured buildpath entry path or <code>null</code> if
	 * the dialog has been canceled. The dialog does not apply any changes.
	 * 
	 * @param shell
	 *            The parent shell for the dialog.
	 * @param initialEntry
	 *            The path of the initial archive entry
	 * @param usedEntries
	 *            An array of paths that are already on the buildpath and therefore
	 *            should not be selected again.
	 * @return Returns the configured buildpath container entry path or
	 *         <code>null</code> if the dialog has been canceled by the user.
	 */
	public static IPath configureArchiveEntry(Shell shell, IPath initialEntry, IPath[] usedEntries) {
		if (initialEntry == null || usedEntries == null) {
			throw new IllegalArgumentException();
		}

		Class<?>[] acceptedClasses = new Class<?>[] { IFile.class };
		TypedElementSelectionValidator validator = new TypedElementSelectionValidator(acceptedClasses, false);

		ArrayList<IFile> usedJars = new ArrayList<>(usedEntries.length);
		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
		for (int i = 0; i < usedEntries.length; i++) {
			IPath curr = usedEntries[i];
			if (!curr.equals(initialEntry)) {
				IResource resource = root.findMember(usedEntries[i]);
				if (resource instanceof IFile) {
					usedJars.add((IFile) resource);
				}
			}
		}

		IResource existing = root.findMember(initialEntry);

		ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(shell, new WorkbenchLabelProvider(),
				new WorkbenchContentProvider());
		dialog.setValidator(validator);
		dialog.setTitle(IncludePathMessages.BuildPathDialogAccess_ZIPArchiveDialog_edit_title);
		dialog.setMessage(IncludePathMessages.BuildPathDialogAccess_ZIPArchiveDialog_edit_description);
		dialog.addFilter(new PHPArchiveFileFilter(usedJars, true));
		dialog.setInput(root);
		dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
		dialog.setInitialSelection(existing);

		if (dialog.open() == Window.OK) {
			IResource element = (IResource) dialog.getFirstResult();
			return element.getFullPath();
		}
		return null;
	}

