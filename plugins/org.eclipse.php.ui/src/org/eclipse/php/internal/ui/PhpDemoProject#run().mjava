	public static void run() {

		final IProject testProject = ResourcesPlugin.getWorkspace().getRoot().getProject(TEST_PROJECT_NAME);

		if (testProject.exists()) {
			return;
		}
		try {
			//create Example project
			testProject.create(null);
			testProject.open(null);
			providePhpNatureToProject(testProject);

			final IFile file = createFile(testProject, FILES_PATH, FILE_NAME1);
			createFile(testProject, FILES_PATH, FILE_NAME2);
			createFile(testProject, FILES_PATH, FILE_NAME3);
			createFile(testProject, FILES_PATH, FILE_NAME4);
			createFile(testProject, FILES_PATH, FILE_NAME5);
			createFile(testProject, FILES_PATH, FILE_NAME6);
			createFile(testProject, FILES_PATH, FILE_NAME7);
			createFile(testProject, FILES_PATH, FILE_NAME8);
			createFile(testProject, FILES_PATH, FILE_NAME9);
			createFile(testProject, FILES_PATH, FILE_NAME10);
			createFile(testProject, FILES_PATH, FILE_NAME11);
			createFile(testProject, FILES_PATH, FILE_NAME12);

			createFolder(testProject, FILES_PATH, SRC_FOLDER);
			createFile(testProject, FILES_PATH, SRC_FOLDER + SRC_FILE_NAME1);


			PlatformUI.getWorkbench().getDisplay().asyncExec(new Runnable() {
				public void run() {
					IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
					if (page != null) {
						try {
							page.openEditor(new FileEditorInput(file), PHPUiConstants.PHP_EDITOR_ID, false);//use false in order to keep the welcome screen
						} catch (PartInitException e) {
							Logger.logException(e);
						}
					}
				}
			});
		} catch (Exception e) {
			Logger.logException(e);
		}
	}

