	@SuppressWarnings("unchecked")
	public Object getAdapter(Class required) {

		if (fPHPOutlinePage != null && fPHPOutlinePage.getControl() != null
				&& !fPHPOutlinePage.getControl().isDisposed()) {

			final boolean[] isOutlineViewVisible = new boolean[] { Boolean.TRUE };
			// File Search action executes this method in a background thread
			Display.getDefault().syncExec(new Runnable() {

				public void run() {
					if (!fPHPOutlinePage.getControl().isVisible()) {
						isOutlineViewVisible[0] = false;
					}
				}
			});

			if (!isOutlineViewVisible[0])
				return null;

		}

		Object adapter = super.getAdapter(required);

		// add selection listener to outline page
		// so that if outline selects model element, editor selects correct item
		if (adapter instanceof ConfigurableContentOutlinePage
				&& IContentOutlinePage.class.equals(required)) {
			final ConfigurableContentOutlinePage outlinePage = (ConfigurableContentOutlinePage) adapter;
			if (fPHPOutlinePageListener == null) {
				fPHPOutlinePageListener = new OutlineSelectionChangedListener();
				outlinePage.addDoubleClickListener(fPHPOutlinePageListener);
			}
			fPHPOutlinePageListener.install(outlinePage);
			fPHPOutlinePage = outlinePage;

			// Set the outline page input only if it is different than the
			// current one
			IModelElement modelElement = getModelElement();
			outlinePage.setInput(modelElement);
			fModelElement = modelElement;
		}
		return adapter;
	}

