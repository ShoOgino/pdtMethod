	private static String createNamePattern(IModelElement element)
			throws ModelException {
		switch (element.getElementType()) {
		case IModelElement.SOURCE_MODULE:
			if (element instanceof ExternalSourceModule) {
				return RefactoringCoreMessages.ReorgUtils_21;
			} else {
				return RefactoringCoreMessages.ReorgUtils_4;
			}
		case IModelElement.FIELD:
			return RefactoringCoreMessages.ReorgUtils_5;
			// case IModelElement.IMPORT_CONTAINER:
			// return RefactoringCoreMessages.ReorgUtils_6;
			// case IModelElement.IMPORT_DECLARATION:
			// return RefactoringCoreMessages.ReorgUtils_7;
		case IModelElement.SCRIPT_PROJECT:
			return RefactoringCoreMessages.ReorgUtils_9;
		case IModelElement.METHOD:
			if (((IMethod) element).isConstructor())
				return RefactoringCoreMessages.ReorgUtils_10;
			else
				return RefactoringCoreMessages.ReorgUtils_11;
			// case IModelElement.PACKAGE_DECLARATION:
			// return RefactoringCoreMessages.ReorgUtils_12;
		case IModelElement.SCRIPT_FOLDER:
			if (ModelElementUtil.isDefaultPackage(element))
				return RefactoringCoreMessages.ReorgUtils_13;
			else
				return org.eclipse.php.internal.ui.refactor.processors.Messages.ReorgUtils_14;
		case IModelElement.PROJECT_FRAGMENT:
			if (isSourceFolder(element))
				return RefactoringCoreMessages.ReorgUtils_15;
			// if (isClassFolder(element))
			// return RefactoringCoreMessages.ReorgUtils_16;
			return RefactoringCoreMessages.ReorgUtils_17;
		case IModelElement.TYPE:
			// IType type= (IType)element;
			return RefactoringCoreMessages.ReorgUtils_18;
		default:
			Assert.isTrue(false);
			return null;
		}
	}

