	private void markReferences() {
		fCatchedExceptions= new ArrayList();
		boolean isVoid= true;
		fMethodDeclaration.accept(this);
		Block block= fMethodDeclaration.getBody();
		if (block != null) {
			List statements= block.statements();
//			if (statements.size() > 0) {
//				Statement last= (Statement)statements.get(statements.size() - 1);
//				int maxVariableId= LocalVariableIndex.perform(fMethodDeclaration);
//				FlowContext flowContext= new FlowContext(0, maxVariableId + 1);
//				flowContext.setConsiderAccessMode(false);
//				flowContext.setComputeMode(FlowContext.ARGUMENTS);
//				InOutFlowAnalyzer flowAnalyzer= new InOutFlowAnalyzer(flowContext);
//				FlowInfo info= flowAnalyzer.perform(new ASTNode[] {last});
//				if (!info.isNoReturn() && !isVoid) {
//					if (!info.isPartialReturn())
//						return;
//				}
//			}
			int offset= fMethodDeclaration.getStart() + fMethodDeclaration.getLength() - 1; // closing bracket
			fResult.add(new OccurrenceLocation(offset, 1, 0, fExitDescription));
		}
	}

