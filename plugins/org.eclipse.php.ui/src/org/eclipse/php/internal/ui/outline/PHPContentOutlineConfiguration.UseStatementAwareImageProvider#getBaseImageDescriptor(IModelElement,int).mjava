		public ImageDescriptor getBaseImageDescriptor(IModelElement element,
				int renderFlags) {
			if (element instanceof UseStatementElement) {
				return DLTKPluginImages.DESC_OBJS_IMPDECL;
			}
			if (element instanceof UseStatementsNode) {
				return DLTKPluginImages.DESC_OBJS_IMPCONT;
			}

			// If element is a field or method and it's parent is not a class or
			// interface
			// then we can avoid time consuming flag checking
			// (public/protected/private flags)
			IModelElement parent = element.getParent();
			if (parent != null && parent.getElementType() != IModelElement.TYPE) {
				if (element.getElementType() == IModelElement.FIELD) {
					return DLTKPluginImages.DESC_FIELD_PUBLIC;
				}
				if (element.getElementType() == IModelElement.METHOD) {
					return DLTKPluginImages.DESC_METHOD_PUBLIC;
				}
			}
			try {
				if (element instanceof IType
						&& PHPFlags.isTrait(((IType) element).getFlags())) {
					return PHPPluginImages.DESC_OBJS_TRAIT;
				}
			} catch (ModelException e) {
			}

			return super.getBaseImageDescriptor(element, renderFlags);
		}

