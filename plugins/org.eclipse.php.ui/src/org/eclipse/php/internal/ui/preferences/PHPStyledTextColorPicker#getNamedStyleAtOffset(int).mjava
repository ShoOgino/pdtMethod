	protected String getNamedStyleAtOffset(int offset) {
		// ensure the offset is clean
		if (offset >= fInput.length()) {
			return getNamedStyleAtOffset(fInput.length() - 1);
		} else if (offset < 0) {
			return getNamedStyleAtOffset(0);
		}
		// find the ITextRegion at this offset
		if (fNodes == null) {
			return null;
		}

		String regionContext;
		ITextRegion interest = fNodes.getRegionAtCharacterOffset(offset);
		
		ITextRegionCollection container = fNodes;
		if (interest instanceof ITextRegionContainer) {
			container = (ITextRegionContainer) interest;
			interest = container.getRegionAtCharacterOffset(offset);
		}
		
		if (interest.getType() == PHPRegionContext.PHP_CONTENT) {
			PhpScriptRegion phpScript = (PhpScriptRegion) interest;
			try {
				regionContext = phpScript.getPhpTokenType(offset - container.getStartOffset() - phpScript.getStart());
			} catch (BadLocationException e) {
				assert false;
				return null;
			}
		} else if (interest.getType() == PHPRegionContext.PHP_OPEN) {
			regionContext = PHPRegionTypes.PHP_OPENTAG;
		} else if (interest.getType() == PHPRegionContext.PHP_CLOSE) {
			regionContext = PHPRegionTypes.PHP_CLOSETAG;
		} else {
			regionContext = interest.getType();
		}

		// find the named style (internal/selectable name) for that
		// context
		String namedStyle = (String) getContextStyleMap().get(regionContext);
		return namedStyle;
	}

