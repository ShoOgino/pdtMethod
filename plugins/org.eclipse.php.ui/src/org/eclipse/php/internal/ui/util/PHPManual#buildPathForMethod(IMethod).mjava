	protected String buildPathForMethod(IMethod method) {

		ISourceModule sourceModule = method.getSourceModule();
		ModuleDeclaration moduleDeclaration = SourceParserUtil
				.getModuleDeclaration(sourceModule);
		MethodDeclaration methodDeclaration;
		try {
			methodDeclaration = PHPModelUtils.getNodeByMethod(
					moduleDeclaration, method);
		} catch (ModelException e) {
			return null;
		}

		String path = getPHPDocLink(methodDeclaration);
		if (path == null) {
			IType declaringType = method.getDeclaringType();
			if (declaringType != null) {
				String functionName = declaringType.getElementName() + "::" //$NON-NLS-1$
						+ method.getElementName();
				path = (String) getPHPEntityPathMap().get(
						functionName.toLowerCase());
				if (path == null) {
					path = buildPathForMethod(declaringType.getElementName(),
							method.getElementName());
				}
			} else {
				path = (String) getPHPEntityPathMap().get(
						method.getElementName().toLowerCase());
				if (path == null) {
					path = buildPathForMethod(null, method.getElementName());
				}
			}
		}
		return path;
	}

