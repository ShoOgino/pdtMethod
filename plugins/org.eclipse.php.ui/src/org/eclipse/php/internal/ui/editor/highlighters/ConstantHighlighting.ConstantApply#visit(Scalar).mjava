		@Override
		public boolean visit(Scalar scalar) {
			String value = scalar.getStringValue();
			if ((scalar.getScalarType() == Scalar.TYPE_STRING && !isInQuote || scalar
					.getScalarType() == Scalar.TYPE_SYSTEM)
					&& !"null".equals(value)
					&& !"false".equals(value)
					&& !"true".equals(value)
					&& value.charAt(0) != '\''
					&& value.charAt(0) != '"') {
				highlight(scalar);
			} else if (scalar.getParent() instanceof FunctionInvocation) {// for
																			// define
																			// function
				FunctionInvocation fi = (FunctionInvocation) scalar.getParent();
				if (fi.parameters().get(0) == scalar) {
					if (fi.getFunctionName().getName() instanceof Identifier) {
						final Identifier identifier = (Identifier) fi
								.getFunctionName().getName();
						if ("define".equalsIgnoreCase(identifier.getName()) || "constant".equalsIgnoreCase(identifier.getName())) {//$NON-NLS-1$ //$NON-NLS-2$
							highlight(scalar);
						}
					}
				}
			}
			return true;
		}

