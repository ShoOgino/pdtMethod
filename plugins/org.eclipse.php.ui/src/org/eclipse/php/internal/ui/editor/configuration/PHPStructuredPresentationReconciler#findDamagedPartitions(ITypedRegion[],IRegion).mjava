	private List<ITypedRegion> findDamagedPartitions(ITypedRegion[] partitions, IRegion damage) {
		List<ITypedRegion> damagedPartitions = new ArrayList<>();
		int damageEnd = damage.getOffset() + damage.getLength();
		for (int i = 0; i < partitions.length; i++) {
			ITypedRegion p = partitions[i];
			int pEnd = p.getOffset() + p.getLength();
			// damage starts within current partition
			if (damage.getOffset() >= p.getOffset() && damage.getOffset() <= pEnd) {
				damagedPartitions.add(p);
				if (damageEnd < pEnd) {
					// damage covers only this one partition
					break;
				}
			}
			// damages starts in previous partition and ends here
			else if (damage.getOffset() < p.getOffset() && damageEnd <= pEnd) {
				damagedPartitions.add(p);
				break;
			}
			// damage starts in previous partition and ends in next one
			else if (damage.getOffset() < p.getOffset() && damageEnd > pEnd) {
				damagedPartitions.add(p);
			}
		}
		return damagedPartitions;
	}

