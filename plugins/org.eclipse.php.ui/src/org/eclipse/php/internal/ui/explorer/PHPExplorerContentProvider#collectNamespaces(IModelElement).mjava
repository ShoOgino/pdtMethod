	protected List<IType> collectNamespaces(IModelElement create) throws ModelException {

		IDLTKSearchScope scope = SearchEngine.createSearchScope(create, IDLTKSearchScope.SOURCES);

		final Set<String> names = new HashSet<String>();
		ISearchEngine searchEngine = ModelAccess.getSearchEngine(PHPLanguageToolkit.getDefault());
		searchEngine.search(IModelElement.PACKAGE_DECLARATION, null, null, 0, 0, 0, SearchFor.DECLARATIONS,
				MatchRule.PREFIX, scope, new ISearchRequestor() {

					@Override
					public void match(int elementType, int flags, int offset, int length, int nameOffset,
							int nameLength, String elementName, String metadata, String doc, String qualifier,
							String parent, ISourceModule sourceModule, boolean isReference) {
						names.add(elementName);
					}
				}, null);

		List<IType> result = new LinkedList<IType>();
		for (String entry : names) {
			result.add(new NamespaceNode(create, entry));
		}

		return result;
	}

