		public boolean visit(InfixExpression node) {
			/*
			 * Try creating an associative infix expression fragment /* for the
			 * full subtree. If this is not applicable, try something more
			 * generic.
			 */
			IASTFragment fragment = AssociativeInfixExpressionFragment
					.createFragmentForFullSubtree(node);
			if (fragment == null)
				return visit((Expression) node);
			if (oldFragment instanceof AssociativeInfixExpressionFragment
					&& fragment instanceof AssociativeInfixExpressionFragment) {
				AssociativeInfixExpressionFragment f1 = (AssociativeInfixExpressionFragment) oldFragment;
				AssociativeInfixExpressionFragment f2 = (AssociativeInfixExpressionFragment) fragment;
				if (f1.getOperands().size() != f2.getOperands().size()) {
					return visit((Expression) node);
				}
			}

			setFragment(fragment);
			return false;
		}

