	/**
	 * @param offset
	 * @return true, if the offset is in script region (not string, comment, html or heredoc)
	 */
	private boolean inScript(int offset) {
		IStructuredDocument document = (IStructuredDocument) fDocument;
		IStructuredDocumentRegion sdRegion = document.getRegionAtCharacterOffset(offset);
		ITextRegion textRegion = sdRegion.getRegionAtCharacterOffset(offset);

		if (textRegion == null)
			return false;

		ITextRegionCollection container = sdRegion;

		if (textRegion instanceof ITextRegionContainer) {
			container = (ITextRegionContainer) textRegion;
			textRegion = container.getRegionAtCharacterOffset(offset);
		}
		if (!(textRegion instanceof IPhpScriptRegion)) {
			return false;
		}

		final IPhpScriptRegion phpScriptRegion = (IPhpScriptRegion) textRegion;

		int internalOffset = offset - container.getStartOffset() - phpScriptRegion.getStart();

		try {
			String partitionType = phpScriptRegion.getPartition(internalOffset);
			if (partitionType == PHPPartitionTypes.PHP_DEFAULT) {
				return true;
			}

			if (partitionType == PHPPartitionTypes.PHP_DOC || partitionType == PHPPartitionTypes.PHP_MULTI_LINE_COMMENT) {
				ITextRegion phpToken = phpScriptRegion.getPhpToken(internalOffset);
				if (phpToken.getStart() == internalOffset) {
					return true;
				}
			}

			return false;
		} catch (BadLocationException e) {
			Logger.logException(e);
		}
		return false;
	}

