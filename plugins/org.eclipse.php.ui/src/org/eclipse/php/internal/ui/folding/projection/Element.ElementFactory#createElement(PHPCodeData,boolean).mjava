		public static Element createElement(PHPCodeData codeData, boolean isPhpDoc) {
			Element element = null;

			// the container of the code data is used to identify the whole picture
			final PHPCodeData container = codeData.getContainer();

			// file element
			if (codeData instanceof PHPFileData) {
				element = createElement((PHPFileData) codeData, false);

				// class element
			} else if (codeData instanceof PHPClassData) {
				element = createElement((PHPClassData) codeData, false);

			} else if (codeData instanceof PHPFunctionData) {
				// method element
				if (container instanceof PHPClassData) {
					assert container != null;
					element = createElement((PHPClassData) container, (PHPFunctionData) codeData, false);
				} else {

					// function element
					assert container instanceof PHPFileData;
					element = createElement((PHPFunctionData) codeData, false);
				}

				// field element
			} else if (codeData instanceof PHPClassVarData) {
				assert container != null;
				element = createElement((PHPClassData) container, (PHPClassVarData) codeData, false);

				// class constant
			} else if (codeData instanceof PHPClassConstData) {
				assert container != null;
				element = createElement((PHPClassData) container, (PHPClassConstData) codeData, false);

			} else {
				throw new IllegalStateException("Internal Error: CodeData is not supported as folded element"); //$NON-NLS-1$
			}

			return isPhpDoc ? createElement(element) : element;
		}

