	/**
	 * Answers the string representation of this Hashtable.
	 * 
	 * @return the string representation of this Hashtable
	 */
	public String toString() {
		if (size() == 0)
			return "{}"; //$NON-NLS-1$

		StringBuffer buffer = new StringBuffer();
		buffer.append('{');
		for (int i = elementData.length; --i >= 0;) {
			HashMapEntry entry = elementData[i];
			while (entry != null) {
				buffer.append(entry.key);
				buffer.append('=');
				buffer.append(entry.value);
				buffer.append(", "); //$NON-NLS-1$
				entry = entry.next;
			}
		}
		// Remove the last ", "
		if (elementCount > 0)
			buffer.setLength(buffer.length() - 2);
		buffer.append('}');
		return buffer.toString();
	}

