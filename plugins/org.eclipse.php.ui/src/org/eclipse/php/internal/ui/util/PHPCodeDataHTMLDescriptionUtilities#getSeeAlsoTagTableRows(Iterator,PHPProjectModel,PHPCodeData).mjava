	private static String getSeeAlsoTagTableRows(Iterator it, PHPProjectModel projectModel, PHPCodeData phpCodeData) {
		helpBuffer.delete(0, helpBuffer.length());
		helpBuffer.append("<br><dt>See Also</dt>"); //$NON-NLS-1$
		helpBuffer.append("<dd>"); //$NON-NLS-1$

		UserData userData = phpCodeData.getUserData();
		String fileName = userData != null ? userData.getFileName() : null;

		PHPDocTag see = (PHPDocTag) it.next();
		String arg = see.getValue();
		String[] args = arg.split(","); //$NON-NLS-1$

		for (String ref : args) {
			// find a file:
			if (projectModel.getFileData(ref) != null) {
				helpBuffer.append(ref);
				break;
			}
			// find a class:
			if (projectModel.getClass(ref).length > 0) {
				helpBuffer.append(ref);
				break;
			}
			// find a constant:
			if (projectModel.getConstant(ref).length > 0) {
				helpBuffer.append(ref);
				break;
			}
			boolean shouldBreak = false;
			if (phpCodeData instanceof PHPFunctionData && phpCodeData.getContainer() != null && phpCodeData.getContainer() instanceof PHPClassData) {
				if (ref.indexOf('(') != -1) {
					ref = ref.substring(0, ref.indexOf('('));
				}
				if (fileName != null && projectModel.getClassFunctionData(fileName, phpCodeData.getContainer().getName(), ref) != null) {
					helpBuffer.append(ref);
					break;
				}
				if (fileName != null) {
					PHPCodeContext context = ModelSupport.createContext(phpCodeData);
					ref = ref;
					if (ref.startsWith("$")) { //$NON-NLS-1$
						ref = ref.substring(1);
					}
					CodeData[] data = projectModel.getVariables(fileName, context, ref, true);
					for (CodeData codeData : data) {
						if (((PHPCodeData) codeData).getName().equals(ref)) {
							helpBuffer.append(ref);
							shouldBreak = true;
							break;
						}
					}
				}
				if (shouldBreak) {
					break;
				}
				if (projectModel.getFunction(ref) != null && projectModel.getFunction(ref).length > 0) {
					helpBuffer.append(ref);
					break;
				}
			}
			// didn't find it...
			helpBuffer.append(ref);
		}
		helpBuffer.append("</dd>"); //$NON-NLS-1$
		return helpBuffer.toString();
	}

