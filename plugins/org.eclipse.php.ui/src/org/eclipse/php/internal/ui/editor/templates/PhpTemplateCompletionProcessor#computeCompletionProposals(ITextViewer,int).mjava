	public ICompletionProposal[] computeCompletionProposals(ITextViewer viewer,
			int offset) {
		IDocument document = viewer.getDocument();
		try {
			String type = TextUtilities.getContentType(document,
					IStructuredPartitioning.DEFAULT_STRUCTURED_PARTITIONING,
					offset, true);
			if (!PHPPartitionTypes.PHP_DEFAULT.equals(type)) {
				return EMPTY;
			}
		} catch (BadLocationException e) {
		}
		if (isInDocOrCommentOrString(viewer, offset)) {
			return EMPTY;
		}
		ICompletionProposal[] completionProposals = super
				.computeCompletionProposals(viewer, offset);
		if (completionProposals == null) {
			return EMPTY;
		}
		return filterUsingPrefix(completionProposals, extractPrefix(viewer,
				offset));
	}

