	/*
	 * @see
	 * org.eclipse.jdt.internal.ui.text.java.IJavaReconcilingListener#reconciled
	 * (org.eclipse.jdt.core.dom.Program)
	 */
	void reconciled(Program ast, ISourceModule javaElement, IProgressMonitor progressMonitor) {
		if (DEBUG) {
			System.out.println(getThreadName() + " - " + DEBUG_PREFIX + "reconciled: " + toString(javaElement) //$NON-NLS-1$ //$NON-NLS-2$
					+ ", AST: " + toString(ast)); //$NON-NLS-1$
		}

		synchronized (fReconcileLock) {
			if (javaElement == null || !javaElement.equals(fReconcilingJavaElement)) {

				if (DEBUG) {
					System.out.println(getThreadName() + " - " + DEBUG_PREFIX + "  ignoring AST of out-dated editor"); //$NON-NLS-1$ //$NON-NLS-2$
				}
				// Signal - threads might wait for wrong element
				synchronized (fWaitLock) {
					fWaitLock.notifyAll();
				}

				return;
			}
			fIsReconciling = progressMonitor != null && progressMonitor.isCanceled();
			cache(ast, javaElement);
		}
	}

