	/**
	 * Fill the tree with folders and files
	 * @param modelPath
	 * @param includePathModel
	 */
	private static void createIncludePathTree(final IPath modelPath, final IPhpModel includePathModel) {
		final IPath includeModelLocation = PHPModelUtil.getIncludeModelLocation(includePathModel);

		final CodeData[] fileDatas = includePathModel.getFileDatas();
		for (final CodeData fileData : fileDatas) {
			final String fileName = fileData.getName();

			// XXX probablly not needed:
			//			if(includePathModel instanceof PhpModelProxy) {
			//				if(!fileName.startsWith(includeModelLocation.makeAbsolute().toString()))
			//					continue;
			//				else if (!fileName.startsWith(includeModelLocation.toOSString()))
			//					continue;
			//			}

			final IPath fileLocation = new Path(fileName);
			final IPath fileTreeLocation = modelPath.append(fileLocation.removeFirstSegments(includeModelLocation.segmentCount()));

			if (includePathTree.includes(fileTreeLocation))
				continue;

			final IPath existingIncludePathFolderNode = findExistingIncludePathFolderNode(modelPath, fileTreeLocation);

			createMissingIncludePathFolderNodes(fileTreeLocation, existingIncludePathFolderNode);

			createFileNode(fileData, fileTreeLocation);
		}
	}

