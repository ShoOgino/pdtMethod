	private static Change createDeleteChange(IModelElement modelElement) {
		Assert.isTrue(!ReorgUtils.isInsideSourceModule(modelElement));

		switch (modelElement.getElementType()) {
		case IModelElement.PROJECT_FRAGMENT:
			return createProjectFragmentDeleteChange((IProjectFragment) modelElement);

		case IModelElement.SCRIPT_FOLDER:
			return createSourceManipulationDeleteChange((IScriptFolder) modelElement);

		case IModelElement.SOURCE_MODULE:
			return createSourceManipulationDeleteChange((ISourceModule) modelElement);

		case IModelElement.SCRIPT_MODEL: // cannot be done
			Assert.isTrue(false);
			return null;

		case IModelElement.SCRIPT_PROJECT: // handled differently
			Assert.isTrue(false);
			return null;

		case IModelElement.TYPE:
		case IModelElement.FIELD:
		case IModelElement.METHOD:
			// case IModelElement.INITIALIZER:
			// case IModelElement.PACKAGE_DECLARATION:
			// case IModelElement.IMPORT_CONTAINER:
			// case IModelElement.IMPORT_DECLARATION:
			// Assert.isTrue(false);//not done here
		default:
			Assert.isTrue(false);// there's no more kinds
			return new NullChange();
		}
	}

