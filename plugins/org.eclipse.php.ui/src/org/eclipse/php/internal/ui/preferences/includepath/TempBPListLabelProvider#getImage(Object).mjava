	public Image getImage(Object element) {

		if (element instanceof BPListElement) {
			BPListElement cpentry = (BPListElement) element;
			ImageDescriptor imageDescriptor = getCPListElementBaseImage(cpentry);
			if (imageDescriptor != null) {
				if (cpentry.isMissing()) {
					imageDescriptor = new ScriptElementImageDescriptor(
							imageDescriptor,
							ScriptElementImageDescriptor.WARNING,
							ScriptElementImageProvider.SMALL_SIZE);
				}
				return fRegistry.get(imageDescriptor);
			}
		} else if (element instanceof BPListElementAttribute) {
			String key = ((BPListElementAttribute) element).getKey();
			if (key.equals(BPListElement.EXCLUSION)) {
				return fRegistry
						.get(DLTKPluginImages.DESC_OBJS_EXCLUSION_FILTER_ATTRIB);
			} else if (key.equals(BPListElement.INCLUSION)) {
				return fRegistry
						.get(DLTKPluginImages.DESC_OBJS_INCLUSION_FILTER_ATTRIB);
			} else if (key.equals(BPListElement.ACCESSRULES)) {
				return fRegistry
						.get(DLTKPluginImages.DESC_OBJS_ACCESSRULES_ATTRIB);
			}
			// else if (key.equals(CPListElement.NATIVE_LIB_PATH)) {
			// return
			// fRegistry.get(DLTKPluginImages.DESC_OBJS_NATIVE_LIB_PATH_ATTRIB);
			// }
			return null;
		} else if (element instanceof BPUserLibraryElement) {
			return DLTKPluginImages.getDescriptor(
					DLTKPluginImages.IMG_OBJS_LIBRARY).createImage();
		} else if (element instanceof IAccessRule) {
			IAccessRule rule = (IAccessRule) element;
			return AccessRulesLabelProvider.getResolutionImage(rule.getKind());
		}
		return null;
	}

