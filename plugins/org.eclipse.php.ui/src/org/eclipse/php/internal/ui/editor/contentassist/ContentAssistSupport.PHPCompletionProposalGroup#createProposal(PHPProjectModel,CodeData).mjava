		@Override
		protected CodeDataCompletionProposal createProposal(PHPProjectModel projectModel, CodeData codeData) {
			String suffix = " "; //$NON-NLS-1$
			int caretOffsetInSuffix = 1;
			boolean showTypeHints = false;

			if (codeData instanceof PHPKeywordData) {
				PHPKeywordData phpKeywordData = (PHPKeywordData) codeData;
				suffix = phpKeywordData.getSuffix();
				caretOffsetInSuffix = phpKeywordData.getSuffixOffset();
			} else if (codeData instanceof PHPTagData) {
				suffix = ""; //$NON-NLS-1$
				caretOffsetInSuffix = 0;
			} else if (codeData instanceof PHPFunctionData) {
				PHPFunctionData phpFunctionData = (PHPFunctionData) codeData;
				suffix = "()"; //$NON-NLS-1$
				showTypeHints = true;
				caretOffsetInSuffix = 2;
				boolean hasArgs = phpFunctionData.getParameters().length > 0;
				if (hasArgs) {
					caretOffsetInSuffix--; /* put the cursor between the parentheses */
				}
				String returnType = phpFunctionData.getReturnType();
				if (returnType != null && returnType.compareToIgnoreCase("void") == 0) { //$NON-NLS-1$
					suffix += ";"; //$NON-NLS-1$
					if (!hasArgs) {
						caretOffsetInSuffix++;
					}
				}
			} else if (codeData instanceof PHPVariableData || codeData instanceof PHPConstantData || codeData instanceof PHPClassConstData) {
				suffix = ""; //$NON-NLS-1$
				caretOffsetInSuffix = 0;
			}
			return new CodeDataCompletionProposal(projectModel, codeData, getOffset() - key.length(), key.length(), selectionLength, "", suffix, caretOffsetInSuffix, showTypeHints); //$NON-NLS-1$
		}

