		/**
		 * Visits a type and decides how the visitor should proceed.
		 * 
		 * @param currType
		 *            the current type
		 * @return
		 * 		<ul>
		 *         <li>{@link #STOP_BRANCH} to indicate that no Javadoc has been
		 *         found and visiting super types should stop here</li>
		 *         <li>{@link #CONTINUE} to indicate that no Javadoc has been
		 *         found and visiting super types should continue</li>
		 *         <li>an {@link Object} or <code>null</code>, to indicate that
		 *         visiting should be cancelled immediately. The returned value
		 *         is the result of
		 *         {@link #visitInheritDoc(IType, ITypeHierarchy)}</li>
		 *         </ul>
		 * @throws ModelException
		 *             unexpected problem
		 * @see #visitInheritDoc(IType, ITypeHierarchy)
		 */
		public abstract Object visit(IType currType) throws ModelException;

