	private void dealPrefix() {
		String prefix = ""; //$NON-NLS-1$
		try {
			if (method.isConstructor()) {
				IType type = method.getDeclaringType();
				boolean isInNamespace = PHPModelUtils.getCurrentNamespaceIfAny(
						fSourceModule, getReplacementOffset()) != null;
				boolean globalType = PHPModelUtils.getCurrentNamespace(type) == null;
				try {
					int flags = type.getFlags();
					if (!PHPFlags.isNamespace(flags)
							&& globalType
							&& isInNamespace
							&& !(type instanceof AliasType)
							&& !ProjectOptions.getPhpVersion(
									sProject.getProject()).isLessThan(
									PHPVersion.PHP5_3)
							&& document.getChar(getReplacementOffset() - 1) != NamespaceReference.NAMESPACE_SEPARATOR) {
						prefix += NamespaceReference.NAMESPACE_SEPARATOR;
					}
				} catch (ModelException e) {
					PHPUiPlugin.log(e);
				} catch (BadLocationException e) {
					PHPUiPlugin.log(e);
				}
			}
		} catch (ModelException e) {
		}
		if (ProposalExtraInfo.isMethodOnly(extraInfo)) {
			setReplacementString(prefix + method.getElementName());
			return;
		}

		IEclipsePreferences prefs = InstanceScope.INSTANCE
				.getNode(PHPCorePlugin.ID);
		boolean fileArgumentNames = prefs.getBoolean(
				PHPCoreConstants.CODEASSIST_FILL_ARGUMENT_NAMES, true);
		if (fileArgumentNames && !fReplacementStringComputed)
			setReplacementString(computeReplacementString(prefix));
		if (!fileArgumentNames)
			setReplacementString(prefix + super.getReplacementString());
	}

