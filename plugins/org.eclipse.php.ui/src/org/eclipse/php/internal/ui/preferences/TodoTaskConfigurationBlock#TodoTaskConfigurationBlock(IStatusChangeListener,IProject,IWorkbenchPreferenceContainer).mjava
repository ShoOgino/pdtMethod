	public TodoTaskConfigurationBlock(IStatusChangeListener context,
			IProject project, IWorkbenchPreferenceContainer container) {
		super(context, project, getKeys(), container);

		TaskTagAdapter adapter = new TaskTagAdapter();
		String[] buttons = new String[] {
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_add_button"),
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_edit_button"),
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_remove_button"),
				null,
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_setdefault_button"), };
		fTodoTasksList = new ListDialogField(adapter, buttons,
				new TodoTaskLabelProvider());
		fTodoTasksList.setDialogFieldListener(adapter);
		fTodoTasksList.setRemoveButtonIndex(IDX_REMOVE);

		String[] columnsHeaders = new String[] {
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_name_column"),
				PHPUIMessages
						.getString("TodoTaskConfigurationBlock_markers_tasks_priority_column"), };

		fTodoTasksList.setTableColumns(new ListDialogField.ColumnsDescription(
				columnsHeaders, true));
		fTodoTasksList.setViewerSorter(new TodoTaskSorter());

		fCaseSensitiveCheckBox = new SelectionButtonDialogField(SWT.CHECK);
		fCaseSensitiveCheckBox.setLabelText(PHPUIMessages
				.getString("TodoTaskConfigurationBlock_casesensitive_label"));
		fCaseSensitiveCheckBox.setDialogFieldListener(adapter);

		unpackTodoTasks();
		if (fTodoTasksList.getSize() > 0) {
			fTodoTasksList.selectFirstElement();
		} else {
			fTodoTasksList.enableButton(IDX_EDIT, false);
			fTodoTasksList.enableButton(IDX_DEFAULT, false);
		}

		fTaskTagsStatus = new StatusInfo();
	}

