	/*
	 * (non-Javadoc)
	 * 
	 * @seeorg.eclipse.compare.contentmergeviewer.ContentMergeViewer#
	 * handlePropertyChangeEvent(org.eclipse.jface.util.PropertyChangeEvent)
	 */
	protected void handlePropertyChangeEvent(PropertyChangeEvent event) {

		String key = event.getProperty();

		if (key.equals(CompareConfiguration.IGNORE_WHITESPACE)
				|| key.equals(ComparePreferencePage.SHOW_PSEUDO_CONFLICTS)) {

			fShowPseudoConflicts = fPreferenceStore
					.getBoolean(ComparePreferencePage.SHOW_PSEUDO_CONFLICTS);

			update(true);
			selectFirstDiff(true);

			// } else if (key.equals(ComparePreferencePage.USE_SPLINES)) {
			// fUseSplines=
			// fPreferenceStore.getBoolean(ComparePreferencePage.USE_SPLINES);
			// invalidateLines();

		} else if (key.equals(ComparePreferencePage.USE_SINGLE_LINE)) {
			fUseSingleLine = fPreferenceStore
					.getBoolean(ComparePreferencePage.USE_SINGLE_LINE);
			// fUseResolveUI= fUseSingleLine;
			fBasicCenterCurve = null;
			updateResolveStatus();
			invalidateLines();

		} else if (key.equals(ComparePreferencePage.HIGHLIGHT_TOKEN_CHANGES)) {
			fHighlightTokenChanges = fPreferenceStore
					.getBoolean(ComparePreferencePage.HIGHLIGHT_TOKEN_CHANGES);
			updateResolveStatus();
			updatePresentation(null);

			// } else if (key.equals(ComparePreferencePage.USE_RESOLVE_UI)) {
			// fUseResolveUI=
			// fPreferenceStore.getBoolean(ComparePreferencePage.USE_RESOLVE_UI);
			// updateResolveStatus();
			// invalidateLines();

		} else if (key.equals(fSymbolicFontName)) {
			updateFont();
			invalidateLines();

		} else if (key.equals(INCOMING_COLOR) || key.equals(OUTGOING_COLOR)
				|| key.equals(CONFLICTING_COLOR) || key.equals(RESOLVED_COLOR)) {
			updateColors(null);
			invalidateLines();
			invalidateTextPresentation();

		} else if (key.equals(ComparePreferencePage.SYNCHRONIZE_SCROLLING)) {
			boolean b = fPreferenceStore
					.getBoolean(ComparePreferencePage.SYNCHRONIZE_SCROLLING);
			setSyncScrolling(b);

		} else if (key.equals(ComparePreferencePage.SHOW_MORE_INFO)) {

			boolean b = fPreferenceStore
					.getBoolean(ComparePreferencePage.SHOW_MORE_INFO);
			if (b != fShowMoreInfo) {
				fShowMoreInfo = b;
				if (fShowMoreInfo)
					updateStatus(fCurrentDiff);
				else
					clearStatus();
			}

		} else {
			super.handlePropertyChangeEvent(event);

			if (key.equals(ICompareUIConstants.PROP_IGNORE_ANCESTOR)) {
				update(false);
				selectFirstDiff(true);
			}
		}
	}

