	public IHyperlink[] detectHyperlinks(ITextViewer textViewer, IRegion region, boolean canShowMultipleHyperlinks) {

		PHPStructuredEditor editor = EditorUtility.getPHPEditor(textViewer);
		if (editor == null) {
			return null;
		}

		IModelElement input = org.eclipse.dltk.internal.ui.editor.EditorUtility.getEditorInputModelElement(editor,
				false);
		if (!(input instanceof ISourceModule)) {
			return null;
		}

		final int offset = region.getOffset();

		final ISourceModule sourceModule = (ISourceModule) input;
		ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(sourceModule, null);
		if (moduleDeclaration == null) {
			return null;
		}

		IncludeHyperlinkVisitor includeVisitor = new IncludeHyperlinkVisitor(offset, sourceModule);
		try {
			moduleDeclaration.traverse(includeVisitor);
		} catch (Exception e) {
			PHPUiPlugin.log(e);
		}

		if (includeVisitor.getFile() != null) {
			if (!inclusive(region, includeVisitor.getSelectRegion())) {
				return null;
			}

			Set<String> set = new HashSet<String>();
			IResource resource = sourceModule.getResource();
			if (resource != null && resource.getLocation() != null) {
				set.add(resource.getLocation().toOSString());
			}
			ISourceModule includedSourceModule = FileNetworkUtility.findSourceModule(sourceModule,
					includeVisitor.getFile(), set);
			if (includedSourceModule != null) {
				return new IHyperlink[] { new ModelElementHyperlink(includeVisitor.getSelectRegion(),
						includedSourceModule, new OpenAction(editor)) };
			}
		}
		return null;
	}

