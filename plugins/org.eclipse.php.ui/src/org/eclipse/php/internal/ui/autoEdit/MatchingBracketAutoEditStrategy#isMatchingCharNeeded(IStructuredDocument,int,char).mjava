	protected int isMatchingCharNeeded(IStructuredDocument document, int offset, char bracketChar) {
		try {
			String postCharState = FormatterUtils.getPartitionType(document, offset + 1);
			if (!(postCharState == PHPPartitionTypes.PHP_DEFAULT || postCharState == PHPRegionTypes.PHP_OPENTAG || postCharState == PHPRegionTypes.PHP_CLOSETAG)) {
				if (isSpecialOpenCurlyInQuotes(document, offset)) {
					postCharState = FormatterUtils.getPartitionType(document, offset + 2);
				}
			}
			if (document.getLength() == offset + 1) { //if we are in the end of the document
				postCharState = FormatterUtils.getPartitionType(document, offset);
				if (postCharState == PHPPartitionTypes.PHP_DEFAULT || postCharState == PHPRegionTypes.PHP_OPENTAG || postCharState == PHPRegionTypes.PHP_CLOSETAG) {
					return MATCHING_BRACKET_NEEDED;
				}
				return MATCHING_BRACKET_NOT_NEEDED;
			}

			if (postCharState != PHPPartitionTypes.PHP_DEFAULT && postCharState != PHPRegionTypes.PHP_OPENTAG && postCharState != PHPRegionTypes.PHP_CLOSETAG) {
				return SEARCH_NOT_VALID;
			}

			int currOffset = offset + 1;
			IStructuredDocumentRegion sdRegion = document.getRegionAtCharacterOffset(currOffset);
			while (currOffset >= 0 && sdRegion != null) {
				if (sdRegion.getType() != PHPRegionTypes.PHP_CONTENT) {
					currOffset = sdRegion.getStartOffset() - 1;
					sdRegion = document.getRegionAtCharacterOffset(currOffset);
					continue;
				}
				int regionStart = sdRegion.getStart();

				ITextRegion tRegion = sdRegion.getRegionAtCharacterOffset(currOffset);
				while (tRegion != null) {
					String regionType = tRegion.getType();
					if (regionType == PHPRegionTypes.PHP_TOKEN) {
						char token = sdRegion.getText(tRegion).charAt(0);
						if (token == ROUND_OPEN || token == SQUARE_OPEN) {
							if (token == bracketChar) {
								if (matcher.match(document, regionStart + tRegion.getStart() + 1) == null) {
									return MATCHING_BRACKET_NEEDED;
								}
							}
						}

					} else if (regionType == PHPRegionTypes.PHP_CURLY_OPEN || regionType == PHPRegionTypes.PHP_CURLY_CLOSE) {
						return MATCHING_BRACKET_NOT_NEEDED;
					}

					currOffset = regionStart + tRegion.getStart() - 1;
					tRegion = sdRegion.getRegionAtCharacterOffset(currOffset);
				}

				currOffset = sdRegion.getStartOffset() - 1;
				sdRegion = (currOffset < 0) ? null : document.getRegionAtCharacterOffset(currOffset);

			}
		} catch (BadLocationException e) {
			Logger.logException(e);
		}
		return MATCHING_BRACKET_NOT_NEEDED;
	}

