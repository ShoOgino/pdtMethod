	/**
	 * Initialize default preferences in the given preference store.
	 * 
	 * @param store
	 *            The preference store
	 */
	public SemanticHighlightingManager initDefaults(IPreferenceStore store) {
		Collection<AbstractSemanticHighlighting> semanticHighlightings = highlightings.values();
		for (AbstractSemanticHighlighting rule : semanticHighlightings) {
			SemanticHighlightingStyle style = rule.getStyle();
			setDefaultAndFireEvent(store, rule.getColorPreferenceKey(), style.getDefaultTextColor());
			// setDefaultAndFireEvent(store,
			// rule.getBackgroundColorPreferenceKey(), style
			// .);
			store.setDefault(rule.getBoldPreferenceKey(), style.isBoldByDefault());
			store.setDefault(rule.getItalicPreferenceKey(), style.isItalicByDefault());
			store.setDefault(rule.getStrikethroughPreferenceKey(), style.isStrikethroughByDefault());
			store.setDefault(rule.getUnderlinePreferenceKey(), style.isUnderlineByDefault());
			store.setDefault(rule.getEnabledPreferenceKey(), style.isEnabledByDefault());
		}
		return this;
	}

