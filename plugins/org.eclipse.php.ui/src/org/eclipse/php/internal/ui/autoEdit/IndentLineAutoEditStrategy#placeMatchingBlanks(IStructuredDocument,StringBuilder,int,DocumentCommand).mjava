	public void placeMatchingBlanks(final IStructuredDocument document, final StringBuilder result,
			final int lineNumber, final DocumentCommand command) throws BadLocationException {
		final int forOffset = command.offset;
		final IRegion endLineInfo = document.getLineInformationOfOffset(forOffset + command.length);
		// read the rest of the line
		final String lineText = document.get(forOffset + command.length,
				endLineInfo.getOffset() + endLineInfo.getLength() - (forOffset + command.length));
		final String trimedText = lineText.trim();

		final char insertionStrategyKey = trimedText.length() == 0 ? '{' : trimedText.charAt(0);
		final IIndentationStrategy indentationStrategy = getAutoEditStrategy(insertionStrategyKey);

		if (indentationStrategy instanceof IIndentationStrategyExtension1) {
			((IIndentationStrategyExtension1) indentationStrategy).placeMatchingBlanks(document, result, lineNumber,
					forOffset, getCurrentProgram(document));
		} else {
			indentationStrategy.placeMatchingBlanks(document, result, lineNumber, forOffset);
		}
	}

