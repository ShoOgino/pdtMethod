	/**
	 * Handles partition boundaries within the selection. The end of the current
	 * partition and the start of the next partition are examined for whether
	 * they contain comment tokens that interfere with the created comment.
	 * <p>
	 * Comment tokens are removed from interior multi-line comments. PHPdoc
	 * comments are left as is; instead, multi-line comment tokens are inserted
	 * before and after PHPdoc partitions to ensure that the entire selected
	 * area is commented.
	 * </p>
	 * <p>
	 * The next partition is returned.
	 * </p>
	 * 
	 * @param partition the current partition
	 * @param edits the list of edits to add to
	 * @param factory the edit factory
	 * @param docExtension the document to get the partitions from
	 * @return the next partition after the current
	 * @throws BadLocationException if accessing the document fails - this can
	 *         only happen if the document gets modified concurrently
	 * @throws BadPartitioningException if the document does not have a Java
	 *         partitioning
	 */
	private ITypedRegion handleInteriorPartition(ITypedRegion partition, List edits, Edit.EditFactory factory, IDocumentExtension3 docExtension) throws BadPartitioningException, BadLocationException {

	    // end of previous partition
	    String partType = partition.getType();
	    int partEndOffset = partition.getOffset() + partition.getLength();
	    int tokenLength = getCommentStart().length();

	    boolean wasJavadoc = false; // true if the previous partition is javadoc

	    if (partType == PHPPartitionTypes.PHP_DOC) {

	      wasJavadoc = true;

	    } else if (partType == PHPPartitionTypes.PHP_MULTI_LINE_COMMENT) {

	      // already in a comment - remove ending mark
	      edits.add(factory.createEdit(partEndOffset - tokenLength, tokenLength, "")); //$NON-NLS-1$

	    }

	    // advance to next partition
	    partition = docExtension.getPartition(fDocumentPartitioning, partEndOffset, false);
	    partType = partition.getType();

	    // start of next partition
	    if (wasJavadoc) {

	      // if previous was javadoc, and the current one is not, then add block comment start
	      if (partType == IDocument.DEFAULT_CONTENT_TYPE || partType == PHPPartitionTypes.PHP_DEFAULT || isSpecialPartition(partType)) {
	        edits.add(factory.createEdit(partition.getOffset(), 0, getCommentStart()));
	      }

	    } else { // !wasJavadoc

	      if (partType == PHPPartitionTypes.PHP_DOC) {
	        // if next is javadoc, end block comment before
	        edits.add(factory.createEdit(partition.getOffset(), 0, getCommentEnd()));
	      } else if (partType == PHPPartitionTypes.PHP_MULTI_LINE_COMMENT) {
	        // already in a comment - remove startToken
	        edits.add(factory.createEdit(partition.getOffset(), getCommentStart().length(), "")); //$NON-NLS-1$
	      }
	    }

	    return partition;
	}

