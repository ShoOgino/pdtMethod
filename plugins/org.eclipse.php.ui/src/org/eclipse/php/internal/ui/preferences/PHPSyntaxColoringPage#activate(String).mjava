	// activate controls based on the given local color type
	private void activate(String namedStyle) {
		Color foreground = fDefaultForeground;
		Color background = fDefaultBackground;
		if (namedStyle == null) {
			fEnabler.setEnabled(false);
			fClearStyle.setEnabled(false);
			fBold.setEnabled(false);
			fItalic.setEnabled(false);
			fStrike.setEnabled(false);
			fUnderline.setEnabled(false);
			fForegroundLabel.setEnabled(false);
			fBackgroundLabel.setEnabled(false);
			fForegroundColorEditor.setEnabled(false);
			fBackgroundColorEditor.setEnabled(false);
			fBold.setSelection(false);
			fItalic.setSelection(false);
			fStrike.setSelection(false);
			fUnderline.setSelection(false);
		} else {
			TextAttribute attribute = getAttributeFor(namedStyle);
			AbstractSemanticHighlighting semanticType = SemanticHighlightingManager
					.getInstance().getSemanticHighlightings().get(namedStyle);
			boolean enabled = true;
			if (semanticType != null) {
				enabled = getOverlayStore().getBoolean(
						semanticType.getEnabledPreferenceKey());
			}
			fEnabler.setSelection(enabled);
			fEnabler.setEnabled(true);
			fClearStyle.setEnabled(enabled);
			fBold.setEnabled(enabled);
			fItalic.setEnabled(enabled);
			fStrike.setEnabled(enabled);
			fUnderline.setEnabled(enabled);
			fForegroundLabel.setEnabled(enabled);
			fBackgroundLabel.setEnabled(enabled);
			fForegroundColorEditor.setEnabled(enabled);
			fBackgroundColorEditor.setEnabled(enabled);
			fBold.setSelection((attribute.getStyle() & SWT.BOLD) != 0);
			fItalic.setSelection((attribute.getStyle() & SWT.ITALIC) != 0);
			fStrike
					.setSelection((attribute.getStyle() & TextAttribute.STRIKETHROUGH) != 0);
			fUnderline
					.setSelection((attribute.getStyle() & TextAttribute.UNDERLINE) != 0);
			if (attribute.getForeground() != null) {
				foreground = attribute.getForeground();
			}
			if (attribute.getBackground() != null) {
				background = attribute.getBackground();
			}
		}

		fForegroundColorEditor.setColorValue(foreground.getRGB());
		fBackgroundColorEditor.setColorValue(background.getRGB());

	}

