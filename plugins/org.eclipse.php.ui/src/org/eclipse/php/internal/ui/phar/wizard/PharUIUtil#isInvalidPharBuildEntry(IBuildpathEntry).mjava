	public static boolean isInvalidPharBuildEntry(IBuildpathEntry entry) {
		if (entry.getEntryKind() == IBuildpathEntry.BPE_LIBRARY
				&& PHPToolkitUtil.isPharFileName(entry.getPath().toString())) {
			try {
				File pharFile = null;
				IPath path = entry.getPath();
				String extension = path.getFileExtension();
				if (EnvironmentPathUtils.isFull(path)) {
					path = EnvironmentPathUtils.getLocalPath(path);
					pharFile = path.toFile();
				} else {
					IWorkspaceRoot root = ResourcesPlugin.getWorkspace()
							.getRoot();
					IResource file = root.findMember(path);
					pharFile = Util
							.toLocalFile(file.getLocationURI(), null/*
																	 * no
																	 * progress
																	 * availaible
																	 */);
				}

				if (pharFile == null || !pharFile.exists())
					return true;
				IArchive archive = null;
				if (PHPToolkitUtil.PHAR_EXTENSTION.equals(extension)) {
					archive = new PharArchiveFile(pharFile);
				} else if (PHPToolkitUtil.ZIP_EXTENSTION.equals(extension)) {
					archive = new ZipArchiveFile(pharFile);
				} else if (PHPToolkitUtil.TAR_EXTENSTION.equals(extension)
						|| PHPToolkitUtil.GZ_EXTENSTION.equals(extension)
						|| PHPToolkitUtil.BZ2_EXTENSTION.equals(extension)) {

					archive = new TarArchiveFile(pharFile);
				}
			} catch (Exception e) {
				return true;
			}
		}
		return false;
	}

