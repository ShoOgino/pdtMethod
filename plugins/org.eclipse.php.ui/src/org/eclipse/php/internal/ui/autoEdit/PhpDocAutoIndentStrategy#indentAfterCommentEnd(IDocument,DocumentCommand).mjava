	/**
	 * Unindents a typed slash ('/') if it forms the end of a comment.
	 * 
	 * @param d
	 *            the document
	 * @param c
	 *            the command
	 */
	private void indentAfterCommentEnd(IDocument d, DocumentCommand c) {
		if (c.offset < 2 || d.getLength() == 0) {
			return;
		}

		// Check the case that '/' is printed inside of a comment block
		try {
			if ("* ".equals(d.get(c.offset - 2, 2))) { //$NON-NLS-1$

				int offset = c.offset;

				int fixedOffset = offset;
				if (offset == d.getLength()) {
					fixedOffset -= 1;
				}
				IStructuredDocumentRegion sdRegion = ((IStructuredDocument) d).getRegionAtCharacterOffset(fixedOffset);

				ITextRegion tRegion = sdRegion.getRegionAtCharacterOffset(fixedOffset);

				int regionOffset = offset;
				if (tRegion instanceof ITextRegionContainer) {
					tRegion = ((ITextRegionContainer) tRegion).getRegionAtCharacterOffset(fixedOffset);
					regionOffset -= (sdRegion.getStartOffset(tRegion) + tRegion.getStart());
				}

				if (tRegion instanceof IPhpScriptRegion) {
					IPhpScriptRegion scriptRegion = (IPhpScriptRegion) tRegion;
					regionOffset -= scriptRegion.getStart();

					ITextRegion commentRegion = scriptRegion.getPhpToken(regionOffset);
					int phpScriptEndOffset = scriptRegion.getLength();
					boolean isSpaceDeletionNeeded = false;
					do {
						int currentRegionEndOffset = commentRegion.getEnd();
						commentRegion = scriptRegion.getPhpToken(currentRegionEndOffset);
						String tokenType = commentRegion.getType();
						if (PHPPartitionTypes.isPHPMultiLineCommentEndRegion(tokenType)
								|| PHPPartitionTypes.isPHPDocEndRegion(tokenType)) {
							break;
						} else if (currentRegionEndOffset >= phpScriptEndOffset) {
							isSpaceDeletionNeeded = true;
							break;
						}
					} while (true);

					if (isSpaceDeletionNeeded) {
						// perform the actual work
						c.length++;
						c.offset--;
						return;
					}
				}
			}
		} catch (BadLocationException excp) {
			Logger.logException(excp);
		}
	}

