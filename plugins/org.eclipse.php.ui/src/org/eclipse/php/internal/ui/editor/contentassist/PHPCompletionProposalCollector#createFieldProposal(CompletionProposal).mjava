	@Override
	protected IScriptCompletionProposal createFieldProposal(final CompletionProposal proposal) {
		String completion = String.valueOf(proposal.getCompletion());
		int start = proposal.getReplaceStart();
		int length = getLength(proposal);
		StyledString displayString = ((PHPCompletionProposalLabelProvider) getLabelProvider())
				.createStyledFieldProposalLabel(proposal);
		Image image = getImage(
				((PHPCompletionProposalLabelProvider) getLabelProvider()).createFieldImageDescriptor(proposal));

		ScriptCompletionProposal scriptProposal = new PHPCompletionProposal(completion, start, length, image,
				displayString, 0) {
			private boolean fReplacementStringComputed = false;

			@Override
			public String getReplacementString() {
				if (!fReplacementStringComputed) {
					String replacementString = computeReplacementString();
					if (ProposalExtraInfo.isAddQuote(proposal.getExtraInfo())) {
						replacementString = "'" + replacementString + "'"; //$NON-NLS-1$ //$NON-NLS-2$
					}
					setReplacementString(replacementString);
					fReplacementStringComputed = true;
				}
				return super.getReplacementString();
			}

			private String computeReplacementString() {
				IField field = (IField) proposal.getModelElement();

				if (ProposalExtraInfo.isMemberInNamespace(proposal.getExtraInfo())) {
					StringBuilder result = new StringBuilder(PHPModelUtils.getFullName(field));
					if (ProposalExtraInfo.isAbsoluteName(getExtraInfo())) {
						result.insert(0, NamespaceReference.NAMESPACE_SEPARATOR);
					}
					try {
						if (PHPFlags.isNamespace(field.getFlags())) {
							result.append(NamespaceReference.NAMESPACE_SEPARATOR);
						}
					} catch (ModelException e) {
						PHPUiPlugin.log(e);
					}
					return result.toString();
				}

				if (field instanceof AliasField) {
					AliasField aliasField = (AliasField) field;
					return aliasField.getAlias();
				}
				if (ProposalExtraInfo.isNoInsert(proposal.getExtraInfo())) {
					return field.getElementName();
				}
				if (ProposalExtraInfo.isFullName(proposal.getExtraInfo())) {
					return PHPModelUtils.getFullName(field);
				}
				return super.getReplacementString();
			}

			@Override
			public Object getExtraInfo() {
				return proposal.getExtraInfo();
			}
		};
		if (getSourceModule().getScriptProject() != null) {
			scriptProposal.setProposalInfo(new FieldProposalInfo(getSourceModule().getScriptProject(), proposal));
		}
		scriptProposal.setRelevance(computeRelevance(proposal));
		scriptProposal.setTriggerCharacters(getVarTrigger());
		return scriptProposal;
	}

