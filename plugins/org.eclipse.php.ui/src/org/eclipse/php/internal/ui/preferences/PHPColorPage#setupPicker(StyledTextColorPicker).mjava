	protected void setupPicker(StyledTextColorPicker picker) {
		IModelManager mmanager = StructuredModelManager.getModelManager();
		picker.setParser(mmanager.createStructuredDocumentFor(ContentTypeIdForPHP.ContentTypeID_PHP).getParser());

		Dictionary descriptions = new Hashtable();
		initDescriptions(descriptions);

		ArrayList styleList = new ArrayList();
		initStyleList(styleList);

		LineStyleProviderForPhp styleProvider = null;
		IEditorPart editor = PHPUiPlugin.getActivePage().getActiveEditor();
		final PHPStructuredEditor phpEditor = EditorUtility.getPHPStructuredEditor(editor);
		if (phpEditor != null) {
			SourceViewerConfiguration viewerConfig = phpEditor.getSourceViwerConfiguration();
			if (viewerConfig != null && viewerConfig instanceof PHPStructuredTextViewerConfiguration) {
				PHPStructuredTextViewerConfiguration phpViewerConfig = (PHPStructuredTextViewerConfiguration) viewerConfig;
				styleProvider = (LineStyleProviderForPhp) phpViewerConfig.getLineStyleProvider();
			}
		}
		if (styleProvider == null) {
			styleProvider = new LineStyleProviderForPhp();
		}
		Dictionary contextStyleMap = new Hashtable(styleProvider.getColorTypesMap());

		picker.setDescriptions(descriptions);
		picker.setStyleList(styleList);
		picker.setContextStyleMap(contextStyleMap);
	}

