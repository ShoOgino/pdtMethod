	/**
	 * Returns the current model element from the PHP editor
	 * 
	 * @param event
	 * @return
	 * @throws ModelException
	 */
	protected IModelElement getCurrentModelElement(ExecutionEvent event) throws ExecutionException {
		IEditorPart editorPart = HandlerUtil.getActiveEditor(event);
		PHPStructuredEditor textEditor = null;
		IModelElement modelElement = null;
		if (editorPart instanceof PHPStructuredEditor) {
			textEditor = (PHPStructuredEditor) editorPart;
			modelElement = textEditor.getModelElement();
		} else {
			Object o = editorPart.getAdapter(ITextEditor.class);
			if (o != null) {
				textEditor = (PHPStructuredEditor) o;
				modelElement = textEditor.getModelElement();
			}
		}

		if (textEditor != null && modelElement instanceof ISourceModule) {
			final ISelectionProvider selectionProvider = textEditor.getSelectionProvider();
			final ISelection selection = selectionProvider.getSelection();
			if (selection instanceof TextSelection) {
				final TextSelection textSelection = (TextSelection) selection;
				try {
					return ((ISourceModule) modelElement).getElementAt(textSelection.getOffset());
				} catch (ModelException e) {
					throw new ExecutionException(Messages.SelectionHandler_0, e);
				}
			}
		}
		return null;
	}

