	/*
	 * Don't use this method directly, use CodeGeneration.
	 */
	public static String getMultipleFieldsComment(IScriptProject sp,
			String[] fieldTypes, String[] fieldNames, String lineDelim)
			throws CoreException {
		Template template = getCodeTemplate(
				CodeTemplateContextType.MULTIFIELDCOMMENT_ID, sp);
		if (template == null) {
			return null;
		}
		CodeTemplateContext context = new CodeTemplateContext(
				template.getContextTypeId(), sp, lineDelim);
		// context.setCompilationUnitVariables(sp);

		TemplateBuffer buffer;
		try {
			buffer = context.evaluate(template);
		} catch (BadLocationException e) {
			throw new CoreException(Status.CANCEL_STATUS);
		} catch (TemplateException e) {
			throw new CoreException(Status.CANCEL_STATUS);
		}
		if (buffer == null) {
			return null;
		}

		String str = buffer.getString();
		if (Strings.containsOnlyWhitespaces(str)) {
			return null;
		}

		TemplateVariable position = findVariable(buffer,
				CodeTemplateContextType.TAGS); // look if PHPDoc tags have to
		// be added
		if (position == null) {
			return str;
		}

		IDocument document = new Document(str);
		int[] tagOffsets = position.getOffsets();
		for (int i = tagOffsets.length - 1; i >= 0; i--) { // from last to first
			try {
				insertVarTags(document, tagOffsets[i], position.getLength(),
						fieldNames, fieldTypes, lineDelim);
			} catch (BadLocationException e) {
				throw new CoreException(DLTKUIStatus.createError(IStatus.ERROR,
						e));
			}
		}
		return document.get();
	}

