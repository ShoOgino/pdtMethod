		/**
		 * Opens and reveals the defining method.
		 */
		public void open() {
			try {
				Program ast = SharedASTProvider.getAST((ISourceModule) fModelElement, SharedASTProvider.WAIT_ACTIVE_ONLY, null);
				if (ast != null) {
					IModelElement modelElement = DLTKCore.create(fAstNodeKey);
					if (modelElement instanceof IMethod) {
						IMethod method = (IMethod) modelElement;
						int offset = method.getSourceRange().getOffset();
						int length = method.getSourceRange().getLength();
						IEditorPart editor = EditorUtility.openInEditor(method, true);
						EditorUtility.revealInEditor(editor, offset, length);
						return;
					}
				}
			} catch (Exception e) {
				ExceptionHandler.handle(new CoreException(new Status(IStatus.ERROR, PHPUiPlugin.ID, 0, "Exception occurred", e)), PHPUIMessages.getString("OverrideIndicatorManager_open_error_title"), PHPUIMessages.getString("OverrideIndicatorManager_open_error_messageHasLogEntry"));
				return;
			}
			String title = PHPUIMessages.getString("OverrideIndicatorManager_open_error_title");
			String message = PHPUIMessages.getString("OverrideIndicatorManager_open_error_message");
			MessageDialog.openError(PHPUiPlugin.getActiveWorkbenchShell(), title, message);
		}

