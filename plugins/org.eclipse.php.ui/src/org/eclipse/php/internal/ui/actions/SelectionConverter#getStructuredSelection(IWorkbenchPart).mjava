	/**
	 * Converts the selection provided by the given part into a structured
	 * selection. The following conversion rules are used:
	 * <ul>
	 * <li><code>part instanceof PHPStructuredEditor</code>: returns a
	 * structured selection using code resolve to convert the editor's text
	 * selection.</li>
	 * <li><code>part instanceof IWorkbenchPart</code>: returns the part's
	 * selection if it is a structured selection.</li>
	 * <li><code>default</code>: returns an empty structured selection.</li>
	 * </ul>
	 * 
	 * @param part
	 *            the part
	 * @return the selection
	 * @throws ModelException
	 */
	public static IStructuredSelection getStructuredSelection(
			IWorkbenchPart part) throws ModelException {
		if (part instanceof PHPStructuredEditor)
			return new StructuredSelection(
					codeResolve((PHPStructuredEditor) part));
		ISelectionProvider provider = part.getSite().getSelectionProvider();
		if (provider != null) {
			ISelection selection = provider.getSelection();
			if (selection instanceof IStructuredSelection)
				return (IStructuredSelection) selection;
		}
		return StructuredSelection.EMPTY;
	}

