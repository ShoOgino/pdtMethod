	/**
	 * This function launches browser and shows PHP manual page on the specified
	 * PHP element.
	 * 
	 * @param codeData PHP element code data
	 */
	public void showFunctionHelp(PHPCodeData codeData) {
		if (codeData == null) {
			throw new IllegalArgumentException();
		}
		
		String path = null;
		
		if (codeData instanceof PHPFunctionData) {
			PHPFunctionData funcData = (PHPFunctionData)codeData;
			PHPCodeData container = funcData.getContainer();
			if (container instanceof PHPClassData) {
				String functionName = container.getName() + "::" + funcData.getName(); //$NON-NLS-1$
				path = (String)getPHPEntityPathMap().get(functionName.toLowerCase());
				if (path == null) {
					path = buildPathForMethod(container.getName(),funcData.getName());
				}
			} else {
				path = (String)getPHPEntityPathMap().get(funcData.getName().toLowerCase());
				if (path == null) {
					path = buildPathForMethod(null,funcData.getName());
				}
			}
		} else if (codeData instanceof PHPKeywordData) {
			path = (String)getPHPEntityPathMap().get(codeData.getName().toLowerCase());
		}
		
		StringBuffer url = new StringBuffer();
		url.append(site.getUrl());
		if (!site.getUrl().endsWith("/")) { //$NON-NLS-1$
			url.append("/"); //$NON-NLS-1$
		}
		url.append(path);
		url.append("."); //$NON-NLS-1$
		url.append(site.getExtension());
		
		IWorkbenchBrowserSupport browserSupport = PlatformUI.getWorkbench().getBrowserSupport();
		IWebBrowser browser;
		try {
			if (openManualInNewBrowser) {
				browser = browserSupport.createBrowser(BROWSER_ID + ++browserCount);
			} else {
				browser = browserSupport.createBrowser(BROWSER_ID);
			}
			browser.openURL(new URL(url.toString()));
		} catch (PartInitException e) {
			Logger.logException(e);
		} catch (MalformedURLException e) {
			Logger.logException(e);
		}
	}

