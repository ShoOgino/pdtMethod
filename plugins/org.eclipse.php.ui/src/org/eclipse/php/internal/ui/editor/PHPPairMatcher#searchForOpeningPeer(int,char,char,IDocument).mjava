	private int searchForOpeningPeer(int offset, char openingPeer, char closingPeer, IDocument document) throws BadLocationException {
		boolean useGenericsHeuristic = openingPeer == '<';
		if (useGenericsHeuristic && !fHighlightAngularBrackets)
			return -1;

		PHPHeuristicScanner scanner = PHPHeuristicScanner.createHeuristicScanner(document, offset);
		int peer = scanner.findOpeningPeer(offset - 1, openingPeer, closingPeer);
		if (peer == PHPHeuristicScanner.NOT_FOUND)
			return -1;
		if (useGenericsHeuristic && !isTypeParameterBracket(peer, document, scanner))
			return -1;
		return peer;
	}

