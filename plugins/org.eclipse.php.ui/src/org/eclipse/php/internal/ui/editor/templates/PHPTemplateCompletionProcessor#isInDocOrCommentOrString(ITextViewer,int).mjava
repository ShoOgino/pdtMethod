	private boolean isInDocOrCommentOrString(ITextViewer viewer, int offset) {
		IModelManager modelManager = StructuredModelManager.getModelManager();
		if (modelManager != null) {
			IStructuredModel structuredModel = null;
			try {
				structuredModel = modelManager.getExistingModelForRead(viewer.getDocument());
				if (structuredModel instanceof DOMModelForPHP) {
					// Find the structured document region:
					IStructuredDocument document = structuredModel.getStructuredDocument();
					IStructuredDocumentRegion sdRegion = document.getRegionAtCharacterOffset(offset);
					if (sdRegion == null) { // empty file case
						return false;
					}

					ITextRegion textRegion = sdRegion.getRegionAtCharacterOffset(offset);
					if (textRegion == null) {
						return false;
					}

					ITextRegionCollection container = sdRegion;

					if (textRegion instanceof ITextRegionContainer) {
						container = (ITextRegionContainer) textRegion;
						textRegion = container.getRegionAtCharacterOffset(offset);
					}

					if (textRegion.getType() == PHPRegionContext.PHP_CONTENT) {
						IPHPScriptRegion phpScriptRegion = (IPHPScriptRegion) textRegion;
						textRegion = phpScriptRegion
								.getPHPToken(offset - container.getStartOffset() - phpScriptRegion.getStart());
						String type = textRegion.getType();
						if (PHPPartitionTypes.isPHPCommentState(type) || PHPPartitionTypes.isPHPQuotesState(type)) {
							return true;
						}
					}
				}
			} catch (Exception e) {
				Logger.logException(e);
			} finally {
				if (structuredModel != null) {
					structuredModel.releaseFromRead();
				}
			}
		}
		return false;
	}

