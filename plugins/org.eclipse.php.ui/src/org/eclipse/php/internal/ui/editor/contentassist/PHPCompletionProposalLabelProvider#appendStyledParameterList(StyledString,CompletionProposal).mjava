	protected StyledString appendStyledParameterList(StyledString buffer, CompletionProposal methodProposal) {
		String[] parameterNames = methodProposal.findParameterNames(null);
		IMethod method = (IMethod) methodProposal.getModelElement();
		IParameter[] parameters = null;
		try {
			parameters = method.getParameters();
		} catch (ModelException e) {
			Logger.logException(e);
		}
		if (method instanceof AliasMethod) {
			method = (IMethod) ((AliasMethod) method).getMethod();
		}
		boolean isVariadic = false;
		try {
			if (method != null && PHPFlags.isVariadic(method.getFlags())) {
				isVariadic = true;
			}
		} catch (ModelException e) {
			Logger.logException(e);
		}

		String[] parameterTypes = null;
		if (parameterNames != null) {
			final Integer paramLimit = (Integer) methodProposal
					.getAttribute(ScriptCompletionProposalCollector.ATTR_PARAM_LIMIT);
			if (paramLimit != null) {
				for (int i = 0; i < parameterNames.length; i++) {
					if (i >= paramLimit.intValue()) {
						break;
					}
					if (i > 0) {
						buffer.append(',');
						buffer.append(' ');
					}
					if (parameters != null && i < parameters.length && PHPFlags.isReference(parameters[i].getFlags())) {
						buffer.append(PHPElementLabels.REFERENCE_STRING);
					}
					if (isVariadic && i + 1 == parameterNames.length) {
						buffer.append(ScriptElementLabels.ELLIPSIS_STRING); // $NON-NLS-1$
					}
					buffer.append(parameterNames[i]);
				}
				return buffer;
			}
		}
		return appendStyledParameterSignature(buffer, parameterTypes, parameterNames, isVariadic);
	}

