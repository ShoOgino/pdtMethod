	/**
	 * Handle a situation where a file DocBlock is requested and there is an
	 * undocumented class, function or define at the beginning of the document.
	 * In this case we auto-document the undocumented element to comply the
	 * DocBlock rules.
	 * 
	 * @param data
	 *            A PHPFileData that need to be documented
	 * @param document
	 *            The IStructuredDocument that we are working on
	 */
	private void handleFileDocBlock(ISourceModule data, IStructuredDocument document) {

		// Find the first PHP script region:
		IStructuredDocumentRegion sdRegion = document.getFirstStructuredDocumentRegion();
		IPHPScriptRegion phpScriptRegion = null;
		ITextRegion textRegion = null;
		String docBlock = null;
		while (sdRegion != null && docBlock == null) {
			ITextRegion region = sdRegion.getFirstRegion();
			if (region.getType() == PHPRegionContext.PHP_OPEN) {
				// File's content starts with '<?PHP' tag
				region = sdRegion.getRegionAtCharacterOffset(region.getEnd() + sdRegion.getStartOffset());
				if (region != null && region.getType() == PHPRegionContext.PHP_CONTENT) {
					phpScriptRegion = (IPHPScriptRegion) region;
					try {
						docBlock = CodeGeneration.getFileComment(data, null);
					} catch (CoreException e) {
						Logger.logException("Generating default phpdoc comment", e); //$NON-NLS-1$
					}
					if (docBlock == null) {
						// XXX : should we insert newlines?
						docBlock = createDefaultComment(""); //$NON-NLS-1$
					}
					break;
				}
			} else if (region.getType() == DOMRegionContext.XML_DECLARATION_OPEN) {
				// File's content starts with HTML code
				region = sdRegion.getRegionAtCharacterOffset(region.getEnd() + sdRegion.getStartOffset());
				if (region != null) {
					phpScriptRegion = null;
					textRegion = region;
					docBlock = createPHPScopeFileDocBlock(data.getScriptProject());
					break;
				}
			}

			sdRegion = sdRegion.getNext();
		}

		if (phpScriptRegion != null || textRegion != null) {
			try {
				int offset = 0;
				if (phpScriptRegion == null && textRegion != null) {
					// File's content starts with HTML code
					offset = 0;
				} else if (phpScriptRegion != null && sdRegion != null) {
					// File's content starts with '<?php' tag
					textRegion = phpScriptRegion.getPHPToken(0);
					String lineDelimiter = document.getLineDelimiter(document.getLineOfOffset(textRegion.getStart()));
					if (lineDelimiter == null) {
						// XXX : should we add a newline before inserting
						// docBlock?
						lineDelimiter = ""; //$NON-NLS-1$
					}
					int lineDelimiterLength = lineDelimiter.length();
					offset = textRegion.getStart() + sdRegion.getStartOffset() + phpScriptRegion.getStart()
							+ lineDelimiterLength;
				} else {
					assert false;// we shouldn't get here ...
				}

				if (data instanceof AbstractSourceModule) {
					insertDocBlock(document, offset, docBlock);
				}

			} catch (BadLocationException e) {
			}
		}
	}

