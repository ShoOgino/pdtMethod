	public static String createClassDescriptionText(PHPClassData classData, PHPProjectModel projectModel) {
		descriptionText.delete(0, descriptionText.length());
		PHPFileData fileData = (PHPFileData) classData.getContainer();
		PHPClassData.PHPSuperClassNameData superClass = classData.getSuperClassData();
		PHPClassData.PHPInterfaceNameData[] implementData = classData.getInterfacesNamesData();

		String fileName = null;
		String superClassName = null;
		String[] implement = null;
		String desc = classData.getDescription();

		fileName = classData.isUserCode() ? classData.getUserData().getFileName() : null;
		
		if (fileName != null) {
			File file = new File(fileName);
			Path path = new Path(fileName);
			//Do not show the full path of an Untitled PHP Document's file, replace it with the last segment
			if ((path.getDevice() != null) && !file.exists()){
				fileName = new Path(fileName).lastSegment();
			}
		}
		if (superClass != null) {
			superClassName = superClass.getName();
		}
		if (implementData != null && implementData.length > 0) {
			implement = new String[implementData.length];
			for (int i = 0; i < implementData.length; i++) {
				PHPClassData.PHPInterfaceNameData phpInterfaceNameData = implementData[i];
				implement[i] = phpInterfaceNameData.getName();
			}
		}
		if (fileName != null) {
			descriptionText.append(getLocationTableRow(fileName));
		}
		if (superClassName != null) {
			descriptionText.append("<br><dt>Extends</dt>"); //$NON-NLS-1$
			descriptionText.append("<dd>"); //$NON-NLS-1$
			descriptionText.append(superClassName);
			descriptionText.append("</dd>"); //$NON-NLS-1$
		}
		if (implement != null) {
			descriptionText.append("<br><dt>Implements</dt>"); //$NON-NLS-1$
			for (int i = 0; i < implement.length; i++) {
				String interfaceName = implement[i];
				descriptionText.append("<dd>"); //$NON-NLS-1$
				descriptionText.append(interfaceName);
				descriptionText.append("</dd>"); //$NON-NLS-1$
			}
		}
		if (desc.length() > 0) {
			descriptionText.append(getDescriptionTableRow(desc));
		}
		return descriptionText.toString();
	}

