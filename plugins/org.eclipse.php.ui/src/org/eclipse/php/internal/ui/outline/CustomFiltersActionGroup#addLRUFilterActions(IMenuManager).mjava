	private void addLRUFilterActions(IMenuManager mm) {
		if (fLRUFilterIdsStack.isEmpty()) {
			fFilterIdsUsedInLastViewMenu = null;
			return;
		}

		SortedSet<String> sortedFilters = new TreeSet<String>(fLRUFilterIdsStack);
		String[] recentlyChangedFilterIds = sortedFilters.toArray(new String[sortedFilters.size()]);

		fFilterIdsUsedInLastViewMenu = new String[recentlyChangedFilterIds.length];
		for (int i = 0; i < recentlyChangedFilterIds.length; i++) {
			String id = recentlyChangedFilterIds[i];
			fFilterIdsUsedInLastViewMenu[i] = id;
			boolean state = fEnabledFilterIds.containsKey(id) && ((Boolean) fEnabledFilterIds.get(id)).booleanValue();
			FilterDescriptor filterDesc = (FilterDescriptor) fFilterDescriptorMap.get(id);
			if (filterDesc != null) {
				IContributionItem item = new FilterActionMenuContributionItem(this, id, filterDesc.getName(), state,
						i + 1);
				mm.insertBefore(RECENT_FILTERS_GROUP_NAME, item);
			}
		}
	}

