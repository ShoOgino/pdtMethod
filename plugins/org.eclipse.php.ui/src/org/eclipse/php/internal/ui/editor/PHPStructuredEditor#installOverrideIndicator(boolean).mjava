	protected void installOverrideIndicator(boolean provideAST) {
		uninstallOverrideIndicator();
		if (getDocumentProvider() == null) {
			return;
		}
		IAnnotationModel model = getDocumentProvider().getAnnotationModel(
				getEditorInput());
		final IModelElement inputElement = getModelElement();
		if (model == null || inputElement == null
				|| inputElement.getElementType() != IModelElement.SOURCE_MODULE)
			return;

		fOverrideIndicatorManager = new OverrideIndicatorManager(model,
				inputElement, null);
		addReconcileListener(fOverrideIndicatorManager);
		if (provideAST) {
			try {
				Program ast = SharedASTProvider.getAST(
						(ISourceModule) inputElement,
						SharedASTProvider.WAIT_ACTIVE_ONLY,
						getProgressMonitor());
				fOverrideIndicatorManager.reconciled(ast, true,
						getProgressMonitor());
			} catch (ModelException e) {
				Logger.logException(e);
			} catch (IOException e) {
				Logger.logException(e);
			}
		}
	}

