	public void visit(PHPFunctionData codeData) {
		int modifiers = codeData.getModifiers();
		int flags = computeAdornments(modifiers, 0);
		if (PHPModifier.isProtected(modifiers)) {
			image = PHPElementImageProvider.getDecoratedImage(PHPPluginImages.DESC_MISC_PROTECTED, flags, PHPElementImageProvider.SMALL_SIZE);
		} else if (PHPModifier.isPrivate(modifiers)) {
			image = PHPElementImageProvider.getDecoratedImage(PHPPluginImages.DESC_MISC_PRIVATE, flags, PHPElementImageProvider.SMALL_SIZE);
		} else {
			image = PHPElementImageProvider.getDecoratedImage(PHPPluginImages.DESC_MISC_PUBLIC, flags, PHPElementImageProvider.SMALL_SIZE);
		}
		buffer.append(codeData.getName());

		buffer.append("("); //$NON-NLS-1$
		PHPFunctionData.PHPFunctionParameter[] parameters = codeData.getParameters();
		for (int i = 0; i < parameters.length; i++) {
			if (i != 0) {
				buffer.append(", "); //$NON-NLS-1$
			}
			visit(parameters[i]);
		}
		buffer.append(")"); //$NON-NLS-1$

		String rt = codeData.getReturnType().trim();
		rt = (rt.split(" ", 2))[0]; //$NON-NLS-1$

		// we must have a space before the return vlaue;
		rt = "  " + rt; //$NON-NLS-1$

		buffer.append(rt);
	}

