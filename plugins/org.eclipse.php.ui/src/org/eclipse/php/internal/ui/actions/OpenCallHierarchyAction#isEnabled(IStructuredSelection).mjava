	private boolean isEnabled(IStructuredSelection selection) {
		if (selection == null || selection.size() != 1) {
			return false;
		}
		Object firstElement = selection.getFirstElement();
		if (firstElement instanceof ElementImplForPHP) {
			return true;
		}
		if (!(firstElement instanceof IModelElement) && (firstElement instanceof IAdaptable)) {
			firstElement = ((IAdaptable) firstElement).getAdapter(IModelElement.class);
		}

		if (!(firstElement instanceof IModelElement)) {
			return false;
		}
		if (!(firstElement instanceof IModelElement))
			return false;
		switch (((IModelElement) firstElement).getElementType()) {
		// case IModelElement.INITIALIZER:
		case IModelElement.METHOD:
		case IModelElement.FIELD:
		case IModelElement.TYPE:
			return true;
		case IModelElement.PROJECT_FRAGMENT:
		case IModelElement.SOURCE_MODULE:
		case IModelElement.PACKAGE_DECLARATION:
		case IModelElement.IMPORT_DECLARATION:
			return true;
		// case IModelElement.LOCAL_VARIABLE:
		case IModelElement.SCRIPT_PROJECT:
		case IModelElement.SCRIPT_FOLDER:
		default:
			return false;
		}
	}

