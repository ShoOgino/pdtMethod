		public TypeReferenceProcessor(Map<NamespaceDeclaration, Set<String>> oldSingleImports, Program root,
				ImportRewrite impStructure, boolean ignoreLowerCaseNames,
				UnresolvableImportMatcher unresolvableImportMatcher) {
			fRoot = root;
			fOldSingleImports = oldSingleImports;
			fImpStructure = impStructure;
			fDoIgnoreLowerCaseNames = ignoreLowerCaseNames;
			fUnresolvableImportMatcher = unresolvableImportMatcher;

			// fAnalyzer= new ScopeAnalyzer(root);
			//
			// fCurrPackage= (IPackageFragment) cu.getParent()

			fAllowDefaultPackageImports = true;

			List<NamespaceDeclaration> namespaces = root.getNamespaceDeclarations();
			if (namespaces.size() > 0) {
				for (NamespaceDeclaration namespace : namespaces) {
					fImportsAdded.put(namespace, new HashSet<>());
					fUnresolvedTypes.put(namespace, new HashMap<>());
				}
			} else {
				fImportsAdded.put(null, new HashSet<>());
				fUnresolvedTypes.put(null, new HashMap<>());
			}
		}

