	private void appendMethodInfo(IMethod method, StringBuilder buf) throws ModelException {
		
		if (method instanceof FakeGroupMethod) {
			appendDefinitionRow(FIELD_DESC, "This is a group containing multiple functions.", buf);
			return;
		}

		ISourceModule sourceModule = method.getSourceModule();
		String fileName = getFileName(method);

		// append the file name
		appendDefinitionRow(FIELD_LOCATION, fileName, buf);

		// append the class name if it exists
		IType declaringType = method.getDeclaringType();
		appendTypeInfoRow(declaringType, buf);

		ModuleDeclaration module = SourceParserUtil.getModuleDeclaration(sourceModule);
		MethodDeclaration methodDeclaration = PHPModelUtils.getNodeByMethod(module, method);
		if (!(methodDeclaration instanceof IPHPDocAwareDeclaration)) {
			return;
		}

		PHPDocBlock doc = ((IPHPDocAwareDeclaration) methodDeclaration).getPHPDoc();
		if (doc == null) {
			return;
		}

		// append description if it exists
		appendShortDescription(doc, buf);

		// append parameters info
		appendTagInfo(doc, PHPDocTag.PARAM, FIELD_PARAMETERS, buf);

		// append return type
		appendTagInfo(doc, PHPDocTag.RETURN, FIELD_RETURNS, buf);

		// append throw info
		appendTagInfo(doc, PHPDocTag.THROWS, FIELD_THROWS, buf);

		// append see also info
		appendTagInfo(doc, PHPDocTag.SEE, FIELD_SEEALSO, buf);

		// append deprecated info
		appendTagInfo(doc, PHPDocTag.DEPRECATED, FIELD_DEPRECATED, buf);

		// append author info
		appendTagInfo(doc, PHPDocTag.AUTHOR, FIELD_AUTHOR, buf);
	}

