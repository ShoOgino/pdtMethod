	private ITextRegion getPhpToken() {
		if (phpToken != null)
			return phpToken;
		ITextRegion textRegion = getDocumentRegion().getRegionAtCharacterOffset(offset);
		if (textRegion == null)
			throw new CodeUnresolvedException("Unable to resolve php region");
		ITextRegionCollection phpRegionContainer = documentRegion;
		if (textRegion instanceof ITextRegionContainer) {
			phpRegionContainer = (ITextRegionContainer) textRegion;
			textRegion = phpRegionContainer.getRegionAtCharacterOffset(offset);
			if (textRegion == null)
				throw new CodeUnresolvedException("Unable to resolve contained php region");
		}
		int phpRegionContainerOffset = phpRegionContainer.getStartOffset();

		if (textRegion.getType() != PHPRegionContext.PHP_CONTENT)
			throw new CodeUnresolvedException("Incompatible php region context");
		try {
			phpToken = ((PhpScriptRegion) textRegion).getPhpToken(offset - phpRegionContainerOffset - textRegion.getStart());
		} catch (BadLocationException e) {
			throw new CodeUnresolvedException("Unable to resolve php token");
		}
		return textRegion;
	}

