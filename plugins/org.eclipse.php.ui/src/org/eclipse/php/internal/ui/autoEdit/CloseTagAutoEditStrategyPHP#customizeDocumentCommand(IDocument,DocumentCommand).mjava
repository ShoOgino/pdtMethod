	public void customizeDocumentCommand(IDocument document,
			DocumentCommand command) {
		final IProject projects[] = new IProject[1];
		PlatformUI.getWorkbench().getDisplay().syncExec(new Runnable() {
			public void run() {
				IWorkbenchPage page = PHPUiPlugin.getActivePage();
				if (page != null) {
					IEditorPart editor = page.getActiveEditor();
					if (editor instanceof PHPStructuredEditor) {
						PHPStructuredEditor phpStructuredEditor = (PHPStructuredEditor) editor;
						if (phpStructuredEditor.getTextViewer() != null
								&& phpStructuredEditor != null) {
							ISourceModule sourceModule = (ISourceModule) phpStructuredEditor
									.getModelElement();
							projects[0] = sourceModule.getScriptProject()
									.getProject();
						}
					}
				}
			}
		});

		boolean useShortTags = ProjectOptions.useShortTags(projects[0]);
		if (!TypingPreferences.addPhpCloseTag && useShortTags) {
			return;
		}
		Object textEditor = getActiveTextEditor();
		if (!(textEditor instanceof ITextEditorExtension3 && ((ITextEditorExtension3) textEditor)
				.getInsertMode() == ITextEditorExtension3.SMART_INSERT))
			return;

		IStructuredModel model = null;
		try {
			model = StructuredModelManager.getModelManager()
					.getExistingModelForRead(document);

			if (model != null) {
				if (command.text != null) {
					if (command.text.equals("?")) { //$NON-NLS-1$
						IDOMNode node = (IDOMNode) model
								.getIndexedRegion(command.offset - 1);
						if (node != null
								&& prefixedWith(document, command.offset, "<")) { //$NON-NLS-1$ //$NON-NLS-2$
							if (!TypingPreferences.addPhpCloseTag
									&& !useShortTags) {
								command.text += "php "; //$NON-NLS-1$
								command.shiftsCaret = false;
								command.caretOffset = command.offset + 5;
								command.doit = false;
							} else if (TypingPreferences.addPhpCloseTag
									&& useShortTags) {
								if (!closeTagAppears(node.getSource(),
										command.offset)) {
									command.text += " ?>"; //$NON-NLS-1$
									command.caretOffset = command.offset + 2;
									command.shiftsCaret = false;
									command.doit = false;
								}
							} else if (TypingPreferences.addPhpCloseTag
									&& !useShortTags) {
								if (!closeTagAppears(node.getSource(),
										command.offset)) {
									command.text += "php ?>"; //$NON-NLS-1$
									command.shiftsCaret = false;
									command.caretOffset = command.offset + 5;
									command.doit = false;
								}
							}
						}
					}
				}
			}
		} finally {
			if (model != null)
				model.releaseFromRead();
		}
	}

