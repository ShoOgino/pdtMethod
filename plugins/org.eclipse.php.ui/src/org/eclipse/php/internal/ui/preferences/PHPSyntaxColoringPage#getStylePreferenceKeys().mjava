	private Collection<String> getStylePreferenceKeys() {
		if (fStylePreferenceKeys == null) {
			List<String> styles = new ArrayList<String>();
			styles.add(PreferenceConstants.EDITOR_NORMAL_COLOR);
			styles.add(PreferenceConstants.EDITOR_BOUNDARYMARKER_COLOR);
			styles.add(PreferenceConstants.EDITOR_KEYWORD_COLOR);
			styles.add(PreferenceConstants.EDITOR_KEYWORD_PRIVATE_COLOR);
			styles.add(PreferenceConstants.EDITOR_KEYWORD_PROTECTED_COLOR);
			styles.add(PreferenceConstants.EDITOR_KEYWORD_PUBLIC_COLOR);
			styles.add(PreferenceConstants.EDITOR_VARIABLE_COLOR);
			styles.add(PreferenceConstants.EDITOR_STRING_COLOR);
			styles.add(PreferenceConstants.EDITOR_NUMBER_COLOR);
			styles.add(PreferenceConstants.EDITOR_HEREDOC_COLOR);
			styles.add(PreferenceConstants.EDITOR_COMMENT_COLOR);
			styles.add(PreferenceConstants.EDITOR_LINE_COMMENT_COLOR);
			styles.add(PreferenceConstants.EDITOR_PHPDOC_COMMENT_COLOR);
			styles.add(PreferenceConstants.EDITOR_PHPDOC_COLOR);
			styles.add(PreferenceConstants.EDITOR_TASK_COLOR);

			styles.addAll(SemanticHighlightingManager.getInstance()
					.getSemanticHighlightings().keySet());

			fStylePreferenceKeys = styles;
		}
		return fStylePreferenceKeys;
	}

