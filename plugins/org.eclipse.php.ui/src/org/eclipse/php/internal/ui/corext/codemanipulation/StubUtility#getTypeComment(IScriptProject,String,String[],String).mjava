	/*
	 * Don't use this method directly, use CodeGeneration.
	 * 
	 * @see org.eclipse.jdt.ui.CodeGeneration#getTypeComment(ICompilationUnit,
	 * String, String[], String)
	 */
	public static String getTypeComment(IScriptProject sp,
			String typeQualifiedName, String[] typeParameterNames,
			String lineDelim) throws CoreException {
		Template template = getCodeTemplate(
				CodeTemplateContextType.TYPECOMMENT_ID, sp);
		if (template == null) {
			return null;
		}
		CodeTemplateContext context = new CodeTemplateContext(
				template.getContextTypeId(), sp, lineDelim);
		context.setVariable(CodeTemplateContextType.ENCLOSING_TYPE,
				Signature.getQualifier(typeQualifiedName));
		context.setVariable(CodeTemplateContextType.TYPENAME,
				Signature.getSimpleName(typeQualifiedName));

		TemplateBuffer buffer;
		try {
			buffer = context.evaluate(template);
		} catch (BadLocationException e) {
			throw new CoreException(Status.CANCEL_STATUS);
		} catch (TemplateException e) {
			throw new CoreException(Status.CANCEL_STATUS);
		}
		if (buffer == null) {
			return null;
		}

		String str = buffer.getString();
		if (Strings.containsOnlyWhitespaces(str)) {
			return null;
		}

		TemplateVariable position = findVariable(buffer,
				CodeTemplateContextType.TAGS); // look if PHPDoc tags have to
		// be added
		if (position == null) {
			return str;
		}

		IDocument document = new Document(str);
		int[] tagOffsets = position.getOffsets();
		for (int i = tagOffsets.length - 1; i >= 0; i--) { // from last to first
			try {
				insertTag(document, tagOffsets[i], position.getLength(), EMPTY,
						null, typeParameterNames, false, lineDelim, null);
			} catch (BadLocationException e) {
				throw new CoreException(DLTKUIStatus.createError(IStatus.ERROR,
						e));
			}
		}
		return document.get();
	}

