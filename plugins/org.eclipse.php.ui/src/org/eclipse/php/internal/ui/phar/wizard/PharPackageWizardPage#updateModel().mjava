	protected void updateModel() {

		pharData.setElements(getSelectedElements());
		// destination
		String comboText = fDestinationNamesCombo.getText();

		IPath path = toLegalPharPath(comboText);
		// add surfix

		pharData.setPharLocation(path);
		pharData.setOverwrite(fOverwriteCheckbox.getSelection());
		// pharData.setIncludeDirectoryEntries(fIncludeDirectoryEntriesCheckbox
		// .getSelection());
		if (fGenerateManifestRadioButton.getSelection()) {
			pharData.setStubGenerated(true);
		} else {
			pharData.setStubGenerated(false);

			if (fManifestFileText.getText() != null) {
				pharData.setStubLocation(new Path(fManifestFileText.getText()));
			} else {
				pharData.setStubLocation(new Path("")); //$NON-NLS-1$
				setErrorMessage(PharPackagerMessages.JarPackageWizardPage_error_StubFileNull);
			}
		}

		if (pharCompressRadio.getSelection()) {
			noneCompressTypePhar
					.setText(PharPackagerMessages.JarPackageWizardPage_Compress_Type_none);
			zlibCompressTypePhar
					.setText(PharPackagerMessages.JarPackageWizardPage_Compress_Type_gz);
			bzipCompressTypePhar.setVisible(true);

			pharData.setExportType(PharConstants.PHAR);

		} else if (zipCompressRadio.getSelection()) {
			setZipExportType();

			pharData.setExportType(PharConstants.ZIP);

			if (bzipCompressTypePhar.getSelection()) {
				zlibCompressTypePhar.setSelection(true);
				bzipCompressTypePhar.setSelection(false);
			}

		} else if (tarCompressRadio.getSelection()) {
			noneCompressTypePhar
					.setText(PharPackagerMessages.JarPackageWizardPage_Compress_Type_none);
			zlibCompressTypePhar
					.setText(PharPackagerMessages.JarPackageWizardPage_Compress_Type_gz);
			bzipCompressTypePhar.setVisible(true);

			pharData.setExportType(PharConstants.TAR);

		}

		if (noneCompressTypePhar.getSelection()) {
			pharData.setCompressType(PharConstants.NONE_COMPRESSED);
		} else if (zlibCompressTypePhar.getSelection()) {
			pharData.setCompressType(PharConstants.GZ_COMPRESSED);
		} else if (bzipCompressTypePhar.getSelection()) {
			pharData.setCompressType(PharConstants.BZ2_COMPRESSED);
		}

		// pharData.setUseSignature(fUseSignatureCheckbox.getSelection());
	}

