	private ScriptCompletionProposal createMethodDeclarationProposal(final CompletionProposal proposal) {
		if (getSourceModule() == null || getSourceModule().getScriptProject() == null) {
			return null;
		}

		String name = proposal.getName();
		String completion = proposal.getCompletion();
		int replaceStart = proposal.getReplaceStart();
		String[] paramTypes;

		paramTypes = new String[0];

		int start = proposal.getReplaceStart();
		int length = getLength(proposal);
		StyledString label = null;
		if (proposal.getKind() == CompletionProposal.METHOD_DECLARATION) {
			label = ((PHPCompletionProposalLabelProvider) getLabelProvider())
					.createStyledOverrideMethodProposalLabel(proposal);
		} else {
			label  = ((PHPCompletionProposalLabelProvider) getLabelProvider())
					.createStyledMethodProposalLabel(proposal);
		}

		ScriptCompletionProposal scriptProposal = null;
		if (ProposalExtraInfo.isNotInsertUse(proposal.getExtraInfo())) {
			scriptProposal = new PHPCompletionProposal(completion, replaceStart, length, null, label, 0) {
				private boolean fReplacementStringComputed = false;

				@Override
				public String getReplacementString() {
					if (!fReplacementStringComputed) {
						String replacementString = computeReplacementString();
						setReplacementString(replacementString);
						fReplacementStringComputed = true;
					}
					return super.getReplacementString();
				}

				private String computeReplacementString() {
					IMethod method = (IMethod) proposal.getModelElement();

					if (ProposalExtraInfo.isMemberInNamespace(proposal.getExtraInfo())) {
						StringBuilder result = new StringBuilder(PHPModelUtils.getFullName(method));
						if (ProposalExtraInfo.isAbsoluteName(getExtraInfo())) {
							result.insert(0, NamespaceReference.NAMESPACE_SEPARATOR);
						}
						try {
							if (PHPFlags.isNamespace(method.getFlags())) {
								result.append(NamespaceReference.NAMESPACE_SEPARATOR);
							}
						} catch (ModelException e) {
							PHPUiPlugin.log(e);
						}
						return result.toString();
					}

					if (ProposalExtraInfo.isNoInsert(proposal.getExtraInfo())) {
						return method.getElementName();
					}
					if (ProposalExtraInfo.isFullName(proposal.getExtraInfo())) {
						return PHPModelUtils.getFullName(method);
					}
					return super.getReplacementString();
				}

				@Override
				public Object getExtraInfo() {
					return proposal.getExtraInfo();
				}

			};
		} else if (ProposalExtraInfo.isStub(proposal.getExtraInfo())) {
			scriptProposal = createMethodOverrideCompletionProposal(getScriptProject(), getSourceModule(), name,
					paramTypes, start, length, label, String.valueOf(proposal.getCompletion()));
		} else {
			scriptProposal = createParameterGuessingProposal(proposal, name, paramTypes, start, length, label,
					completion, proposal.getExtraInfo());
		}

		scriptProposal.setImageFactory(getImageFactory(getLabelProvider().createMethodImageDescriptor(proposal)));

		ProposalInfo info = new MethodProposalInfo(getSourceModule().getScriptProject(), proposal);
		scriptProposal.setProposalInfo(info);

		scriptProposal.setRelevance(computeRelevance(proposal));
		return scriptProposal;
	}

