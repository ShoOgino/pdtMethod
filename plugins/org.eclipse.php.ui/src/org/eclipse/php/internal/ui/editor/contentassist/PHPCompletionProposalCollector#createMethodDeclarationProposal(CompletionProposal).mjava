	private ScriptCompletionProposal createMethodDeclarationProposal(final CompletionProposal proposal) {
		if (getSourceModule() == null || getSourceModule().getScriptProject() == null) {
			return null;
		}

		String name = proposal.getName();
		String completion = proposal.getCompletion();
		int replaceStart = proposal.getReplaceStart();
		String[] paramTypes;

		paramTypes = new String[0];

		int start = proposal.getReplaceStart();
		int length = getLength(proposal);
		StyledString label = ((PHPCompletionProposalLabelProvider) getLabelProvider())
				.createStyledOverrideMethodProposalLabel(proposal);

		StyledString displayString = ((PHPCompletionProposalLabelProvider) getLabelProvider())
				.createStyledMethodProposalLabel(proposal);

		ScriptCompletionProposal scriptProposal = null;
		if (ProposalExtraInfo.isNotInsertUse(proposal.getExtraInfo())) {
			Image image = getImage(
					((PHPCompletionProposalLabelProvider) getLabelProvider()).createMethodImageDescriptor(proposal));
			scriptProposal = new PHPCompletionProposal(completion, replaceStart, length, image, displayString, 0) {
				private boolean fReplacementStringComputed = false;

				@Override
				public String getReplacementString() {
					if (!fReplacementStringComputed) {
						String replacementString = computeReplacementString();
						setReplacementString(replacementString);
						fReplacementStringComputed = true;
					}
					return super.getReplacementString();
				}

				private String computeReplacementString() {
					IMethod method = (IMethod) proposal.getModelElement();
					if (ProposalExtraInfo.isNoInsert(proposal.getExtraInfo())) {
						return method.getElementName();
					}
					if (ProposalExtraInfo.isFullName(proposal.getExtraInfo())) {
						return PHPModelUtils.getFullName(method);
					}
					return super.getReplacementString();
				}

				@Override
				public Object getExtraInfo() {
					return proposal.getExtraInfo();
				}

			};
		} else {
			scriptProposal = createParameterGuessingProposal(proposal, name, paramTypes, start, length, label,
					completion, proposal.getExtraInfo());
		}

		scriptProposal.setImage(getImage(getLabelProvider().createMethodImageDescriptor(proposal)));

		ProposalInfo info = new MethodProposalInfo(getSourceModule().getScriptProject(), proposal);
		scriptProposal.setProposalInfo(info);

		scriptProposal.setRelevance(computeRelevance(proposal));
		return scriptProposal;
	}

