	/**
	 * Returns the current active formatter. In case of a PHP formatter it
	 * should also implement IFormatterProcessorFactory.
	 * 
	 * @return
	 */
	public IContentFormatter getActiveFormatter() {
		if (fActiveFormatter == null) {
			IConfigurationElement[] elements = Platform.getExtensionRegistry()
					.getConfigurationElementsFor(FORMATTER_PROCESSOR_ID);
			for (int i = 0; i < elements.length; i++) {
				IConfigurationElement element = elements[i];
				if (FORMATTER_PROCESSOR.equals(element.getName())) {
					ElementCreationProxy ecProxy = new ElementCreationProxy(element, FORMATTER_PROCESSOR_ID);
					fActiveFormatter = (IContentFormatter) ecProxy.getObject();
				}
			}
			if (fActiveFormatter == null) {
				fActiveFormatter = new MultiPassContentFormatter(
						IStructuredPartitioning.DEFAULT_STRUCTURED_PARTITIONING, IHTMLPartitions.HTML_DEFAULT);
			}
		}
		return fActiveFormatter;
	}

