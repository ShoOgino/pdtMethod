	private static IEditorInput getEditorInput(final PHPCodeData element, final IProject project, final String incDir) {

		final IResource resource = PHPModelUtil.getResource(element);
		if (resource == null || !resource.exists() || !resource.getProject().equals(project)) {
			final Object source = PHPModelUtil.getExternalResource(element, project);
			if (source instanceof File) {
				File externalSource = (File) source;
				Path path = new Path(externalSource.getPath());
				//check if external file
				if (ExternalPhpFilesRegistry.getInstance().isEntryExist(path.toString())) {
					LocalFile locFile = new LocalFile(new File(ExternalPhpFilesRegistry.getInstance().getEntryFromRegistry(path.toString())));
					final JavaFileEditorInput externalInput = new JavaFileEditorInput(locFile);
					return externalInput;
				}
				//include path file
				else {
					final LocalFileStorage fileStorage = new LocalFileStorage((File) source);
					fileStorage.setProject(project);
					fileStorage.setIncBaseDirName(incDir);
					return new LocalFileStorageEditorInput(fileStorage);
				}
			}
			if (source instanceof ZipFile)
				return createZipEntryStorageEditorInput((ZipFile) source, element, project);
		}
		if (resource instanceof IFile)
			return new FileEditorInput((IFile) resource);

		return null;
	}

