	protected void runInternal(ITextSelection selection, IDocumentExtension3 docExtension) throws BadPartitioningException, BadLocationException {
		int offset = selection.getOffset();
		int endOffset = offset + selection.getLength();
		if (!(docExtension instanceof IStructuredDocument)) {
			return;
		}
		
		MultiTextEdit multiEdit = new MultiTextEdit();
		IStructuredDocument sDoc = (IStructuredDocument) docExtension;
		do {
			IStructuredDocumentRegion sdRegion = sDoc.getRegionAtCharacterOffset(offset);
			ITextRegion textRegion = sdRegion.getRegionAtCharacterOffset(offset);

			ITextRegionCollection container = sdRegion;

			if (textRegion instanceof ITextRegionContainer) {
				container = (ITextRegionContainer) textRegion;
				textRegion = container.getRegionAtCharacterOffset(offset);
			}

			if (textRegion.getType() == PHPRegionContext.PHP_CONTENT) {
				PhpScriptRegion phpScriptRegion = (PhpScriptRegion) textRegion;
				textRegion = phpScriptRegion.getPhpToken(offset - container.getStartOffset() - phpScriptRegion.getStart());
				if (PHPPartitionTypes.isPHPMultiLineCommentState(textRegion.getType())) {
					ITextRegion startRegion = PHPPartitionTypes.getPartitionStartRegion(phpScriptRegion, textRegion.getStart());
					ITextRegion endRegion = PHPPartitionTypes.getPartitionEndRegion(phpScriptRegion, textRegion.getStart());
					if (startRegion.getType() == PHPRegionTypes.PHP_COMMENT_START && endRegion.getType() == PHPRegionTypes.PHP_COMMENT_END) {
						int startCommentOffset = container.getStart() + phpScriptRegion.getStart() + startRegion.getStart();
						int endCommentOffset = container.getStart() + phpScriptRegion.getStart() + endRegion.getStart();
						
						multiEdit.addChild(new DeleteEdit(startCommentOffset, startRegion.getLength()));
						multiEdit.addChild(new DeleteEdit(endCommentOffset, getCommentEnd().length()));
						
						offset = endCommentOffset + endRegion.getLength();
					} else {
						break; // comment is not opened or not closed
					}
				} else {
					int endPartitionOffset = PHPPartitionTypes.getPartitionStart(phpScriptRegion, offset - container.getStartOffset() - phpScriptRegion.getStart());
					offset = container.getStart() + phpScriptRegion.getStart() + endPartitionOffset;
				}
			} else {
				break;
			}
		} while (offset < endOffset);

		IStructuredTextUndoManager undoManager = sDoc.getUndoManager();
		undoManager.beginRecording(this);
		multiEdit.apply(sDoc);
		undoManager.endRecording(this);
	}

