	/*
	 * @see IInformationControl#setInformation(String)
	 */
	@Override
	public void setInformation(String content) {
		if (content == null) {
			fViewer.setInput(null);
			return;
		}

		// Add open and close PHP tags in order to enable PHP parser on content:
		StringBuilder buf = new StringBuilder();
		buf.append("<?"); //$NON-NLS-1$
		buf.append(content);
		buf.append("?>"); //$NON-NLS-1$

		IDocument doc = new Document(buf.toString());
		DocumentReader docReader = new DocumentReader(doc);
		getParser().reset(docReader);
		IStructuredDocumentRegion sdRegion = getParser().getDocumentRegions();

		// This hack is needed in order to remove the open and close PHP tags we
		// added before.
		ITextRegionList phpRegionsList = sdRegion.getRegions();
		phpRegionsList.remove(0); // remove open PHP tag
		phpRegionsList.remove(phpRegionsList.size() - 1); // remove close PHP
															// tag

		// Update starting location of PHP token regions:
		Iterator<?> i = phpRegionsList.iterator();
		while (i.hasNext()) {
			ITextRegion tokenRegion = (ITextRegion) i.next();
			tokenRegion.adjustStart(-2);
		}
		sdRegion.setRegions(phpRegionsList);

		fInput = content;
		fNodes = sdRegion;

		doc = new Document(fInput);
		doc.setDocumentPartitioner(new PHPStructuredTextPartitioner());
		fViewer.setInput(doc);
		applyStyles();
	}

