	/*
	 * @see IInformationControl#setInformation(String)
	 */
	public void setInformation(String content) {
		if (content == null) {
			fViewer.setInput(null);
			return;
		}

		fInput = content;

		StringBuffer buf = new StringBuffer();
		buf.append("<?"); //$NON-NLS-1$
		buf.append(content);
		buf.append("?>"); //$NON-NLS-1$

		IDocument doc = new Document(buf.toString());
		DocumentReader docReader = new DocumentReader(doc);
		getParser().reset(docReader);
		IStructuredDocumentRegion sdRegion = getParser().getDocumentRegions();
		
		// This hack is needed in order to remove the open and close PHP tags we added before.
		// We were forced to add these tags, in order to enable PHP parser.
		ITextRegionList phpRegionsList = sdRegion.getRegions();
		Iterator i = phpRegionsList.iterator();
		while (i.hasNext()) {
			ITextRegion region = (ITextRegion)i.next();
			if (region.getType() == PHPRegionContext.PHP_OPEN) {
				sdRegion.adjustStart(region.getEnd() * -1); // remove open PHP tag
			} else if (region.getType() == PHPRegionContext.PHP_CLOSE) {
				sdRegion.adjustLength(sdRegion.getLength() - region.getLength()); // remove close PHP tag
			}
		}
		fNodes = sdRegion;

		doc = new Document(fInput);
		doc.setDocumentPartitioner(new PHPStructuredTextPartitioner());
		fViewer.setInput(doc);
		applyStyles();
	}

