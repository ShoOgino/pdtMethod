	private static void getTypeLabel(ITypeBinding binding, long flags,
			StringBuffer buffer) {
		// if ((flags & ScriptElementLabels.T_FULLY_QUALIFIED) != 0) {
		// final IPackageBinding pack= binding.getPackage();
		// if (pack != null && !pack.isUnnamed()) {
		// buffer.append(pack.getName());
		// buffer.append('.');
		// }
		// }
		if ((flags & (ScriptElementLabels.T_FULLY_QUALIFIED | ScriptElementLabels.T_CONTAINER_QUALIFIED)) != 0) {
			// final ITypeBinding declaring= binding.getDeclaringClass();
			// if (declaring != null) {
			// getTypeLabel(declaring, ScriptElementLabels.T_CONTAINER_QUALIFIED
			// | (flags & ScriptElementLabels.P_COMPRESSED), buffer);
			// buffer.append('.');
			// }
			// final IMethodBinding declaringMethod=
			// binding.getDeclaringMethod();
			// if (declaringMethod != null) {
			// getMethodLabel(declaringMethod, 0, buffer);
			// buffer.append('.');
			// }
		}

		// if (binding.isCapture()) {
		// getTypeLabel(binding.getWildcard(), flags &
		// ScriptElementLabels.T_TYPE_PARAMETERS, buffer);
		// } else if (binding.isWildcardType()) {
		// buffer.append('?');
		// ITypeBinding bound= binding.getBound();
		// if (bound != null) {
		// if (binding.isUpperbound()) {
		// buffer.append(" extends ");
		// } else {
		// buffer.append(" super ");
		// }
		// getTypeLabel(bound, flags & ScriptElementLabels.T_TYPE_PARAMETERS,
		// buffer);
		// }
		// } else
		if (binding == null) {
			return;
		}
		if (binding.isArray()) {
			getTypeLabel(binding.getElementType(), flags
					& ScriptElementLabels.T_TYPE_PARAMETERS, buffer);
			appendDimensions(binding.getDimensions(), buffer);
		} else { // type variables, primitive, reftype
			String name = binding.getName();
			if (name != null) {
				buffer.append(name);
			}
			// if (binding.isEnum()) {
			// buffer.append('{' + ScriptElementLabels.ELLIPSIS_STRING + '}');
			// } else if (binding.isAnonymous()) {
			// ITypeBinding[] superInterfaces= binding.getInterfaces();
			// ITypeBinding baseType;
			// if (superInterfaces.length > 0) {
			// baseType= superInterfaces[0];
			// } else {
			// baseType= binding.getSuperclass();
			// }
			// if (baseType != null) {
			// StringBuffer anonymBaseType= new StringBuffer();
			// getTypeLabel(baseType, flags &
			// ScriptElementLabels.T_TYPE_PARAMETERS, anonymBaseType);
			// buffer.append(Messages.format(JavaUIMessages.ScriptElementLabels_anonym_type,
			// anonymBaseType.toString()));
			// } else {
			// buffer.append(JavaUIMessages.ScriptElementLabels_anonym);
			// }
			// } else {
			// }

			if ((flags & ScriptElementLabels.T_TYPE_PARAMETERS) != 0) {
				// if (binding.isGenericType()) {
				// getTypeParametersLabel(binding.getTypeParameters(), buffer);
				// } else if (binding.isParameterizedType()) {
				// getTypeArgumentsLabel(binding.getTypeArguments(), flags,
				// buffer);
				// }
			}
		}

		// if ((flags & ScriptElementLabels.T_POST_QUALIFIED) != 0) {
		// final IMethodBinding declaringMethod= binding.getDeclaringMethod();
		// final ITypeBinding declaringType= binding.getDeclaringClass();
		// if (declaringMethod != null) {
		// buffer.append(ScriptElementLabels.CONCAT_STRING);
		// getMethodLabel(declaringMethod, ScriptElementLabels.T_FULLY_QUALIFIED
		// | (flags & ScriptElementLabels.P_COMPRESSED), buffer);
		// } else if (declaringType != null) {
		// buffer.append(ScriptElementLabels.CONCAT_STRING);
		// getTypeLabel(declaringType, ScriptElementLabels.T_FULLY_QUALIFIED |
		// (flags & ScriptElementLabels.P_COMPRESSED), buffer);
		// } else {
		// final IPackageBinding pack= binding.getPackage();
		// if (pack != null && !pack.isUnnamed()) {
		// buffer.append(ScriptElementLabels.CONCAT_STRING);
		// buffer.append(pack.getName());
		// }
		// }
		// }
	}

