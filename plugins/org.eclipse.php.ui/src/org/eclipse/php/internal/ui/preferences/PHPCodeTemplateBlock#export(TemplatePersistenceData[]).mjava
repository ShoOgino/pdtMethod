	private void export(TemplatePersistenceData[] templates) {
		FileDialog dialog = new FileDialog(getShell(), SWT.SAVE);
		dialog.setText(
				Messages.format(PreferencesMessages.CodeTemplateBlock_export_title, String.valueOf(templates.length)));
		dialog.setFilterExtensions(new String[] { PreferencesMessages.CodeTemplateBlock_export_extension });
		dialog.setFileName(PreferencesMessages.CodeTemplateBlock_export_filename);
		String path = dialog.open();

		if (path == null) {
			return;
		}

		File file = new File(path);

		// FIXME
		/*
		 * if (file.isHidden()) { String title=
		 * PreferencesMessages.CodeTemplateBlock_export_error_title; String message=
		 * Messages.format(PreferencesMessages. CodeTemplateBlock_export_error_hidden ,
		 * BasicElementLabels.getPathLabel(file)); MessageDialog.openError(getShell(),
		 * title, message); return; }
		 * 
		 * if (file.exists() && !file.canWrite()) { String title=
		 * PreferencesMessages.CodeTemplateBlock_export_error_title; String
		 * message=Messages.format(PreferencesMessages.
		 * CodeTemplateBlock_export_error_canNotWrite,
		 * BasicElementLabels.getPathLabel(file)); MessageDialog.openError(getShell(),
		 * title, message); return; }
		 */

		if (!file.exists() || confirmOverwrite(file)) {
			OutputStream output = null;
			try {
				output = new BufferedOutputStream(new FileOutputStream(file));
				TemplateReaderWriter writer = new TemplateReaderWriter();
				writer.save(templates, output);
				output.close();
			} catch (IOException e) {
				if (output != null) {
					try {
						output.close();
					} catch (IOException e2) {
						// ignore
					}
				}
				openWriteErrorDialog();
			}
		}

	}

