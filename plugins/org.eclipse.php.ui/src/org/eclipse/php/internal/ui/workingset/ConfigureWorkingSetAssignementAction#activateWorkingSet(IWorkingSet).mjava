	/**
	 * Adds the given working set to the set of currently active working sets.
	 * 
	 * @param workingSet
	 *            working set to be activated
	 * @since 3.5
	 */
	private void activateWorkingSet(IWorkingSet workingSet) {
		WorkingSetModel model = null;
		if (fWorkingSetModel != null) {
			model = fWorkingSetModel;
		} else {
			ScriptExplorerPart activePart = getActivePackageExplorer();
			if (activePart != null) {
				model = activePart.getWorkingSetModel();
			}
		}
		if (model != null) {
			IWorkingSet[] workingSets = model.getActiveWorkingSets();
			IWorkingSet[] activeWorkingSets = new IWorkingSet[workingSets.length + 1];
			System.arraycopy(workingSets, 0, activeWorkingSets, 0, workingSets.length);
			activeWorkingSets[workingSets.length] = workingSet;
			model.setActiveWorkingSets(activeWorkingSets);
		}

	}

