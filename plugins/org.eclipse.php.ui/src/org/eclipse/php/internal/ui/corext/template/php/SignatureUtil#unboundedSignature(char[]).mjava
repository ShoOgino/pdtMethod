	/**
	 * Takes a method signature
	 * <code>[&lt; typeVariableName : formalTypeDecl &gt;] ( paramTypeSig1* ) retTypeSig</code>
	 * and returns it with any parameter signatures filtered through
	 * <code>getLowerBound</code> and the return type filtered through
	 * <code>getUpperBound</code>. Any preceding formal type variable
	 * declarations are removed.
	 * <p>
	 * TODO this is a temporary workaround for
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=83600
	 * </p>
	 * 
	 * @param signature the method signature to convert
	 * @return the signature with no bounded types
	 */
	public static char[] unboundedSignature(char[] signature) {
		if (signature == null || signature.length < 2)
			return signature;
		
		final boolean BUG_83600= true;
		// XXX the signatures from CompletionRequestor contain a superfluous '+'
		// before type parameters to parameter types
		if (BUG_83600) {
			signature= fix83600(signature);
		}
		
		StringBuffer res= new StringBuffer("("); //$NON-NLS-1$
		char[][] parameters= Signature.getParameterTypes(signature);
		for (int i= 0; i < parameters.length; i++) {
			char[] param= parameters[i];
			res.append(getLowerBound(param));
		}
		res.append(')');
		res.append(getUpperBound(Signature.getReturnType(signature)));
		return res.toString().toCharArray();
	}

