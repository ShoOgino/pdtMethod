	/*
	 * @see DeleteChange#doDelete(IProgressMonitor)
	 */
	protected Change doDelete(IProgressMonitor pm) throws CoreException {
		ISourceManipulation element = getSourceModification();
		// we have to save dirty compilation units before deleting them.
		// Otherwise
		// we will end up showing ghost compilation units in the package
		// explorer
		// since the primary working copy still exists.
		if (element instanceof ISourceModule) {
			pm.beginTask("", 2); //$NON-NLS-1$
			ISourceModule unit = (ISourceModule) element;
			saveCUnitIfNeeded(unit, new SubProgressMonitor(pm, 1));
			// element.delete(false, new SubProgressMonitor(pm, 1));

			IResource resource = unit.getResource();
			if (resource != null) {
				ResourceDescription resourceDescription = ResourceDescription.fromResource(resource);
				element.delete(false, new SubProgressMonitor(pm, 1));
				resourceDescription.recordStateFromHistory(resource, new SubProgressMonitor(pm, 1));
				return new UndoDeleteResourceChange(resourceDescription);
			} else {
				element.delete(false, pm);
			}
			return null;

			// begin fix https://bugs.eclipse.org/bugs/show_bug.cgi?id=66835
		} else if (element instanceof IScriptFolder) {
			ISourceModule[] units = ((IScriptFolder) element).getSourceModules();
			pm.beginTask("", units.length + 1); //$NON-NLS-1$
			for (int i = 0; i < units.length; i++) {
				saveCUnitIfNeeded(units[i], new SubProgressMonitor(pm, 1));
			}
			// work around for
			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=292651
			// There's an issue when deleting the IScriptFolder by using
			// model.delete method.
			delete(false, new SubProgressMonitor(pm, 1), (IScriptFolder) element);
			return new NullChange();
			// end fix https://bugs.eclipse.org/bugs/show_bug.cgi?id=66835
		} else {
			element.delete(false, pm);
			return null;
		}
	}

