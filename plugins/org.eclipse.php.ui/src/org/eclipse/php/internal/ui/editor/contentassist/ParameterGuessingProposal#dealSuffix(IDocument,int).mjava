	private void dealSuffix(IDocument document, int offset) {
		boolean toggleEating = isToggleEating();
		boolean insertCompletion = insertCompletion();
		String replacement = getReplacementString();
		int posReplacementLP = replacement.indexOf(LPAREN);
		if (posReplacementLP >= 0 && replacement.endsWith(String.valueOf(RPAREN))) {
			int searchOffset;
			if (!insertCompletion || toggleEating) {
				searchOffset = getReplacementOffset() + getReplacementLength();
			} else {
				searchOffset = offset;
			}
			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=459377
			int posLP = getRelativePositionOf(document, searchOffset, LPAREN);
			if (posLP >= 0) {
				int posRP = getRelativePositionOf(document, searchOffset + (posLP + 1), RPAREN);
				if (posRP < 0) {
					// unset all parameters that have to be written in the
					// document, they should not collide with the text
					// already written in the document after left parenthesis
					fPositions = null;
					fChoices = null;
					// we truncate the replacement text starting
					// from left parenthesis (included)
					replacement = replacement.substring(0, posReplacementLP);
					setReplacementString(replacement);
					// put the cursor before left parenthesis in document,
					// it will be put after left parenthesis through
					// PHPOverrideCompletionProposal#calculateCursorPosition()
					setReplacementLength(getReplacementLength() + posLP);
				} else {
					// put the cursor after right parenthesis in document
					setReplacementLength(getReplacementLength() + (posLP + 1) + (posRP + 1));
				}
			}
		} else {
			// unset all existing parameters (if any), they are useless now
			fPositions = null;
			fChoices = null;
			int searchOffset;
			if (!insertCompletion || toggleEating) {
				searchOffset = getReplacementOffset() + getReplacementLength();
			} else {
				searchOffset = offset;
			}
			int posLP = getRelativePositionOf(document, searchOffset, LPAREN);
			if (posLP < 0) {
				// append missing parentheses in insert and overwrite mode
				replacement = replacement + LPAREN + RPAREN;
				setReplacementString(replacement);
			} else {
				// put the cursor before left parenthesis in document,
				// it will be put after left parenthesis through
				// PHPOverrideCompletionProposal#calculateCursorPosition()
				setReplacementLength(getReplacementLength() + posLP);
			}
		}
	}

