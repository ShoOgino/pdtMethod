	private NamespaceDeclaration getCurrentNamespace(Program program,
			ISourceModule sourceModule, int offset) {
		SourceType ns = (SourceType) PHPModelUtils.getPossibleCurrentNamespace(
				sourceModule, offset);
		if (ns == null) {
			if (program.statements() != null
					&& !program.statements().isEmpty()
					&& (program.statements().get(0) instanceof NamespaceDeclaration)) {
				NamespaceDeclaration result = (NamespaceDeclaration) program
						.statements().get(0);
				for (Statement statement : program.statements()) {
					if (statement.getStart() >= offset) {
						return result;
					}
					if (statement instanceof NamespaceDeclaration) {
						result = (NamespaceDeclaration) statement;
					}
				}
				return result;
			} else {
				return null;
			}
		}
		ASTNode node = null;
		try {
			node = program.getElementAt(ns.getSourceRange().getOffset());
		} catch (ModelException e) {
		}
		if (node == null) {
			return null;
		}
		do {
			switch (node.getType()) {
			case ASTNode.NAMESPACE:
				return (NamespaceDeclaration) node;
			}
			node = node.getParent();
		} while (node != null);

		return null;
	}

