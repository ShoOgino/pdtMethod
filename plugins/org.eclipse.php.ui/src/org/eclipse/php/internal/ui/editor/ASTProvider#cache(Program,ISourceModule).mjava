	/**
	 * Caches the given compilation unit AST for the given Java element.
	 * 
	 * @param ast
	 *            the ast
	 * @param javaElement
	 *            the java element
	 */
	private synchronized void cache(Program ast, ISourceModule javaElement) {

		if (fActiveJavaElement != null && !fActiveJavaElement.equals(javaElement)) {
			if (DEBUG && javaElement != null) {
				// don't report call from

				// disposeAST()
				System.out.println(getThreadName() + " - " + DEBUG_PREFIX + "don't cache AST for inactive: " //$NON-NLS-1$ //$NON-NLS-2$
						+ toString(javaElement));
			}
			return;
		}

		if (DEBUG && (javaElement != null || ast != null)) {
			// don't report call
			System.out.println(getThreadName() + " - " + DEBUG_PREFIX + "caching AST: " + toString(ast) + " for: " //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					+ toString(javaElement));
		}

		if (fAST != null) {
			disposeAST();
		}

		fAST = ast;

		// Signal AST change
		synchronized (fWaitLock) {
			fWaitLock.notifyAll();
		}
	}

