	/**
	 * Prepares php regions to the line highliter
	 * @param holdResults - results
	 * @param region - php region
	 * @param partitionLength 
	 * @param partitionStartOffset 
	 */
	private boolean preparePhpRegions(Collection holdResults, PhpScriptRegion region, int regionStart, int partitionStartOffset, int partitionLength) {
		assert region.getType() == PHPRegionContext.PHP_CONTENT;

		StyleRange styleRange = null;
		TextAttribute attr;
		TextAttribute previousAttr = null;

		ITextRegion[] phpTokens = null;
		try {
			phpTokens = region.getPhpTokens(partitionStartOffset - regionStart, partitionLength);
			for (int i = 0; i < phpTokens.length; i++) {
				ITextRegion element = phpTokens[i];
				attr = getAttributeFor(element);
				if ((styleRange != null) && (previousAttr != null) && (previousAttr.equals(attr))) {
					styleRange.length += element.getLength();
				} else {
					styleRange =new StyleRange(regionStart + element.getStart(), element.getLength(), attr.getForeground(), attr.getBackground(), attr.getStyle());
					holdResults.add(styleRange);
					// technically speaking, we don't need to update
					// previousAttr
					// in the other case, because the other case is when
					// it hasn't changed
					previousAttr = attr;
				}
			}
			return true;
		} catch (BadLocationException e) {
			Logger.logException(e);
			return false;			
		}		
	}

