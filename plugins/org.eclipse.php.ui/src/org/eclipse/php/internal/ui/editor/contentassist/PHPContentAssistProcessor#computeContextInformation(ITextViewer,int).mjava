	public IContextInformation[] computeContextInformation(ITextViewer viewer, int offset) {
		int contextInformationPosition = guessContextInformationPosition(viewer, offset);
		if (contextInformationPosition == -1) {
			return null;
		}
		ICompletionProposal[] proposals = computeCompletionProposals(viewer, contextInformationPosition);
		ArrayList contextInfo = new ArrayList();

		//the following for loop is fix for bug #200119
		//if we're getting more than one proposals - then we show show only the ones
		//with the shortest name. (the only case it can happen is inside C'tor
		//when there are two classes and one name includes (actually starts with)the other  )
		int shortestName = Integer.MAX_VALUE;
		for (int i = 0; i < proposals.length; ++i) {
			if (proposals[i].getContextInformation() != null) {
				int nameLength = proposals[i].getDisplayString().length();
				if (nameLength < shortestName) {
					shortestName = nameLength;
				}
			}
		}
		for (int i = 0; i < proposals.length; ++i) {
			IContextInformation info = proposals[i].getContextInformation();
			if (info != null && proposals[i].getDisplayString().length() == shortestName) {
				ContextInformationWrapper contextInformation = new ContextInformationWrapper(info);
				contextInformation.setContextInformationPosition(contextInformationPosition + 1);
				//the +1 is because guessContextInformationPosition()
				//returns the position of the '(' and the ContextInformationPosition needs the position after it.
				contextInfo.add(contextInformation);
			}
		}
		return (IContextInformation[]) contextInfo.toArray(new IContextInformation[contextInfo.size()]);
	}

