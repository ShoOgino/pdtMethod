	/*
	 * @see ICompletionProposalExtension#apply(IDocument, char)
	 */
	public void apply(IDocument document, char trigger, int offset) {
		try {
			dealPrefix();
			dealSuffix(document, offset);

			// TODO lengthChange is workaround for replacement string changed by
			// super class, this needs better solution
			int lengthChange = getReplacementString().length();
			super.apply(document, trigger, offset);
			lengthChange = Math.max(0, getReplacementString().length() - lengthChange);

			int baseOffset = getReplacementOffset();
			String replacement = getReplacementString();
			boolean hasParameters = false;
			try {
				hasParameters = method.getParameters().length != 0;
			} catch (ModelException e) {
				PHPUiPlugin.log(e);
			}

			if (hasParameters && getTextViewer() != null) {
				LinkedModeModel model = new LinkedModeModel();

				if ((fPositions != null && fPositions.length > 0)) {
					for (int i = 0; i < fPositions.length; i++) {
						LinkedPositionGroup group = new LinkedPositionGroup();
						int positionOffset = fPositions[i].getOffset() + lengthChange;
						int positionLength = fPositions[i].getLength();

						if (fChoices[i].length < 2) {
							group.addPosition(new LinkedPosition(document, positionOffset, positionLength,
									LinkedPositionGroup.NO_STOP));
						} else {
							ensurePositionCategoryInstalled(document, model);
							document.addPosition(getCategory(), fPositions[i]);
							group.addPosition(new ProposalPosition(document, positionOffset, positionLength,
									LinkedPositionGroup.NO_STOP, fChoices[i]));
						}
						model.addGroup(group);
					}
				} else {
					LinkedPositionGroup group = new LinkedPositionGroup();
					group.addPosition(new LinkedPosition(document, getReplacementOffset() + getCursorPosition(), 0,
							LinkedPositionGroup.NO_STOP));
					model.addGroup(group);
				}

				model.forceInstall();

				LinkedModeUI ui = new EditorLinkedModeUI(model, getTextViewer());
				ui.setExitPosition(getTextViewer(), baseOffset + replacement.length(), 0, Integer.MAX_VALUE);
				ui.setCyclingMode(LinkedModeUI.CYCLE_WHEN_NO_PARENT);
				ui.setDoContextInfo(true);
				ui.enter();
				fSelectedRegion = ui.getSelectedRegion();
			} else {
				fSelectedRegion = new Region(baseOffset + getCursorPosition(), 0);
			}

		} catch (BadLocationException e) {
			ensurePositionCategoryRemoved(document);
			PHPUiPlugin.log(e);
			openErrorDialog(e);
		} catch (BadPositionCategoryException e) {
			ensurePositionCategoryRemoved(document);
			PHPUiPlugin.log(e);
			openErrorDialog(e);
		}
	}

