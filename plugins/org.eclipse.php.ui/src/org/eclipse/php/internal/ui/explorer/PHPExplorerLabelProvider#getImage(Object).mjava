	@Override
	public Image getImage(Object element) {
		IModelElement modelElement = null;
		if (element instanceof ExternalProjectFragment) {
			return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_LIBRARY);
		}

		if (element instanceof IncludePath) {
			Object entry = ((IncludePath) element).getEntry();

			// An included PHP project
			if (entry instanceof IBuildpathEntry) {
				int entryKind = ((IBuildpathEntry) entry).getEntryKind();
				if (entryKind == IBuildpathEntry.BPE_PROJECT) {
					return PHPPluginImages
							.get(PHPPluginImages.IMG_OBJS_PHP_PROJECT);

				}
				// A library
				if (entryKind == IBuildpathEntry.BPE_LIBRARY
						|| entryKind == IBuildpathEntry.BPE_CONTAINER) {
					return PHPPluginImages
							.get(PHPPluginImages.IMG_OBJS_LIBRARY);
				}
			}

			if (entry instanceof ExternalProjectFragment) {
				return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_LIBRARY);
			}

			// Folder in the include path, should have same image as in the PHP
			// Explorer .
			if (entry instanceof IFolder) {
				IModelElement createdScriptFolder = DLTKCore
						.create((IFolder) entry);
				if (null == createdScriptFolder)
					return getImage(entry);
				return getImage(createdScriptFolder);
			}

			if (entry instanceof IResource) {
				return (getImage((IResource) entry));

			}
			return null;
		}

		if (element instanceof IResource) {
			modelElement = DLTKCore.create((IResource) element);
		} else if (element instanceof IModelElement) {
			modelElement = (IModelElement) element;
		}

		if (modelElement != null) {
			IScriptProject project = modelElement.getScriptProject();
			if (!project.isOnBuildpath(modelElement)) {// not in build path,
				// hence: hollow,
				// non-pakg icons
				if (modelElement.getElementType() == IModelElement.SOURCE_MODULE)
					return PHPPluginImages
							.get(PHPPluginImages.IMG_OBJS_CUNIT_RESOURCE);
				if (modelElement.getElementType() == IModelElement.PROJECT_FRAGMENT
						|| modelElement.getElementType() == IModelElement.SCRIPT_FOLDER)
					return PHPPluginImages
							.get(PHPPluginImages.IMG_OBJS_PHP_FOLDER);
			} else {// in build path ...
				if (modelElement.getElementType() == IModelElement.PROJECT_FRAGMENT
						|| modelElement.getElementType() == IModelElement.SCRIPT_FOLDER
						|| element instanceof IFolder) {
					LibraryFolderManager lfm = LibraryFolderManager
							.getInstance();
					if (lfm.isInLibraryFolder(modelElement.getResource())) {
						return PHPPluginImages
								.get(PHPPluginImages.IMG_OBJS_PHP_LIBFOLDER);
					} else {
						return PHPPluginImages
								.get(PHPPluginImages.IMG_OBJS_PHPFOLDER_ROOT);
					}
				}
			}
		}

		if (element != null) {
			for (ILabelProvider provider : TreeContentProviderRegistry
					.getInstance().getLabelProviders()) {
				Image image = provider.getImage(element);

				if (image != null) {
					return image;
				}
			}
		}

		return super.getImage(element);
	}

