	@Override
	public Image getImage(Object element) {
		IModelElement modelElement = null;
		if (element instanceof ExternalProjectFragment) {
			return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_LIBRARY);
		}
		
		if (element instanceof IncludePath){
			Object entry = ((IncludePath)element).getEntry();
			
			// An included PHP project
			if (entry instanceof IBuildpathEntry) {
				if (((IBuildpathEntry) entry).getEntryKind() == IBuildpathEntry.BPE_PROJECT) {
					return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_PHP_PROJECT);

				}
				// A library
				if (((IBuildpathEntry) entry).getEntryKind() == IBuildpathEntry.BPE_LIBRARY) {
					return DLTKPluginImages.get(DLTKPluginImages.IMG_OBJS_EXTJAR_WSRC);
				}
			}

			if (entry instanceof ExternalProjectFragment) {
				return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_LIBRARY) ; 
			}

			if (entry instanceof IResource) {
				return (  getImage((IResource) entry)) ;
				
			}
			return null;
		}
		
		if (element instanceof IResource) {
			modelElement = DLTKCore.create((IResource) element);
		}
		if (element instanceof IScriptFolder) {
			return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_PHPFOLDER_ROOT);
		}

		if (modelElement != null) {
			IScriptProject project = modelElement.getScriptProject();
			if (modelElement instanceof ISourceModule && !project.isOnBuildpath(modelElement)) {
				return PHPPluginImages.get(PHPPluginImages.IMG_OBJS_CUNIT_RESOURCE);
			}
			if ((modelElement instanceof IProjectFragment || modelElement instanceof IScriptFolder) && project.isOnBuildpath(modelElement)) {
				return DLTKPluginImages.get(DLTKPluginImages.IMG_OBJS_PACKAGE);
			}
		}

		return super.getImage(element);
	}

