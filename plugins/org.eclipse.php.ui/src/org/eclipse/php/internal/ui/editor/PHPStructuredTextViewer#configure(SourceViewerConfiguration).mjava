	/**
	 * We override this function in order to use content assist for php and not
	 * use the default one dictated by StructuredTextViewerConfiguration
	 */
	@Override
	public void configure(SourceViewerConfiguration configuration) {

		super.configure(configuration);

		// release old annotation hover before setting new one
		if (fAnnotationHover instanceof StructuredTextAnnotationHover) {
			((StructuredTextAnnotationHover) fAnnotationHover).release();
		}
		// set PHP fAnnotationHover and initial the AnnotationHoverManager
		setAnnotationHover(new PHPStructuredTextAnnotationHover());

		ensureAnnotationHoverManagerInstalled();

		if (!(configuration instanceof PHPStructuredTextViewerConfiguration)) {
			return;
		}
		fViewerConfiguration = configuration;

		PHPStructuredTextViewerConfiguration phpConfiguration = (PHPStructuredTextViewerConfiguration) configuration;
		IContentAssistant newPHPAssistant = phpConfiguration
				.getPHPContentAssistant(this, true);

		// Uninstall content assistant created in super:
		if (fContentAssistant != null) {
			fContentAssistant.uninstall();
		}

		// Assign, and configure our content assistant:
		fContentAssistant = newPHPAssistant;
		if (fContentAssistant != null) {
			fContentAssistant.install(this);
			fContentAssistantInstalled = true;
		} else {
			// 248036 - disable the content assist operation if no content
			// assistant
			enableOperation(CONTENTASSIST_PROPOSALS, false);
		}

		fOutlinePresenter = phpConfiguration.getOutlinePresenter(this);
		if (fOutlinePresenter != null) {
			fOutlinePresenter.install(this);
		}

		fHierarchyPresenter = phpConfiguration
				.getHierarchyPresenter(this, true);
		if (fHierarchyPresenter != null) {
			fHierarchyPresenter.install(this);
		}
	}

