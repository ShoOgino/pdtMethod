	private void updateElements(IWorkingSet[] activeWorkingSets) {
		List result = new ArrayList();
		Set projects = new HashSet();
		for (int i = 0; i < activeWorkingSets.length; i++) {
			if (activeWorkingSets[i] == fWorkingSet)
				continue;
			IAdaptable[] elements = activeWorkingSets[i].getElements();
			for (int j = 0; j < elements.length; j++) {
				IAdaptable element = elements[j];
				IResource resource = (IResource) element.getAdapter(IResource.class);
				if (resource != null && resource.getType() == IResource.PROJECT) {
					projects.add(resource);
				}
			}
		}
		IProject[] allProjects = ResourcesPlugin.getWorkspace().getRoot().getProjects();
		for (int i = 0; i < allProjects.length; i++) {
			try {
				if (!allProjects[i].hasNature(PHPNature.ID)) {
					continue;
				}
			} catch (CoreException e) {
			}
			if (!projects.contains(allProjects[i]))
				result.add(allProjects[i]);
		}
		//		Object[] rProjects= model.getNonPHPResources();
		//		for (int i= 0; i < rProjects.length; i++) {
		//				if (!projects.contains(rProjects[i]))
		//					result.add(rProjects[i]);
		//		}
		fWorkingSet.setElements((IAdaptable[]) result.toArray(new IAdaptable[result.size()]));
	}

