	/**
	 * Actually creates an adapter for the parent of target if target is the
	 * "adapt-able" node
	 */
	@Override
	protected INodeAdapter createAdapter(INodeNotifier target) {

		if (isActive() && target instanceof Node && ((Node) target).getNodeType() == Node.DOCUMENT_NODE) {
			// actually work with the parent node to listen for add,
			// delete events
			final Document document = (Document) target;
			if (document instanceof INodeNotifier) {
				INodeNotifier documentNotifier = (INodeNotifier) document;
				ProjectionModelNodeAdapterPHP documentAdapter = (ProjectionModelNodeAdapterPHP) documentNotifier.getExistingAdapter(ProjectionModelNodeAdapterPHP.class);
				if (documentAdapter == null) {
					// create a new adapter for parent
					documentAdapter = new ProjectionModelNodeAdapterPHP(this);
					documentNotifier.addAdapter(documentAdapter);
				}
				// call update on parent because a new node has just been
				// added
				documentAdapter.updateAdapter(document);
			}
		}

		return null;
	}

