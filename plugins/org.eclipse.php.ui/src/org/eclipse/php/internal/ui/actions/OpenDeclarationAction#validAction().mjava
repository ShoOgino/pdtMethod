	private boolean validAction() {
		ITextEditor editor= getTextEditor();
		if (editor == null) {
			return false;
		}
		IDocumentProvider docProvider= editor.getDocumentProvider();
		IEditorInput input= editor.getEditorInput();
		if (docProvider == null || input == null) {
			return false;
		}
		IDocument document= docProvider.getDocument(input);
		if (document == null) {
			return false;
		}
		if (!(document instanceof IStructuredDocument)) {
			return false;
		}
		
		ITextSelection currentSelection = getCurrentSelection();
		int offset = currentSelection.getOffset();
		IStructuredDocument structuredDocument = (IStructuredDocument)document;
		String partitionType;
		try {
			partitionType = structuredDocument.getPartition(offset).getType();
		} catch (BadLocationException e1) {
			Logger.logException(e1);
			return false;
		}
		if (!partitionType.equals(PHPPartitionTypes.PHP_DEFAULT)) {
			return false;
		}
		
		IStructuredDocumentRegion structuredDocumentRegion = structuredDocument.getRegionAtCharacterOffset(offset);
		
		ITextRegion textRegion = structuredDocumentRegion.getRegionAtCharacterOffset(offset);
		if (textRegion == null) {
			return false;
		}
		
		offset = textRegion.getEnd() + structuredDocumentRegion.getStartOffset();
		
		StructuredTextEditor structuredTextEditor = (StructuredTextEditor)editor;
		try {
			fCodeData = CodeDataResolver.getCodeData(structuredTextEditor.getTextViewer(), offset);
		} catch (BadLocationException e) {
			Logger.logException(e);
			return false;
		}
		if (fCodeData == null) {
			return false;
		}
		if (fCodeData.getUserData() == null) {
			return false;
		}
		return true;
	}

