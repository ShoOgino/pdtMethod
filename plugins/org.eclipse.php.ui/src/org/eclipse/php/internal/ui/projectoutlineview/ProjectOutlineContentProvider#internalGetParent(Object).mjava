	protected Object internalGetParent(final Object element) {
		if (!fIsFlatLayout && element instanceof IScriptFolder) {
			return getHierarchicalPackageParent((IScriptFolder) element);
		} else if (element instanceof IProjectFragment) {
			// since we insert logical package containers we have to fix
			// up the parent for package fragment roots so that they refer
			// to the container and containers refer to the project
			IProjectFragment root = (IProjectFragment) element;

			try {
				IBuildpathEntry entry = root.getRawBuildpathEntry();
				if (entry != null) {
					int entryKind = entry.getEntryKind();
					if (entryKind == IBuildpathEntry.BPE_CONTAINER) {
						return new BuildPathContainer(root.getScriptProject(), entry);
					} else if (fShowLibrariesNode && (entryKind == IBuildpathEntry.BPE_LIBRARY /*
																																																																							 * ||
																																																																							 * entryKind ==
																																																																							 * IBuildpathEntry.BPE_VARIABLE
																																																																							 */)) {
						return new LibraryContainer(root.getScriptProject());
					}
				}
			} catch (ModelException e) {
				// fall through
			}
		} else if (element instanceof ProjectFragmentContainer) {
			return ((ProjectFragmentContainer) element).getScriptProject();
		}
		return super.internalGetParent(element);
	}

