	private void process(IInvocationContext context, IProblemLocation problem, Collection proposals)
			throws CoreException {
		if (!(problem.getProblemIdentifier() instanceof PhpProblemIdentifier))
			return;

		PhpProblemIdentifier id = (PhpProblemIdentifier) problem.getProblemIdentifier();
		switch (id) {
		case AbstractMethodInAbstractClass:
		case BodyForAbstractMethod:
			ModifierCorrectionSubProcessor.addAbstractMethodProposals(context, problem, proposals);
			break;
		case AbstractMethodsInConcreteClass:
			ModifierCorrectionSubProcessor.addAbstractTypeProposals(context, problem, proposals);
			break;
		case MethodRequiresBody:
			ModifierCorrectionSubProcessor.addMethodRequiresBodyProposals(context, problem, proposals);
			break;
		default:
			return;
		}
	}

