		public static Element createElement(Element container, PHPCodeData codeData, int index) {
			Element element = null;

			// file element
			if (codeData instanceof PHPFileData) {
				element = new Element(ElementType.FILE, codeData.getName(), 0);

				// class element
			} else if (codeData instanceof PHPClassData) {
				element = new Element(container, ElementType.CLASS, codeData.getName(), getLength(codeData), index);

			} else if (codeData instanceof PHPFunctionData) {
				// method element
				if (container.type == ElementType.FILE) {
					element = new Element(container, ElementType.FUNCTION, codeData.getName(), getLength(codeData), index);
				} else {
					// function element
					element = new Element(container, ElementType.METHOD, codeData.getName(), getLength(codeData), index);
				}

				// field element
			} else if (codeData instanceof PHPClassVarData) {
				element = new Element(container, ElementType.FIELD, codeData.getName(), getLength(codeData), index);

				// class constant
			} else if (codeData instanceof PHPClassConstData) {
				assert container != null;
				element = new Element(container, ElementType.CONSTANT, codeData.getName(), getLength(codeData), index);
			} else {
				throw new IllegalStateException("Internal Error: CodeData is not supported as folded element"); //$NON-NLS-1$
			}

			return element;
		}

