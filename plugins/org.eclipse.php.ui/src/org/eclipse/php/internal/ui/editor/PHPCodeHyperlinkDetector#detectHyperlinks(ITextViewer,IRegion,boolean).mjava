	/*
	 * @see org.eclipse.jface.text.hyperlink.IHyperlinkDetector#detectHyperlinks(org.eclipse.jface.text.ITextViewer, org.eclipse.jface.text.IRegion, boolean)
	 */
	public IHyperlink[] detectHyperlinks(ITextViewer textViewer, IRegion region, boolean canShowMultipleHyperlinks) {
		if (region == null || canShowMultipleHyperlinks)
			return null;

		try {
			IDocument document = textViewer.getDocument();
			if (document instanceof IStructuredDocument) {
				IStructuredDocument sDoc = (IStructuredDocument) document;
				IStructuredDocumentRegion sdRegion = sDoc.getRegionAtCharacterOffset(region.getOffset());
				ITextRegion textRegion = sdRegion.getRegionAtCharacterOffset(region.getOffset());
				if (PHPPartitionTypes.PHP_QUOTED_STRING.equals(fTextPartitioner.getPartitionType(textRegion, region.getOffset()))) {
					ITextRegion prevRegion = sdRegion.getRegionAtCharacterOffset(sdRegion.getStartOffset() + textRegion.getStart() - 1);
					if (prevRegion != null) {
						prevRegion = sdRegion.getRegionAtCharacterOffset(sdRegion.getStartOffset() + prevRegion.getStart() - 1);
						if (prevRegion != null && isIncludeType(prevRegion.getType())) {
							String fileName = sdRegion.getText(textRegion);
							Matcher quotesMatcher = QUOTES_PATTERN.matcher(fileName);
							fileName = quotesMatcher.replaceAll("");
							IPath path = new Path(fileName);
							IWorkbenchPage page = PHPUiPlugin.getActivePage();
							if (page != null) {
								IEditorPart editor = page.getActiveEditor();
								final PHPStructuredEditor phpEditor = EditorUtility.getPHPStructuredEditor(editor);
								if (phpEditor != null) {
									IFile currentFile = phpEditor.getFile();
									IProject currentProject = currentFile.getProject();
									IFile file = currentProject.getFile(path);
									if (file != null && file.exists()) {
										return new IHyperlink[] { new WorkspaceFileHyperlink(new Region(sdRegion.getStartOffset(textRegion), textRegion.getTextLength()), file) };
									}
								}
							}
							// look into other projects
							IWorkspace workspace = ResourcesPlugin.getWorkspace();
							IWorkspaceRoot root = workspace.getRoot();
							IProject[] projects = root.getProjects();
							for (int i = 0; i < projects.length; ++i) {
								IFile file = projects[i].getFile(path);
								if (file != null && file.exists()) {
									return new IHyperlink[] { new WorkspaceFileHyperlink(new Region(sdRegion.getStartOffset(textRegion), textRegion.getTextLength()), file) };
								}
							}
							
							// Try to open external file:
							File file = new File(fileName);
							if (file.exists()) {
								return new IHyperlink[] { new ExternalFileHyperlink(new Region(sdRegion.getStartOffset(textRegion), textRegion.getTextLength()), file) };
							}
						}
					}
				} else {
					CodeData codeData = CodeDataResolver.getCodeData(textViewer, region.getOffset());
					if (codeData != null && codeData.isUserCode()) {
						return new IHyperlink[] { new PHPCodeHyperLink(selectWord(document, region.getOffset()), codeData) };
					}
				}
			}
		} catch (Exception e) {
			return null;
		}
		return null;
	}

