	private PHPCodeData getClosestCodeDataFromClass(IStructuredDocument document, PHPClassData classData, int offset, int skippedAreaEndoffset) {
		PHPCodeData closestCodeData = null;
		int closestCodeDataOffset = document.getLength();

		PHPFunctionData functions[] = classData.getFunctions();

		for (PHPFunctionData functionData : functions) {
			int startOffset = functionData.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = functionData.getUserData().getEndPosition();
				if (endOffset > offset) {
					return null;
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = functionData;
				}
			}
		}
		PHPClassConstData constants[] = classData.getConsts();

		for (PHPClassConstData constant : constants) {
			int startOffset = constant.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = constant.getUserData().getEndPosition();
				if (endOffset > offset) {
					return null;
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = constant;
				}
			}
		}

		PHPClassVarData vars[] = classData.getVars();

		for (PHPClassVarData var : vars) {
			int startOffset = var.getUserData().getStartPosition();
			if (startOffset < offset) {
				int endOffset = var.getUserData().getEndPosition();
				if (endOffset > offset) {
					return null;
				}
			} else {
				if (startOffset < closestCodeDataOffset) {
					closestCodeDataOffset = startOffset;
					closestCodeData = var;
				}
			}
		}

		if (closestCodeData != null && isNoCodeBetween(document, skippedAreaEndoffset, closestCodeDataOffset)) {
			return closestCodeData;
		}
		return null;
	}

