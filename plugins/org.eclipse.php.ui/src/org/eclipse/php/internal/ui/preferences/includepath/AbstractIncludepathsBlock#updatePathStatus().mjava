	/**
	 * Validates the build path.
	 */
	@Override
	public void updatePathStatus() {
		fPathStatus.setOK();
		List<BPListElement> elements = fBuildPathList.getElements();
		BPListElement entryMissing = null;
		int nEntriesMissing = 0;

		BPListElement entryInvalid = null;
		int nEntriesInvalid = 0;

		IBuildpathEntry[] entries = new IBuildpathEntry[elements.size()];
		for (int i = elements.size() - 1; i >= 0; i--) {
			BPListElement currElement = elements.get(i);

			entries[i] = currElement.getBuildpathEntry();
			if (currElement.isMissing()) {
				nEntriesMissing++;
				if (entryMissing == null) {
					entryMissing = currElement;
				}
			} else if (PharUIUtil.isInvalidPharBuildEntry(currElement)) {
				nEntriesInvalid++;
				if (entryInvalid == null) {
					entryInvalid = currElement;
				}
			}

		}
		if (nEntriesMissing > 0) {
			if (nEntriesMissing == 1 && entryMissing != null) {
				fPathStatus.setWarning(Messages.format(NewWizardMessages.BuildPathsBlock_warning_EntryMissing,
						entryMissing.getPath().toString()));
			} else {
				fPathStatus.setWarning(Messages.format(NewWizardMessages.BuildPathsBlock_warning_EntriesMissing,
						String.valueOf(nEntriesMissing)));
			}
		}
		if (nEntriesInvalid > 0) {
			if (nEntriesInvalid == 1 && entryInvalid != null) {
				fPathStatus.setError(Messages.format(IncludePathMessages.BuildPathsBlock_warning_EntryInvalid,
						entryInvalid.getPath().toString()));
			} else {
				fPathStatus.setError(Messages.format(IncludePathMessages.BuildPathsBlock_warning_EntriesInvalid,
						String.valueOf(nEntriesInvalid)));
			}
		}

		updateBuildPathStatus();
	}

