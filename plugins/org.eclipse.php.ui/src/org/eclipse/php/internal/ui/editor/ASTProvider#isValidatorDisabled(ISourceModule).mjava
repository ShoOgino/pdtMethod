	private boolean isValidatorDisabled(ISourceModule javaElement) {
		if (ValidationFramework.getDefault().isSuspended()) {
			return true;
		} else if (javaElement.getResource() != null) {
			final IResource resource = javaElement.getResource();
			if (!resource.getProject().isAccessible()) {
				return true;
			} else if (ValidationFramework.getDefault().isSuspended(resource.getProject())) {
				return true;
			} else if (ValidationFramework.getDefault().getProjectSettings(resource.getProject()).getSuspend()) {
				return true;
			} else if (ModelManager.getExternalManager().getExternalFoldersProject()
					.equals(javaElement.getScriptProject())) {
				return false;
			}
			Set<Validator> validators = ValidationFramework.getDefault().getDisabledValidatorsFor(resource);
			for (Validator v : validators) {
				if (v.getId().equals(PhpReconcilingStrategy.ID)) {
					return true;
				}

			}
		}
		return false;
	}

