	private void removeEntry() {
		List selElements = fProjectsList.getSelectedElements();
		for (int i = selElements.size() - 1; i >= 0; i--) {
			Object elem = selElements.get(i);
			if (elem instanceof BPListElementAttribute) {
				BPListElementAttribute attrib = (BPListElementAttribute) elem;
				String key = attrib.getKey();
				Object value = null;
				if (key.equals(BPListElement.ACCESSRULES)) {
					value = new IAccessRule[0];
				}
				attrib.getParent().setAttribute(key, value);
				selElements.remove(i);
			}
		}
		if (selElements.isEmpty()) {
			fProjectsList.refresh();
			fBuildpathList.dialogFieldChanged(); // validate
		} else {

			// also remove library entry from build path
			for (Iterator iterator = selElements.iterator(); iterator.hasNext();) {
				BPListElement entry = (BPListElement) iterator.next();
				try {
					BuildPathUtils.removeEntryFromBuildPath(fCurrJProject, entry.getBuildpathEntry());
				} catch (ModelException e) {
					PHPCorePlugin.log(e);
				}
			}
			fProjectsList.removeElements(selElements);
		}
	}

