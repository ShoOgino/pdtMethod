		/**
		 * Ignore the delta if there are errors on the caret line.
		 * <p>
		 * We don't ignore the delta if an import is added and the
		 * caret isn't inside the import container.
		 * </p> 
		 *  
		 * @param ast the compilation unit AST
		 * @param delta the Java element delta for the given AST element
		 * @return <code>true</code> if the delta should be ignored
		 * @since 3.3
		 */
		private boolean shouldIgnoreDelta(IModelElement ast, IModelElementDelta delta) {
			if (ast == null)
				return false; // can't compute

			final IFile resource = (IFile) ast.getResource();

			IDocument document = getDocument();
			if (document == null)
				return false; // can't compute

			PHPStructuredEditor editor = fEditor;
			if (editor == null || editor.getCachedSelectedRange() == null)
				return false; // can't compute

			int caretLine = 0;
			try {
				caretLine = document.getLineOfOffset(editor.getCachedSelectedRange().x) + 1;
			} catch (BadLocationException x) {
				return false; // can't compute
			}

			if (caretLine > 0) {
				try {
					IMarker[] problems = resource.findMarkers(DefaultProblem.MARKER_TYPE_PROBLEM, false, IResource.DEPTH_INFINITE);
					for (int i = 0; i < problems.length; i++) {
						final IMarker marker = problems[i];
						final boolean isInCaret = isCaretLine(caretLine, IMarker.LINE_NUMBER, marker);
						final boolean isSyntaxError = isCaretLine(IMarker.SEVERITY_ERROR, IMarker.SEVERITY, marker);
						if (isSyntaxError && isInCaret) {
							return true;
						}
					}

				} catch (CoreException e) {
					return false;
				}
			}
			return false;
		}

