		private void computeQualifiedNameMatches(IProgressMonitor pm) throws ModelException {
			if (!fUpdateQualifiedNames) {
				return;
			}
			IScriptFolder destination = getDestinationAsScriptFolder();
			if (destination != null) {
				ISourceModule[] cus = getCus();
				pm.beginTask("", cus.length); //$NON-NLS-1$
				pm.subTask(RefactoringCoreMessages.MoveRefactoring_scanning_qualified_names);
				for (int i = 0; i < cus.length; i++) {
					ISourceModule cu = cus[i];
					IType[] types = cu.getTypes();
					IProgressMonitor typesMonitor = new SubProgressMonitor(pm, 1);
					typesMonitor.beginTask("", types.length); //$NON-NLS-1$
					for (int j = 0; j < types.length; j++) {
						handleType(types[j], destination, new SubProgressMonitor(typesMonitor, 1));
						if (typesMonitor.isCanceled()) {
							throw new OperationCanceledException();
						}
					}
					typesMonitor.done();
				}
			}
			pm.done();
		}

