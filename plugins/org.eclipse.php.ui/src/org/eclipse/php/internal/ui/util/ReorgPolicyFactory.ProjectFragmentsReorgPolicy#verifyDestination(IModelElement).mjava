		@Override
		protected RefactoringStatus verifyDestination(IModelElement modelElement) throws ModelException {
			Assert.isNotNull(modelElement);
			if (!modelElement.exists())
				return RefactoringStatus.createFatalErrorStatus(RefactoringCoreMessages.ReorgPolicyFactory_cannot1);
			if (modelElement instanceof IScriptModel)
				return RefactoringStatus.createFatalErrorStatus(RefactoringCoreMessages.ReorgPolicyFactory_jmodel);
			if (!(modelElement instanceof IScriptProject || modelElement instanceof IProjectFragment
					|| modelElement instanceof IScriptFolder))
				return RefactoringStatus.createFatalErrorStatus(RefactoringCoreMessages.ReorgPolicyFactory_src2proj);
			if (modelElement.isReadOnly())
				return RefactoringStatus
						.createFatalErrorStatus(RefactoringCoreMessages.ReorgPolicyFactory_src2writable);
			// if
			// (ReorgUtils.isProjectFragment(modelElement.getScriptProject()))
			// // TODO: adapt message to archives:
			// return RefactoringStatus
			// .createFatalErrorStatus(RefactoringCoreMessages.ReorgPolicyFactory_src2nosrc);
			return new RefactoringStatus();
		}

