	private Composite createFormaterContent(Composite parent) {
		Group formattingComposite = createComposite(parent, 2);
		final String[] tabPolicyLabels = new String[] { PHPUIMessages.PHPFormatterConfigurationBlock_tabsLabel,
				PHPUIMessages.PHPFormatterConfigurationBlock_spacesLabel };
		Label indentTabsLabel = new Label(formattingComposite, SWT.NULL);
		indentTabsLabel.setText(PHPUIMessages.PHPFormatterConfigurationBlock_tabPolicyLabel);
		tabPolicyCombo = new Combo(formattingComposite, SWT.NULL | SWT.READ_ONLY);
		tabPolicyCombo.setItems(tabPolicyLabels);
		tabPolicyCombo.select(0);

		GridData gd = new GridData();
		gd.widthHint = 20;

		Label indentSizeLabel = new Label(formattingComposite, SWT.NULL);
		indentSizeLabel.setText(PHPUIMessages.PHPFormatterConfigurationBlock_indentSizeLabel);
		indentSizeTxt = new Text(formattingComposite, SWT.BORDER);
		indentSizeTxt.setTextLimit(2);
		indentSizeTxt.setLayoutData(gd);

		gd = new GridData();
		gd.widthHint = 20;

		Label tabSizeLabel = new Label(formattingComposite, SWT.NULL);
		tabSizeLabel.setText(PHPUIMessages.PHPFormatterConfigurationBlock_tabSizeLabel);
		tabSizeTxt = new Text(formattingComposite, SWT.BORDER);
		tabSizeTxt.setTextLimit(2);
		tabSizeTxt.setLayoutData(gd);

		gd = new GridData();
		gd.widthHint = 20;

		Label indentWrapLineSize = new Label(formattingComposite, SWT.NULL);
		indentWrapLineSize.setText(PHPUIMessages.PHPFormatterConfigurationBlock_indentWrapLineSizeLabel);
		fDefaultIndentWrapLineSizeTxt = new Text(formattingComposite, SWT.BORDER);
		fDefaultIndentWrapLineSizeTxt.setTextLimit(2);
		fDefaultIndentWrapLineSizeTxt.setLayoutData(gd);

		Label indentArrayInitSize = new Label(formattingComposite, SWT.NULL);
		indentArrayInitSize.setText(PHPUIMessages.PHPFormatterConfigurationBlock_indentArrayInitSizeLabel);
		fDefaultIndentArrayInitSizeTxt = new Text(formattingComposite, SWT.BORDER);
		fDefaultIndentArrayInitSizeTxt.setTextLimit(2);
		fDefaultIndentArrayInitSizeTxt.setLayoutData(gd);

		tabPolicyCombo.addSelectionListener(new SelectionListener() {

			public void widgetDefaultSelected(SelectionEvent e) {
				// TODO Auto-generated method stub

			}

			public void widgetSelected(SelectionEvent e) {
				Combo source = (Combo) e.getSource();
				int selectIndex = source.getSelectionIndex();
				if (selectIndex == 1) { // select 'Spaces'
					indentSizeTxt.setEnabled(true);
				} else {// select 'Tabs'
					indentSizeTxt.setEnabled(false);
					indentSizeTxt.setText("1"); //$NON-NLS-1$
				}
			}
		});

		indentSizeTxt.addModifyListener(this);
		tabSizeTxt.addModifyListener(this);
		fDefaultIndentWrapLineSizeTxt.addModifyListener(this);
		fDefaultIndentArrayInitSizeTxt.addModifyListener(this);
		tabPolicyCombo.addSelectionListener(this);

		initValues();
		updateValues();

		return formattingComposite;
	}

