	/**
	 * Deletes the direct children of <code>frag</code> corresponding to its
	 * kind (K_SOURCE or K_BINARY), and deletes the corresponding folder if it
	 * is then empty.
	 */
	private void deleteScriptFolder(IScriptFolder frag) throws ModelException {
		IResource res = frag.getResource();
		if (res != null) {
			// collect the children to remove
			IModelElement[] childrenOfInterest = frag.getChildren();
			if (childrenOfInterest.length > 0) {
				IResource[] resources = new IResource[childrenOfInterest.length];
				// remove the children
				for (int i = 0; i < childrenOfInterest.length; i++) {
					resources[i] = childrenOfInterest[i].getCorrespondingResource();
				}
				deleteResources(resources, force);
			}
			// Discard non-java resources
			Object[] nonScriptResources = frag.getForeignResources();
			int actualResourceCount = 0;
			for (int i = 0, max = nonScriptResources.length; i < max; i++) {
				if (nonScriptResources[i] instanceof IResource) {
					actualResourceCount++;
				}
			}
			IResource[] actualNonScriptResources = new IResource[actualResourceCount];
			for (int i = 0, max = nonScriptResources.length, index = 0; i < max; i++) {
				if (nonScriptResources[i] instanceof IResource) {
					actualNonScriptResources[index++] = (IResource) nonScriptResources[i];
				}
			}
			deleteResources(actualNonScriptResources, force);
			// delete remaining files in this package (.class file in the case
			// where Proj=src=bin)
			// IResource[] remainingFiles;
			// try {
			// remainingFiles = ((IContainer) res).members();
			// } catch (CoreException ce) {
			// throw new ModelException(ce);
			// }
			// boolean isEmpty = true;
			// for (int i = 0, length = remainingFiles.length; i < length; i++)
			// {
			// // IResource file = remainingFiles[i];
			// // if (file instanceof IFile ) {
			// // this.deleteResource(file, IResource.FORCE |
			// // IResource.KEEP_HISTORY);
			// // } else {
			// isEmpty = false;
			// // }
			// }
			if (!frag.isRootFolder()/*
									 * don't delete default package's folder:
									 * see
									 * https://bugs.eclipse.org/bugs/show_bug
									 * .cgi?id=38450
									 */) {
				// delete recursively empty folders
				IResource fragResource = frag.getResource();
				if (fragResource != null) {
					deleteEmptyScriptFolder(frag, false, fragResource.getParent());
				}
			}
		}
	}

