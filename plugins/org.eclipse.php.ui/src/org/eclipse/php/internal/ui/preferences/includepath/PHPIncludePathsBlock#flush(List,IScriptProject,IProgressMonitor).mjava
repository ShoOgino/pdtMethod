	/*
	 * Creates the script project and sets the configured build path and output
	 * location. If the project already exists only build paths are updated.
	 */
	public static void flush(List buildpathEntries, IScriptProject javaProject, IProgressMonitor monitor) throws CoreException, OperationCanceledException {
		if (monitor == null) {
			monitor = new NullProgressMonitor();
		}
		monitor.setTaskName(NewWizardMessages.BuildPathsBlock_operationdesc_Script);
		monitor.beginTask("", buildpathEntries.size() * 4 + 4); //$NON-NLS-1$
		try {
			IProject project = javaProject.getProject();
			IPath projPath = project.getFullPath();
			monitor.worked(1);

			if (monitor.isCanceled()) {
				throw new OperationCanceledException();
			}

			List<IBuildpathEntry> newBuildPathEntries = new ArrayList<IBuildpathEntry>();
			List<IBuildpathEntry> newIncludePathEntries = new ArrayList<IBuildpathEntry>();

			// go over the dialog entries. collect all of the source entries for the include path array 
			// and the rest for the build path array
			for (Iterator<IBuildpathEntry> iter = buildpathEntries.iterator(); iter.hasNext();) {
				BPListElement entry = (BPListElement) iter.next();
				newIncludePathEntries.add(entry.getBuildpathEntry());
				if (entry.getEntryKind() != IBuildpathEntry.BPE_SOURCE) {
					newBuildPathEntries.add(entry.getBuildpathEntry());
				}

				IResource res = entry.getResource();
				if (res instanceof IFolder && entry.getLinkTarget() == null && !res.exists()) {
					CoreUtility.createFolder((IFolder) res, true, true, new SubProgressMonitor(monitor, 1));
				} else {
					monitor.worked(1);
				}
			}
			addEntriesToBuildPath(javaProject, newBuildPathEntries);
			IncludePathManager.getInstance().addEntriesToIncludePath(project, newIncludePathEntries);

		} finally {
			monitor.done();
		}
	}

