	@Override
	protected void removeEntry() {

		// clear the list of all removed elements after window closed.
		fRemovedElements.clear();

		List selElements = fFoldersList.getSelectedElements();
		for (int i = selElements.size() - 1; i >= 0; i--) {
			Object elem = selElements.get(i);
			if (elem instanceof BPListElementAttribute) {
				BPListElementAttribute attrib = (BPListElementAttribute) elem;
				String key = attrib.getKey();
				Object value = null;
				if (key.equals(BPListElement.EXCLUSION)
						|| key.equals(BPListElement.INCLUSION)) {
					value = new Path[0];
				}
				attrib.getParent().setAttribute(key, value);
				selElements.remove(i);
			}
		}
		if (selElements.isEmpty()) {
			fFoldersList.refresh();
			fBuildpathList.dialogFieldChanged(); // validate
		} else {
			for (Iterator iter = selElements.iterator(); iter.hasNext();) {
				BPListElement element = (BPListElement) iter.next();
				if (element.getEntryKind() == IBuildpathEntry.BPE_SOURCE) {

					// for each removed source entry, check if it is part of the
					// include path
					// in case it is, add the entry to the removed elements list
					// and ask the user if he would like to remove it to the
					// include path as well
					if (null != IncludePathManager.isInIncludePath(
							fCurrJProject.getProject(), element.getPath())) {
						// add to removed elements list
						fRemovedElements.add(element);
					}
					List list = BuildpathModifier.removeFilters(element
							.getPath(), fCurrJProject, fFoldersList
							.getElements());
					for (Iterator iterator = list.iterator(); iterator
							.hasNext();) {
						BPListElement modified = (BPListElement) iterator
								.next();
						fFoldersList.refresh(modified);
						fFoldersList.expandElement(modified, 3);
					}
				}
			}
			if (fRemovedElements.size() > 0) {
				fFoldersList.removeElements(fRemovedElements);
				removeFromIncludePath = IncludePathUtils
						.openConfirmationDialog(
								getShell(),
								PHPUIMessages
										.getString("IncludePath.RemoveEntryTitle"), PHPUIMessages.getString("IncludePath.RemoveEntryFromIncludePathMessage")); //$NON-NLS-1$ ////$NON-NLS-2$
				for (IChangeListener listener : removedElementListeners) {
					listener.update(true);
				}
			}
			fFoldersList.removeElements(selElements);
		}
	}

