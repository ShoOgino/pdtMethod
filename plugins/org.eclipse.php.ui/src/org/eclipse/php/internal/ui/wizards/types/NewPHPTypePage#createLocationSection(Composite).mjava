	// the location of where to inject the new element's code
	protected void createLocationSection(Composite parent) {
		final Composite container = new Composite(parent, SWT.NULL);
		container.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));

		final GridLayout layout = new GridLayout();
		layout.numColumns = 3;
		layout.marginHeight = 0;
		layout.marginWidth = 0;

		container.setLayout(layout);

		Label label = new Label(container, SWT.NULL);
		label.setText(Messages.NewPHPTypePage_sourceFolder);

		sourceText = new Text(container, SWT.BORDER | SWT.SINGLE);
		sourceText.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));
		sourceText.setEditable(false);

		// init PHPVersion
		handlePHPVersion();
		sourceText.setText(sourceFolder);
		handlePHPVersion();
		sourceText.addModifyListener(e -> {
			Text textSource = (Text) e.getSource();
			sourceFolder = textSource.getText();
			handlePHPVersion();
			validatePageValues(VALIDATE_SOURCE_FOLDER);
			validatePageValues(VALIDATE_NEW_FILE);
			updateDisabled();
		});

		browseSourceBtn = new Button(container, SWT.PUSH);
		browseSourceBtn.setText(Messages.NewPHPTypePage_browse);
		GridData gd = new GridData();
		gd.verticalAlignment = GridData.BEGINNING;
		gd.widthHint = SWTUtil.getButtonWidthHint(browseSourceBtn);
		browseSourceBtn.setLayoutData(gd);
		browseSourceBtn.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				chooseNewSourceFolder();
				String sourcePath = sourceText.getText();
				if (sourcePath.length() > 0) {
					handlePHPVersion();
				}
				validatePageValues(VALIDATE_SOURCE_FOLDER);
				setDefaultNamespace();
			}
		});

		final Button newFileBtn = new Button(container, SWT.RADIO);
		newFileBtn.setText(Messages.NewPHPTypePage_createNewFile);
		newFileBtn.setSelection(!isInExistingPHPFile);
		newFileBtn.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				if (isInExistingPHPFile) {
					isInExistingPHPFile = false;

					if (TypeWizardConstants.NEW_FILE_DEFAULT_NAME.equals(newFileText.getText())
							|| newFileText.getText().trim().length() == 0) {
						updateNewFilename();
					}

					updateDisabled();
					setDefaultNamespace();
					validatePageValues(VALIDATE_NEW_FILE);
					// fix bug #14458 - Validate existing file
					// In case of switch the radio buttons from 'Add existing
					// file' to 'Create new file' erase the error message.
					validatePageValues(VALIDATE_EXISTING_FILE);
				}
			}
		});

		newFileText = new Text(container, SWT.BORDER | SWT.SINGLE);
		gd = new GridData(GridData.FILL_HORIZONTAL);
		gd.widthHint = 300;
		newFileText.setLayoutData(gd);
		newFileText.addModifyListener(e -> validatePageValues(VALIDATE_NEW_FILE));

		new Label(container, SWT.NULL);

		existingFileBtn = new Button(container, SWT.RADIO);
		existingFileBtn.setText(Messages.NewPHPTypePage_addInExistingFile);
		existingFileBtn.setSelection(isInExistingPHPFile);
		existingFileBtn.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				if (!isInExistingPHPFile) {
					isInExistingPHPFile = true;
					if (existingFile != null) {
						sourceFolder = existingFile.getParent().getFullPath().toOSString();
						sourceText.setText(sourceFolder);
					}
					updateDisabled();
					setDefaultNamespace();
					validatePageValues(VALIDATE_NEW_FILE);
					validatePageValues(VALIDATE_EXISTING_FILE);
					validatePageValues(VALIDATE_SOURCE_FOLDER);
				}
			}

		});

		existingFileText = new Text(container, SWT.BORDER | SWT.SINGLE);
		gd = new GridData(GridData.FILL_HORIZONTAL);
		gd.widthHint = 300;
		existingFileText.setLayoutData(gd);
		existingFileText.setText(existingFileName);
		existingFileText.addModifyListener(e -> {
			validatePageValues(VALIDATE_EXISTING_FILE);
			updateDisabled();
			setDefaultNamespace();
		});

		gd = new GridData(GridData.FILL_HORIZONTAL);
		browseExistingFile = new Button(container, SWT.PUSH);
		browseExistingFile.setText(Messages.NewPHPTypePage_browse);
		gd = new GridData();
		gd.verticalAlignment = GridData.BEGINNING;
		gd.widthHint = SWTUtil.getButtonWidthHint(browseExistingFile);
		browseExistingFile.setLayoutData(gd);

		browseExistingFile.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				openPHPFileDialog();
				validatePageValues(VALIDATE_EXISTING_FILE);
				validatePageValues(VALIDATE_SOURCE_FOLDER);
				updateDisabled();
				setDefaultNamespace();
			}

		});
		// the radio buttons
		new Label(container, SWT.NULL);

		injectLocation = new Composite(container, SWT.NULL);
		GridLayout injectLayout = new GridLayout(2, true);
		injectLocation.setLayout(injectLayout);
		injectLayout.marginHeight = 0;
		injectLayout.marginWidth = 0;

		firstBlockBtn = new Button(injectLocation, SWT.RADIO);
		firstBlockBtn.setText(Messages.NewPHPTypePage_firstPHPBlock);
		firstBlockBtn.setSelection(true);
		Button newPHPBlockBtn = new Button(injectLocation, SWT.RADIO);
		newPHPBlockBtn.setText(Messages.NewPHPTypePage_newPHPBlock);

		new Label(container, SWT.SEPARATOR | SWT.HORIZONTAL)
				.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false, 3, 1));
	}

