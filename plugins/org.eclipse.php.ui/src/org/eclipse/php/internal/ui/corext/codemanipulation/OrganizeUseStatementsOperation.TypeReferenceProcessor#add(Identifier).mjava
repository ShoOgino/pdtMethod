		/**
		 * Tries to find the given type name and add it to the import structure.
		 * 
		 * @param ref
		 *            the name node
		 */
		public void add(Identifier ref) {
			NamespaceDeclaration namespace = fRoot.getNamespaceDeclaration(ref.getStart());
			String typeName = ref.getName();
			String importName = typeName;

			int index = typeName.indexOf(NamespaceReference.NAMESPACE_DELIMITER);
			if (index > 0) {
				importName = typeName.substring(0, index);
				typeName = typeName.substring(index + 1);
			}

			if (fImportsAdded.get(namespace) == null || fImportsAdded.get(namespace).contains(importName)) {
				return;
			}

			IBinding binding = ref.resolveBinding();
			if (binding != null) {
				if (binding.getKind() != IBinding.TYPE) {
					return;
				}
				ITypeBinding typeBinding = ((ITypeBinding) binding).getTypeDeclaration();
				if (typeBinding != null) {
					String alias = null;
					String typeBindingName = typeBinding.getName();
					if (typeBindingName != null) {
						if (typeBindingName.startsWith(NamespaceReference.NAMESPACE_DELIMITER)) {
							typeBindingName = typeBindingName.substring(1);
						}
						int indexOfNs = typeBindingName.lastIndexOf(typeName);
						if (indexOfNs > 0 && !importName.equalsIgnoreCase(typeName)) {
							typeBindingName = typeBindingName.substring(0, indexOfNs);
							if (typeBindingName.endsWith(NamespaceReference.NAMESPACE_DELIMITER)) {
								typeBindingName = typeBindingName.substring(0, typeBindingName.length() - 1);
							}
						}
						String lastSeg = typeBindingName;
						String[] segs = typeBindingName.split("\\\\"); //$NON-NLS-1$
						if (segs.length > 0) {
							lastSeg = segs[segs.length - 1];
						}
						if (!lastSeg.equalsIgnoreCase(importName)) {
							alias = importName;
						}
					}
					fImpStructure.addImport(namespace, typeBindingName, alias);
					fImportsAdded.get(namespace).add(importName);
					return;
				}
			}

			fImportsAdded.get(namespace).add(typeName);
			fUnresolvedTypes.get(namespace).put(typeName, new UnresolvedTypeData(ref));
		}

