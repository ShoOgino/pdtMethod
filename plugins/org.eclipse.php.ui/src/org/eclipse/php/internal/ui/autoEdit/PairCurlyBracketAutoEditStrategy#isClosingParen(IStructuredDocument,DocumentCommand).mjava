	private boolean isClosingParen(IStructuredDocument document, DocumentCommand command) throws BadLocationException {
		// TODO Auto-generated method stub
		int documentLength = document.getLength();
		if (command.offset + command.length == documentLength) { // if we're at
																	// the end
																	// of the
																	// document
																	// then
																	// nothing
																	// to copy
			return false;
		}
		int offset = command.offset;
		IRegion lineInfo = document.getLineInformationOfOffset(offset);
		int endOffset = lineInfo.getOffset() + lineInfo.getLength();
		int lengthToCopyDown = endOffset - offset;

		IStructuredDocumentRegion[] structuredDocumentRegions = document.getStructuredDocumentRegions(offset,
				lengthToCopyDown);
		if (structuredDocumentRegions != null && structuredDocumentRegions.length > 0) {
			IStructuredDocumentRegion structuredDocumentRegion = structuredDocumentRegions[0];
			ITextRegion firstRegion = structuredDocumentRegion.getFirstRegion();
			ITextRegion lastRegion = structuredDocumentRegion.getLastRegion();

			int xmlRelativeOffset = 0;

			// deal with PHP block within HTML tags
			if (!(firstRegion instanceof ContextRegion)) { // meaning
															// "not-PHP-Resgion"
				ITextRegion regionAtCharacterOffset = structuredDocumentRegion.getRegionAtCharacterOffset(offset);
				if (regionAtCharacterOffset instanceof ContextRegionContainer) {
					ContextRegionContainer phpContext = (ContextRegionContainer) regionAtCharacterOffset;
					lastRegion = phpContext.getLastRegion();
					firstRegion = phpContext.getFirstRegion();
					xmlRelativeOffset = firstRegion.getLength();
				}

			}
			int absolutOffset = lastRegion.getStart() + structuredDocumentRegion.getStartOffset() + xmlRelativeOffset;
			if (absolutOffset <= endOffset && offset <= absolutOffset) {
				lengthToCopyDown = absolutOffset - offset;
				;
			}
		}
		String lineEnd = document.get(offset, lengthToCopyDown).trim();
		if (lineEnd.startsWith(")") || lineEnd.startsWith("]")) { //$NON-NLS-1$ //$NON-NLS-2$
			return true;
		}
		return false;
	}

