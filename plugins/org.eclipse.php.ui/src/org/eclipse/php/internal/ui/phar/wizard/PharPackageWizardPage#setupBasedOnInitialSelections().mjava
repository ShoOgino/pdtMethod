	/*
	 * Overrides method from WizardExportResourcePage
	 */
	@Override
	protected void setupBasedOnInitialSelections() {
		Iterator<?> iterator = fInitialSelection.iterator();
		while (iterator.hasNext()) {
			Object selectedElement = iterator.next();

			if (selectedElement instanceof IResource && !((IResource) selectedElement).isAccessible())
				continue;

			if (selectedElement instanceof IModelElement && !((IModelElement) selectedElement).exists())
				continue;

			if (selectedElement instanceof ISourceModule || selectedElement instanceof IFile)
				fInputGroup.initialCheckListItem(selectedElement);
			else {
				if (selectedElement instanceof IFolder) {
					// Convert resource to Java element if possible
					IModelElement je = DLTKCore.create((IResource) selectedElement);
					if (je != null && je.exists() && je.getScriptProject().isOnBuildpath((IResource) selectedElement))
						selectedElement = je;
				}
				try {
					fInputGroup.initialCheckTreeItem(selectedElement);
				} finally {
					fInitiallySelecting = false;
				}
			}
		}

		TreeItem[] items = fInputGroup.getTree().getItems();
		int i = 0;
		while (i < items.length && !items[i].getChecked())
			i++;
		if (i < items.length) {
			fInputGroup.getTree().setSelection(new TreeItem[] { items[i] });
			fInputGroup.getTree().showSelection();
			fInputGroup.populateListViewer(items[i].getData());
		}
	}

