	/**
	 * This method tries to determine PHP manual URL for the specified PHP element
	 * 
	 * @param codeData PHP element code data
	 * @return URL for the manual page
	 */
	public String getURLForManual (PHPCodeData codeData) {
		if (codeData == null) {
			throw new IllegalArgumentException();
		}
		
		String path = null;
		
		PHPDocBlock docBlock = codeData.getDocBlock();
		if (docBlock != null) {
			Iterator i = docBlock.getTags(PHPDocTag.LINK);
			while (i.hasNext()) {
				PHPDocTag docTag = (PHPDocTag)i.next();
				Matcher m = HTTP_URL_PATTERN.matcher(docTag.getValue().trim());
				if (m.find()) {
					try {
						URL url = new URL(m.group());
						path = new File(url.getFile()).getName();
						int extIdx = path.lastIndexOf('.');
						if (extIdx > 0) {
							path = path.substring(0, extIdx);
						}
						break;
					} catch (MalformedURLException e) {
					}
				}
			}
		}

		if (path == null) {
			if (codeData instanceof PHPFunctionData) {
				PHPFunctionData funcData = (PHPFunctionData)codeData;
				PHPCodeData container = funcData.getContainer();
				if (container instanceof PHPClassData) {
					String functionName = container.getName() + "::" + funcData.getName(); //$NON-NLS-1$
					path = (String)getPHPEntityPathMap().get(functionName.toLowerCase());
					if (path == null) {
						path = buildPathForMethod(container.getName(),funcData.getName());
					}
				} else {
					path = (String)getPHPEntityPathMap().get(funcData.getName().toLowerCase());
					if (path == null) {
						path = buildPathForMethod(null,funcData.getName());
					}
				}
			} else if (codeData instanceof PHPKeywordData) {
				path = (String)getPHPEntityPathMap().get(codeData.getName().toLowerCase());
			}
		}
		
		if (path == null) {
			return null;
		}
		
		StringBuffer url = new StringBuffer();
		url.append(site.getUrl());
		if (!site.getUrl().endsWith("/")) { //$NON-NLS-1$
			url.append("/"); //$NON-NLS-1$
		}
		url.append(path);
		url.append("."); //$NON-NLS-1$
		url.append(site.getExtension());
		
		return url.toString();
	}

