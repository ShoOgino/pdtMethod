	/**
	 * Returns the label for a Java element with the flags as defined by {@link ScriptElementLabels}.
	 * @param binding The binding to render.
	 * @param flags The text flags as defined in {@link ScriptElementLabels}
	 * @return the label of the binding
	 */
	public static String getBindingLabel(IBinding binding, long flags) {
		StringBuffer buffer= new StringBuffer(60);
		if (binding instanceof ITypeBinding) {
			getTypeLabel(((ITypeBinding) binding), flags, buffer);
		} else if (binding instanceof IMethodBinding) {
			getMethodLabel(((IMethodBinding) binding), flags, buffer);
		} else if (binding instanceof IVariableBinding) {
			final IVariableBinding variable= (IVariableBinding) binding;
			if (variable.isField())
				getFieldLabel(variable, flags, buffer);
			else
				getLocalVariableLabel(variable, flags, buffer);
		}
		// XXX: uncomment when next DLTK version releases
		return buffer.toString(); // Strings.markLTR(buffer.toString());
	}

