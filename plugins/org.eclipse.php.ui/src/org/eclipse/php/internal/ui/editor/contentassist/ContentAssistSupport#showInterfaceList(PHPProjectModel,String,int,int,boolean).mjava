	protected void showInterfaceList(PHPProjectModel projectModel, String startWith, int offset, int selectionLength, boolean explicit) {
		boolean autoShowClassNames = preferences.getBoolean(PHPCoreConstants.CODEASSIST_AUTOACTIVATION_FOR_CLASS_NAMES);
		if (!explicit && !autoShowClassNames) {
			return;
		}
		CodeData[] classes = projectModel.getClasses();
		ArrayList interfaces = new ArrayList(classes.length / 10);

		for (CodeData element : classes) {
			if (PHPModifier.isInterface(((PHPClassData) element).getModifiers())) {
				interfaces.add(element);
			}
		}
		CodeData[] interfacesArray = new CodeData[interfaces.size()];
		Iterator iter = interfaces.iterator();
		for (int i = 0; i < interfacesArray.length; i++) {
			interfacesArray[i] = (CodeData) iter.next();
		}
		completionProposalGroup = phpCompletionProposalGroup;
		completionProposalGroup.setData(offset, interfacesArray, startWith, selectionLength);
	}

