	public PHPSourceActionDialog(Shell parent, ILabelProvider labelProvider, ITreeContentProvider contentProvider,
			IType type, TextEditor editor) {
		super(parent, labelProvider, contentProvider);
		fEditor = editor;
		fContentProvider = contentProvider;
		fCommentString = Messages.GettersSettersAction_27;
		setEmptyListMessage(Messages.GettersSettersAction_28);

		fWidth = 60;
		fHeight = 18;

		IDialogSettings dialogSettings = PHPUiPlugin.getDefault().getDialogSettings();
		String sectionId = SETTINGS_SECTION_METHODS;
		fSettings = dialogSettings.getSection(sectionId);
		if (fSettings == null) {
			fSettings = dialogSettings.addNewSection(sectionId);
		}

		fInsertPositions = new ArrayList<>();
		fLabels = new ArrayList<>();

		// generate a list of possible insertion locations
		IMethod[] methods = null;
		try {
			methods = type.getMethods();
		} catch (ModelException e1) {
		}

		if (methods == null) {
			return;
		}

		fInsertPositions.add(methods.length > 0 ? methods[0] : null); // first
																		// //$NON-NLS-1$
		fInsertPositions.add(null); // last

		fLabels.add(Messages.GettersSettersAction_29);
		fLabels.add(Messages.GettersSettersAction_30);

		for (int i = 0; i < methods.length; i++) {
			IMethod curr = methods[i];
			StringBuilder methodLabel = new StringBuilder();
			methodLabel.append(curr.getElementName());
			methodLabel.append("("); //$NON-NLS-1$
			String[] param = null;
			try {
				param = curr.getParameterNames();
			} catch (ModelException e) {
				PHPUiPlugin.log(e);
			}
			if (param != null) {
				for (int j = 0; j < param.length; j++) {
					methodLabel.append("$"); //$NON-NLS-1$
					methodLabel.append(param[j]);
					if (j < param.length - 1) {
						methodLabel.append(", "); //$NON-NLS-1$
					}
				}
			}
			methodLabel.append(')');
			fLabels.add(Messages.GettersSettersAction_31 + '\'' + methodLabel.toString() + '\'');

			if (i < methods.length - 1) {
				fInsertPositions.add(methods[i + 1]);
			}
		}
		fInsertPositions.add(null);

		try {
			restoreWidgetsValue(methods);
		} catch (ModelException e) {

		}

	}

