	/**
	 * Create the export options specification widgets.
	 * 
	 * @param parent
	 *            org.eclipse.swt.widgets.Composite
	 */
	protected void createOptionsGroup(Composite parent) {
		Composite optionsGroup = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		layout.marginHeight = 0;
		optionsGroup.setLayout(layout);

		{

			exportTypeGroup = new Composite(optionsGroup, SWT.NONE);
			layout = new GridLayout();
			layout.horizontalSpacing = 0;
			layout.marginWidth = 0;
			layout.marginHeight = 0;
			layout.numColumns = 3;
			exportTypeGroup.setLayout(layout);

			Label label = new Label(exportTypeGroup, SWT.NONE);
			label.setText("export type");
			label.setLayoutData(new GridData(
					GridData.HORIZONTAL_ALIGN_BEGINNING, GridData.CENTER,
					false, false, 3, 1));

			pharCompressRadio = new Button(exportTypeGroup, SWT.RADIO
					| SWT.LEFT);
			pharCompressRadio.setText("phar");
			// pharCompressRadio.setSelection(true);
			pharCompressRadio.addListener(SWT.Selection, this);

			zipCompressRadio = new Button(exportTypeGroup, SWT.RADIO | SWT.LEFT);
			zipCompressRadio.setText("zip");
			zipCompressRadio.addListener(SWT.Selection, this);

			tarCompressRadio = new Button(exportTypeGroup, SWT.RADIO | SWT.LEFT);
			tarCompressRadio.setText("tar");
			tarCompressRadio.addListener(SWT.Selection, this);

		}

		{

			compressTypeGroup = new Composite(optionsGroup, SWT.NONE);
			layout = new GridLayout();
			layout.horizontalSpacing = 0;
			layout.marginWidth = 0;
			layout.marginHeight = 0;
			layout.numColumns = 3;
			compressTypeGroup.setLayout(layout);

			Label label = new Label(exportTypeGroup, SWT.NONE);
			label.setText("compress type");
			label.setLayoutData(new GridData(
					GridData.HORIZONTAL_ALIGN_BEGINNING, GridData.CENTER,
					false, false, 3, 1));

			noneCompressTypePhar = new Button(compressTypeGroup, SWT.RADIO
					| SWT.LEFT);
			noneCompressTypePhar.setText("none");
			// noneCompressTypePhar.setSelection(true);
			noneCompressTypePhar.addListener(SWT.Selection, this);

			bzipCompressTypePhar = new Button(compressTypeGroup, SWT.RADIO
					| SWT.LEFT);
			bzipCompressTypePhar.setText("bz2");
			bzipCompressTypePhar.addListener(SWT.Selection, this);

			zlibCompressTypePhar = new Button(compressTypeGroup, SWT.RADIO
					| SWT.LEFT);
			zlibCompressTypePhar.setText("yes");
			zlibCompressTypePhar.addListener(SWT.Selection, this);
			zlibCompressTypePhar.setLayoutData(new GridData(
					GridData.FILL_HORIZONTAL, GridData.CENTER, true, false, 1,
					1));
		}

		fOverwriteCheckbox = new Button(optionsGroup, SWT.CHECK | SWT.LEFT);
		fOverwriteCheckbox.setText("Overwrite existing files without warning");
		fOverwriteCheckbox.addListener(SWT.Selection, this);

		// fIncludeDirectoryEntriesCheckbox = new Button(optionsGroup, SWT.CHECK
		// | SWT.LEFT);
		// fIncludeDirectoryEntriesCheckbox.setText("A&dd directory entries");
		// fIncludeDirectoryEntriesCheckbox.addListener(SWT.Selection, this);
	}

