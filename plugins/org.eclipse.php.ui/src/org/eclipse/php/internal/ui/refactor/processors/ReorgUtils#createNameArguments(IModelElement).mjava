	private static String[] createNameArguments(IModelElement element) throws ModelException {
		switch (element.getElementType()) {
		case IModelElement.SOURCE_MODULE:
			if (element instanceof ExternalSourceModule) {
				return new String[] { ((ExternalSourceModule) element).getFullPath().toString() };
			} else {
				return new String[] { element.getElementName() };
			}
		case IModelElement.FIELD:
			return new String[] { element.getElementName() };
		// case IModelElement.IMPORT_CONTAINER:
		// return new String[0];
		// case IModelElement.IMPORT_DECLARATION:
		// return new String[]{element.getElementName()};
		case IModelElement.SCRIPT_PROJECT:
			return new String[] { element.getElementName() };
		case IModelElement.METHOD:
			return new String[] { element.getElementName() };
		// case IModelElement.PACKAGE_DECLARATION:
		// if (ScriptElementUtil.isDefaultPackage(element))
		// return new String[0];
		// else
		// return new String[]{element.getElementName()};
		case IModelElement.SCRIPT_FOLDER:
			return new String[] { element.getElementName() };
		case IModelElement.PROJECT_FRAGMENT:
			return new String[] { element.getElementName() };
		case IModelElement.TYPE:
			// IType type= (IType)element;
			// String name= type.getElementName();
			return new String[] { element.getElementName() };
		default:
			Assert.isTrue(false);
			return null;
		}
	}

