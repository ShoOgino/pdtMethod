	/**
	 * Create a projection position from the given node. Able to get projection
	 * position if node isNodeProjectable.
	 * 
	 * @param node
	 * @return null if no projection position possible, a Position otherwise
	 */
	private Position createProjectionPosition(Node node) {
		Position pos = null;
		if (fAdapterFactory.isNodeProjectable(node)
				&& node instanceof IndexedRegion) {
			// IDocument document =
			// fAdapterFactory.getProjectionViewer().getDocument();
			// if (document != null) {
			IndexedRegion inode = (IndexedRegion) node;
			// only want to fold regions of the valid type and with a valid
			// range
			if (inode.getStartOffset() >= 0 && inode.getLength() >= 0) {
				IDOMNode node1 = (IDOMNode) inode;
				IStructuredDocumentRegion startRegion = node1
						.getStartStructuredDocumentRegion();
				IStructuredDocumentRegion endRegion = node1
						.getEndStructuredDocumentRegion();
				// if the node has an endRegion (end tag) then folding region is
				// between the start and end tag
				// else if the region is a comment
				// else if the region is only an open tag or an open/close tag
				// then don't fold it
				if (startRegion != null && endRegion != null) {
					pos = new XMLElementFoldingPosition(startRegion, endRegion);
				} else if (startRegion != null && node instanceof CommentImpl) {
					pos = new XMLCommentFoldingPosition(startRegion);
				}
			}
		}
		// }
		return pos;
	}

