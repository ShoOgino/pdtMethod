	/*
	 * Added the handling of Save Actions (non-Javadoc)
	 * 
	 * @see org.eclipse.wst.sse.ui.StructuredTextEditor#doSave(org.eclipse.core.
	 * runtime .IProgressMonitor)
	 */
	@Override
	public void doSave(IProgressMonitor progressMonitor) {
		if (getDocument() instanceof IStructuredDocument) {
			CommandStack commandStack = ((IStructuredDocument) getDocument()).getUndoManager().getCommandStack();
			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=322529
			((IStructuredDocument) getDocument()).getUndoManager().forceEndOfPendingCommand(null,
					getViewer().getSelectedRange().x, getViewer().getSelectedRange().y);
			if (commandStack instanceof BasicCommandStack) {
				((BasicCommandStack) commandStack).saveIsDone();
			}
		}
		IScriptProject project = getProject();
		if (project != null) {
			updateSaveActionsState(project.getProject());
		}

		if (formatOnSaveEnabled) {
			if (getTextViewer() instanceof PHPStructuredTextViewer) {
				PHPStructuredTextViewer viewer = (PHPStructuredTextViewer) getTextViewer();
				if (viewer.canDoOperation(PHPStructuredTextViewer.FORMAT_DOCUMENT_ON_SAVE)) {
					viewer.doOperation(PHPStructuredTextViewer.FORMAT_DOCUMENT_ON_SAVE);
				}
			}
		}

		if (saveActionsEnabled && getTextViewer() != null && getTextViewer().isEditable()) {
			RemoveTrailingWhitespaceOperation op = new ExtendedRemoveTrailingWhitespaceOperation(
					saveActionsIgnoreEmptyLines);
			try {
				op.run(FileBuffers.getTextFileBufferManager().getTextFileBuffer(getDocument()), progressMonitor);
			} catch (OperationCanceledException e) {
				Logger.logException(e);
			} catch (CoreException e) {
				Logger.logException(e);
			}
		}

		super.doSave(progressMonitor);
	}

