	/**
	 * Shows a dialog for resolving an ambiguous Java element. Utility method that can be called by subclasses.
	 * 
	 * @param elements the elements to select from
	 * @param shell the parent shell
	 * @param title the title of the selection dialog
	 * @param message the message of the selection dialog
	 * @return returns the selected element or <code>null</code> if the dialog has been cancelled
	 */
	public static IModelElement selectJavaElement(IModelElement[] elements, Shell shell, String title, String message) {
		int nResults= elements.length;
		if (nResults == 0)
			return null;
		if (nResults == 1)
			return elements[0];
		
		int flags= ModelElementLabelProvider.SHOW_DEFAULT | ModelElementLabelProvider.SHOW_QUALIFIED | ModelElementLabelProvider.SHOW_ROOT;
						
		ElementListSelectionDialog dialog= new ElementListSelectionDialog(shell, new ModelElementLabelProvider(flags));
		dialog.setTitle(title);
		dialog.setMessage(message);
		dialog.setElements(elements);
		
		if (dialog.open() == Window.OK) {
			return (IModelElement) dialog.getFirstResult();
		}		
		return null;
	}

