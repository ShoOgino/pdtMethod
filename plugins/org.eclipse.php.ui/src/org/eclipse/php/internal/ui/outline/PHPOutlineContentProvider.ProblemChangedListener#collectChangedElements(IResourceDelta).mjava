		private void collectChangedElements(IResourceDelta delta) {
			if ((delta.getFlags() & IResourceDelta.MARKERS) == 0) {
				return;
			}
			IMarkerDelta[] markerDeltas = delta.getMarkerDeltas();
			for (int i = 0; i < markerDeltas.length; i++) {
				if (markerDeltas[i].isSubtypeOf(IMarker.PROBLEM)) {
					Integer charStart = (Integer) markerDeltas[i]
							.getAttribute(IMarker.CHAR_START);
					Integer charEnd = (Integer) markerDeltas[i]
							.getAttribute(IMarker.CHAR_END);

					if (charStart != null && charEnd != null) {
						try {
							IModelElement element = fInput
									.getElementAt(charStart);
							collectToUpdate(element);
						} catch (ModelException e) {
							PHPUiPlugin.log(e);
						}
					}
				}
			}
		}

