	/**
	 * Creates the page's content.
	 */
	public void createControl(Composite parent) {
		initializeDialogUnits(parent);
		readConfiguration();

		Composite result = new Composite(parent, SWT.NONE);

		GridLayout layout = new GridLayout(2, false);
		layout.horizontalSpacing = 10;
		result.setLayout(layout);

		Control expressionComposite = createExpression(result);
		expressionComposite.setLayoutData(new GridData(GridData.FILL, GridData.CENTER, true, false, 2, 1));

		Label separator = new Label(result, SWT.NONE);
		separator.setVisible(false);
		GridData data = new GridData(GridData.FILL, GridData.FILL, false, false, 2, 1);
		data.heightHint = convertHeightInCharsToPixels(1) / 3;
		separator.setLayoutData(data);

		Control searchFor = createSearchFor(result);
		searchFor.setLayoutData(new GridData(GridData.FILL, GridData.FILL, true, false, 1, 1));

		//createParticipants(result);

		SelectionAdapter phpElementInitializer = new SelectionAdapter() {
			public void widgetSelected(SelectionEvent event) {
				if (getSearchFor() == fInitialData.getSearchFor()) {
					fPhpElement = fInitialData.getPHPElement();
				} else {
					fPhpElement = null;
				}
				//				setLimitTo(getSearchFor(), ALL_OCCURRENCES);
				doPatternModified();
			}
		};

		fSearchFor[CLASS].addSelectionListener(phpElementInitializer);
		fSearchFor[FUNCTION].addSelectionListener(phpElementInitializer);
		fSearchFor[CONSTANT].addSelectionListener(phpElementInitializer);

		setControl(result);

		Dialog.applyDialogFont(result);
		// TODO - Attach the help
		//		PlatformUI.getWorkbench().getHelpSystem().setHelp(result, IJavaHelpContextIds.JAVA_SEARCH_PAGE);	
	}

