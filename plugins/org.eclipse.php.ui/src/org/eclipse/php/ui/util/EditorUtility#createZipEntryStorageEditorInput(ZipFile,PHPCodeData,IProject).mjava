	private static ZipEntryStorageEditorInput createZipEntryStorageEditorInput(ZipFile zipFile, PHPCodeData element, IProject project) {
		ZipInputStream is = null;
		ZipEntry ze = null;

		try {
			File f = new File(zipFile.getName());
			is = new ZipInputStream(new FileInputStream(f));
			ze = is.getNextEntry();
			PHPFileData fileData = null;
			if (element instanceof PHPFileData) {
				fileData = (PHPFileData) element;
			} else {
				fileData = PHPModelUtil.getPHPFileContainer((PHPCodeData) element);
			}
			String phpFileName = fileData.getName();

			while (ze != null && !ze.getName().equals(phpFileName)) {
				ze = is.getNextEntry();
			}
			if (ze == null) {
				return null;
			}

			ZipEntryStorage zipEntryStorage = new ZipEntryStorage(zipFile, ze);
			zipEntryStorage.setProject(project);
			return new ZipEntryStorageEditorInput(zipEntryStorage);
		} catch (FileNotFoundException e) {
			Logger.logException(e);
			return null;
		} catch (IOException io) {
			Logger.logException(io);
			return null;
		}
	}

