	private static ZipEntryStorageEditorInput createZipEntryStorageEditorInput(final ZipFile zipFile, final PHPCodeData element, final IProject project) {
		ZipInputStream is = null;
		ZipEntry ze = null;

		try {
			final File f = new File(zipFile.getName());
			is = new ZipInputStream(new FileInputStream(f));
			ze = is.getNextEntry();
			PHPFileData fileData = null;
			if (element instanceof PHPFileData)
				fileData = (PHPFileData) element;
			else
				fileData = PHPModelUtil.getPHPFileContainer(element);
			String phpFileName = fileData.getName();
			phpFileName = phpFileName.substring(phpFileName.indexOf(File.separatorChar) + 1); // removing the name of the zip file from the file name

			while (ze != null && !ze.getName().equals(phpFileName))
				ze = is.getNextEntry();
			if (ze == null)
				return null;

			final ZipEntryStorage zipEntryStorage = new ZipEntryStorage(zipFile, ze);
			zipEntryStorage.setProject(project);
			return new ZipEntryStorageEditorInput(zipEntryStorage);
		} catch (final FileNotFoundException e) {
			Logger.logException(e);
			return null;
		} catch (final IOException io) {
			Logger.logException(io);
			return null;
		}
	}

