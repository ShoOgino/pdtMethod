	/**
	 * Finds a method in a type. This searches for a method with the same name
	 * and signature. Parameter types are only compared by the simple name, no
	 * resolving for the fully qualified type name is done. Constructors are
	 * only compared by parameters, not the name.
	 * 
	 * @param name
	 *            The name of the method to find
	 * @param paramTypes
	 *            The type signatures of the parameters e.g.
	 *            <code>{"QString;","I"}</code>
	 * @param isConstructor
	 *            If the method is a constructor
	 * @param type
	 *            the type
	 * @return The first found method or <code>null</code>, if nothing foun
	 * @throws ModelException
	 *             thrown when the type can not be accessed
	 */
	public static IMethod findMethod(String name, int parameters, boolean isConstructor, IType type)
			throws ModelException {
		IMethod[] methods = type.getMethods();
		for (IMethod method : methods) {
			if (isSameMethodSignature(name, parameters, isConstructor, method)) {
				return method;
			}
		}
		return null;
	}

