	/**
	 * Returns the comment for a setter method using the setter method body
	 * template. <code>null</code> is returned if the template is empty.
	 * <p>
	 * The returned string is unformatted and not indented.
	 * 
	 * @param sp
	 *            The compilation unit to which the method belongs. The compilation
	 *            unit does not need to exist.
	 * @param declaringTypeName
	 *            Name of the type to which the method belongs. For inner types the
	 *            name must be qualified and include the outer types names (dot
	 *            separated). See
	 *            {@link org.eclipse.jdt.core.IType#getTypeQualifiedName(char)}.
	 * @param methodName
	 *            Name of the method.
	 * @param fieldName
	 *            Name of the field that is set.
	 * @param fieldType
	 *            The type of the field that is to set.
	 * @param paramName
	 *            The name of the parameter that used to set.
	 * @param bareFieldName
	 *            The field name without prefix or suffix.
	 * @param lineDelimiter
	 *            The line delimiter to be used.
	 * @return Returns the generated setter comment or <code>null</code> if the code
	 *         template is empty. The returned comment is not indented.
	 * @throws CoreException
	 *             Thrown when the evaluation of the code template fails.
	 * @since 3.0
	 */
	public static String getSetterComment(IScriptProject sp, String declaringTypeName, String methodName,
			String fieldName, String fieldType, String paramName, String bareFieldName, String lineDelimiter)
			throws CoreException {
		return StubUtility.getSetterComment(sp, declaringTypeName, methodName, fieldName, fieldType, paramName,
				bareFieldName, lineDelimiter);
	}

