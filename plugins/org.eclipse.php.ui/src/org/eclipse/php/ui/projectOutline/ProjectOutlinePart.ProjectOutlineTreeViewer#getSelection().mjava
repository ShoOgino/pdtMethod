		public ISelection getSelection() {
			final IContentProvider cp = getContentProvider();
			if (!(cp instanceof IMultiElementTreeContentProvider))
				return super.getSelection();
			final Control control = getControl();
			if (control == null || control.isDisposed() || !control.isVisible())
				return StructuredSelection.EMPTY;
			final Tree tree = getTree();
			final TreeItem[] selection = tree.getSelection();
			final List result = new ArrayList(selection.length);
			final List treePaths = new ArrayList();
			for (int i = 0; i < selection.length; i++) {
				final TreeItem item = selection[i];
				final Object element = getElement(item);
				if (element == null)
					continue;
				if (!result.contains(element))
					result.add(element);
				treePaths.add(createTreePath(item));
			}
			return new MultiElementSelection(this, result, (TreePath[]) treePaths.toArray(new TreePath[treePaths.size()]));
		}

