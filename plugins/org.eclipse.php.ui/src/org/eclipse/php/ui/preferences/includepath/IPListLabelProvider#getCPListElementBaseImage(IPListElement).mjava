	private ImageDescriptor getCPListElementBaseImage(IPListElement cpentry) {
		switch (cpentry.getEntryKind()) {
			case IIncludePathEntry.IPE_SOURCE:
				if (cpentry.getPath().segmentCount() == 1) {
					return fProjectImage;
				} else {
					return fFolderImage;
				}
			case IIncludePathEntry.IPE_LIBRARY:
			case IIncludePathEntry.IPE_JRE:
				IResource res = cpentry.getResource();
				if (res == null) {
					if(cpentry.getContentKind() == IIncludePathEntry.K_BINARY){
						return fExtZipIcon;
					} else {
						return fContainerImage;
					}
				} else if (res instanceof IFile) {
					return fZipIcon;
				} else {
					return fFolderImage;
				}
			case IIncludePathEntry.IPE_PROJECT:
				return fProjectImage;
			case IIncludePathEntry.IPE_VARIABLE:
				return fVariableImage;
			case IIncludePathEntry.IPE_CONTAINER:
				return fContainerImage;
			default:
				return null;
		}
	}

