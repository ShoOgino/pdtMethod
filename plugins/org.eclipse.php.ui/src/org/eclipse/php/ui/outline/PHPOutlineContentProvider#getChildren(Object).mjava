	public Object[] getChildren(final Object object) {
		if (object instanceof PHPElementImpl && mode == MODE_MIXED) {
			final ArrayList list = getPHPChildren((PHPElementImpl) object);
			return list.toArray();
		} else if (object instanceof PHPCodeData)
			return phpContentProvider.getChildren(object);
		else if (object instanceof PHPEditorModel && mode == MODE_PHP) {
			final PHPEditorModel editorModel = (PHPEditorModel) object;
			final PHPFileData fileData = editorModel.getFileData();
			if (showGroups) {
				final Object[] nodes = { new GroupNode(GROUP_CLASSES, "classes", fileData), new GroupNode(GROUP_FUNCTIONS, "functions", fileData), new GroupNode(GROUP_CONSTANTS, "constants", fileData), new GroupNode(GROUP_INCLUDES, "include files", fileData) };
				return nodes;
			}
			final Object[] providerChildren = phpContentProvider.getChildren(fileData);
			final Object[] children = new Object[providerChildren.length + 1];
			System.arraycopy(providerChildren, 0, children, 1, providerChildren.length);
			children[0] = new GroupNode(GROUP_INCLUDES, "include files", fileData);
			return children;
		} else if (object instanceof GroupNode)
			return ((GroupNode) object).getChildren();
		else if (object instanceof PHPTreeNode)
			return ((PHPTreeNode) object).getChildren();
		return super.getChildren(object);
	}

