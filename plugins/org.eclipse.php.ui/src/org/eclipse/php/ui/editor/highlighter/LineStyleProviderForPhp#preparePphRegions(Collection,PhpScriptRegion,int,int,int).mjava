	/**
	 * Prepares php regions to the line highliter
	 * @param holdResults - results
	 * @param region - php region
	 * @param partitionLength 
	 * @param partitionStartOffset 
	 */
	private boolean preparePphRegions(Collection holdResults, PhpScriptRegion region, int regionStart, int partitionStartOffset, int partitionLength) {
		assert region.getType() == PHPRegionContext.PHP_CONTENT;

		StyleRange styleRange = null;
		TextAttribute attr;
		TextAttribute previousAttr = null;

		final int partitionEndOffset = partitionStartOffset + partitionLength - 1;
		
		final PhpTokenContainer phpTokenContainer = region.tokensContaier;
		final List tokens = phpTokenContainer.getTokens();
		
		for (Iterator iter = tokens.iterator(); iter.hasNext();) {
			ITextRegion element = (ITextRegion) iter.next();

			// check for end of proocess or regions that should not be colored
			final int startOffset = regionStart + element.getStart();
			if (startOffset > partitionEndOffset)
				break;
			if (startOffset + element.getLength() <= partitionStartOffset)
				continue;
			
			attr = getAttributeFor(element);
			
			if ((styleRange != null) && (previousAttr != null) && (previousAttr.equals(attr))) {
				styleRange.length += element.getLength();
			} else {
				styleRange = new StyleRange(regionStart + element.getStart(), element.getLength(), attr.getForeground(), attr.getBackground(), attr.getStyle());
				holdResults.add(styleRange);
				// technically speaking, we don't need to update
				// previousAttr
				// in the other case, because the other case is when
				// it hasn't changed
				previousAttr = attr;
			}
		}
		return true;
	}

