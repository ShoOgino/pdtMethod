	public void applyStyles() {
		if (fText == null || fText.isDisposed() || fInput == null || fInput.length() == 0) {
			return;
		}
		IStructuredDocumentRegion node = fNodes;
		while (node != null) {
			ITextRegionList regions = node.getRegions();
			for (int i = 0; i < regions.size(); i++) {
				ITextRegion currentRegion = regions.get(i);
				// lookup the local coloring type and apply it
				String namedStyle = (String) getContextStyleMap().get(currentRegion.getType());
				if (namedStyle == null) {
					continue;
				}
				TextAttribute attribute = getAttribute(namedStyle);
				if (attribute == null) {
					continue;
				}

				StyleRange style = new StyleRange(node.getStartOffset(currentRegion), currentRegion.getLength(), attribute.getForeground(), attribute.getBackground(), attribute.getStyle());

				if ((attribute.getStyle() & TextAttribute.UNDERLINE) != 0) {
					style.underline = true;
					style.fontStyle &= ~TextAttribute.UNDERLINE;
				}

				fText.setStyleRange(style);
			}
			node = node.getNext();
		}
	}

