	/**
	 * Returns a compilation unit AST for the given php element. If the element
	 * is the input of the active php editor, the AST is the shared AST.
	 * <p>
	 * Clients are not allowed to modify the AST and must not keep any
	 * references.
	 * </p>
	 * 
	 * @param element
	 *            the {@link ITypeRoot}, must not be <code>null</code>
	 * @param waitFlag
	 *            {@link #WAIT_YES}, {@link #WAIT_NO} or
	 *            {@link #WAIT_ACTIVE_ONLY}
	 * @param progressMonitor
	 *            the progress monitor or <code>null</code>
	 * @return the AST or <code>null</code>.
	 *         <dl>
	 *         <li>if {@link #WAIT_NO} has been specified <code>null</code> is
	 *         returned if the element is not input of the current php editor or
	 *         no AST is available</li>
	 *         <li>if {@link #WAIT_ACTIVE_ONLY} has been specified
	 *         <code>null</code> is returned if the element is not input of the
	 *         current php editor</li>
	 *         <li>if {@link #WAIT_YES} has been specified either the shared AST
	 *         is returned or a new AST is created.</li>
	 *         </dl>
	 * @throws IOException
	 * @throws ModelException
	 */
	public static Program getAST(ISourceModule element, WAIT_FLAG waitFlag,
			IProgressMonitor progressMonitor) throws ModelException,
			IOException {
		return PHPUiPlugin.getDefault().getASTProvider().getAST(element,
				waitFlag, progressMonitor);
	}

