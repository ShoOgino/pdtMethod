	/*
	 * @see IInformationControl#computeSizeHint()
	 */
	public Point computeSizeHint() {
		TextPresentation presentation = new TextPresentation();
		HTML2TextReader reader = new HTML2TextReader(new StringReader(fInputText), presentation);
		String text;
		try {
			text = reader.getString();
		} catch (IOException e) {
			text = ""; //$NON-NLS-1$
		}

		fTextLayout.setText(text);
		Iterator iter = presentation.getAllStyleRangeIterator();
		while (iter.hasNext()) {
			StyleRange sr = (StyleRange) iter.next();
			if (sr.fontStyle == SWT.BOLD)
				fTextLayout.setStyle(fBoldStyle, sr.start, sr.start + sr.length - 1);
		}
		Rectangle bounds = fTextLayout.getBounds();
		int width = bounds.width;
		int height = bounds.height;

		width += 15;
		height += 25;

		if (fStatusFieldText != null && fSeparator != null) {
			fTextLayout.setText(fStatusFieldText);
			Rectangle statusBounds = fTextLayout.getBounds();
			Rectangle separatorBounds = fSeparator.getBounds();
			width = Math.max(width, statusBounds.width);
			height = height + statusBounds.height + separatorBounds.height;
		}

		// Apply size constraints
		if (fMaxWidth != SWT.DEFAULT)
			width = Math.min(fMaxWidth, width);
		if (fMaxHeight != SWT.DEFAULT)
			height = Math.min(fMaxHeight, height);

		// Ensure minimal size
		width = Math.max(MIN_WIDTH, width);
		height = Math.max(MIN_HEIGHT, height);

		return new Point(width, height);
	}

