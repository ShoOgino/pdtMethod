	protected void getMethodParameters(IMethod method, long flags, StringBuffer buf) throws ModelException {
		if (getFlag(flags, M_PARAMETER_TYPES | M_PARAMETER_NAMES)) {
			if (method.exists()) {
				final boolean bNames = getFlag(flags, M_PARAMETER_NAMES);
				final boolean bTypes = getFlag(flags, M_PARAMETER_TYPES);
				final boolean bInitializers = getFlag(flags, M_PARAMETER_INITIALIZERS);
				final IParameter[] params = method.getParameters();
				final boolean isVariadic = PHPFlags.isVariadic(method.getFlags());
				for (int i = 0, nParams = params.length; i < nParams; i++) {
					if (i > 0) {
						buf.append(COMMA_STRING);
					}
					boolean isLast = i + 1 == nParams;
					if (bTypes) {
						if (params[i].getType() != null) {
							if (PHPFlags.isNullable(params[i].getFlags())) {
								buf.append(QUESTION_MARK);
							}
							buf.append(params[i].getType());
							if (bNames) {
								buf.append(' ');
							} else {
								if (PHPFlags.isReference(params[i].getFlags())) {
									buf.append(REFERENCE_STRING);
								}
								if (isLast && isVariadic) {
									buf.append(ELLIPSIS_STRING);
								}
							}
						} else if (!bNames) {
							if (PHPFlags.isReference(params[i].getFlags())) {
								buf.append(REFERENCE_STRING);
							}
							if (isLast && isVariadic) {
								buf.append(ELLIPSIS_STRING);
							}
							buf.append(params[i].getName());
						}
					}
					if (bNames) {
						if (PHPFlags.isReference(params[i].getFlags())) {
							buf.append(REFERENCE_STRING);
						}
						if (isLast && isVariadic) {
							buf.append(ELLIPSIS_STRING);
						}
						buf.append(params[i].getName());
					}
					if (bInitializers && params[i].getDefaultValue() != null) {
						buf.append("="); //$NON-NLS-1$
						buf.append(params[i].getDefaultValue());
					}
				}
			}
		} else if (method.getParameters().length > 0) {
			buf.append(ELLIPSIS_STRING);
		}
	}

