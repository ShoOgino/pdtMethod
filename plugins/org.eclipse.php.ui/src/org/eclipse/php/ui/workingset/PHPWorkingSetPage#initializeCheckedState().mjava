	private void initializeCheckedState() {

		BusyIndicator.showWhile(getShell().getDisplay(), new Runnable() {
			public void run() {
				Object[] elements;
				if (fWorkingSet == null) {
					// Use current part's selection for initialization
					IWorkbenchPage page = PHPUiPlugin.getActivePage();
					if (page == null)
						return;

					IWorkbenchPart part = PHPUiPlugin.getActivePage().getActivePart();
					if (part == null)
						return;

					elements = SelectionConverter.getStructuredSelection(part).toArray();
					for (int i = 0; i < elements.length; i++) {
						if (elements[i] instanceof IFile) {
							PHPFileData phpFile = PHPWorkspaceModelManager.getInstance().getModelForFile((IFile) elements[i], false);
							if (phpFile != null)
								elements[i] = phpFile;
						}
					}
				} else
					elements = fWorkingSet.getElements();

				// Use closed project for elements in closed project
				for (int i = 0; i < elements.length; i++) {
					Object element = elements[i];
					if (element instanceof IResource) {
						IProject project = ((IResource) element).getProject();
						if (!project.isAccessible())
							elements[i] = project;
					}
					if (element instanceof PHPCodeData) {
						IResource resource = PHPModelUtil.getResource(element);
						if (resource != null && !resource.getProject().isAccessible())
							elements[i] = resource.getProject();
					}
				}

				fTree.setCheckedElements(elements);
				for (int i = 0; i < elements.length; i++) {
					Object element = elements[i];
					if (isExpandable(element))
						setSubtreeChecked(element, true, true);

					updateParentState(element, true);
				}
			}
		});
	}

