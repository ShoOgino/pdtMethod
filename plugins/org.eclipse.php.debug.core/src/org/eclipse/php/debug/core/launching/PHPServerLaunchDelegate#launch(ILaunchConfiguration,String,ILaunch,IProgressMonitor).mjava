	public void launch(ILaunchConfiguration configuration, String mode, ILaunch launch, IProgressMonitor monitor) throws CoreException {
		boolean runWithDebug = configuration.getAttribute("run_with_debug", true);
		this.launch = launch;
		if (mode.equals(ILaunchManager.RUN_MODE) && !runWithDebug) {
			httpServerDelegate.doLaunch(configuration, mode, launch, monitor);
			return;
		}

		IServer server = ServerUtil.getServer(configuration);
		if (server == null) {
			Logger.log(Logger.ERROR, "Luanch configuration could not find server");
			// throw CoreException();
			return;
		}

		ApacheServerBehaviour apacheServerBehaviour = (ApacheServerBehaviour) server.loadAdapter(ApacheServerBehaviour.class, null);
		apacheServerBehaviour.setupLaunch(launch, mode, monitor);

		IModuleArtifact moduleArtifact = httpServerDelegate.getModuleArtifact(configuration);
		if (moduleArtifact == null)
			throw new CoreException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.INTERNAL_ERROR, PHPDebugCoreMessages.configurationError, null));

		IModule module = moduleArtifact.getModule();

		boolean publish = configuration.getAttribute(ApachePlugin.DEPLOYABLE, false);
		if (publish) {
			if (!apacheServerBehaviour.publish(module, monitor)) {
				// Return if the publish failed.
				terminated();
				return;
			}
		}
		ILaunchConfigurationWorkingCopy wc = configuration.getWorkingCopy();
		IProject proj = module.getProject();
		String project = proj.getFullPath().toString();

		wc.setAttribute(IPHPConstants.PHP_Project, project);
		wc.doSave();

		String URL = configuration.getAttribute(ApachePlugin.URL, "");
		if (mode.equals(ILaunchManager.DEBUG_MODE) || runWithDebug == true) {
			boolean isStopAtFirstLine = PHPProjectPreferences.getStopAtFirstLine(proj);
			int requestPort = PHPProjectPreferences.getDebugPort(proj);

			// Generate a session id for this launch and put it in the map
			int sessionID = DebugSessionIdGenerator.generateSessionID();
			PHPSessionLaunchMapper.put(sessionID, new PHPServerLaunchDecorator(launch, apacheServerBehaviour, proj));

			// Fill all debug attributes:
			launch.setAttribute(IDebugParametersKeys.PORT, Integer.toString(requestPort));
			launch.setAttribute(IDebugParametersKeys.WEB_SERVER_DEBUGGER, Boolean.toString(true));
			launch.setAttribute(IDebugParametersKeys.FIRST_LINE_BREAKPOINT, Boolean.toString(isStopAtFirstLine));
			launch.setAttribute(IDebugParametersKeys.ORIGINAL_URL, URL);
			launch.setAttribute(IDebugParametersKeys.SESSION_ID, Integer.toString(sessionID));

			// Trigger the debug session by initiating a debug requset to the debug server
			runDispatch = new RunDispatchJobWebServer(launch);
			runDispatch.schedule();
		}
	}

