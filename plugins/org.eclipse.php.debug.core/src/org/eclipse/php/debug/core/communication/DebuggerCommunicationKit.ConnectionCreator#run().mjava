		public void run() {
			while (isAlive) {
				try {
					ServerSocket serverSocket;
					synchronized (this) {
						serverSocket = checkServerSocket(port);
						if (serverSocket == null)
							isAlive = false;
					}

					if (!isAlive)
						break;
					//Log.writeLog("Waiting for connection");
					//System.out.println("ConnectionCreator waiting "+this);

					//wait for another connection to be established
					Socket communicationSocket = serverSocket.accept();
					communicationSocket.setTcpNoDelay(true);
					//System.out.println("New Script is waiting in debug queue");
					synchronized (this) { // can not exit while this block
						try {
							//System.out.println("ConnectionCreator not waiting "+this);
							DataInputStream in = new DataInputStream(communicationSocket.getInputStream());
							DataOutputStream out = new DataOutputStream(communicationSocket.getOutputStream());
							synchronized (in) {
								//These 2 methods are blocked until the threads
								//will stop working and will be free to handle
								//another connection.
								restartInputMessageHandler(out);
								restartInputManager(in);
								DebuggerCommunicationKit.this.in = in;
								DebuggerCommunicationKit.this.out = out;
								DebuggerCommunicationKit.this.communicationSocket = communicationSocket;
								isInitialized = true;
							}
							//                            System.out.println("open connection");
							getCommunicationAdministrator().connectionEstablished();
						} catch (Exception exc) {
							PHPDebugPlugin.log(exc);
						}
					}
				} catch (SocketException exc) {
					//Log.writeLog(exc);
				} catch (Exception exc) {
					if (isAlive)
						PHPDebugPlugin.log(exc);
					// else exit the thread by exit().
				}
			} // end loop

			//this.isAlive = false;
			//System.out.println("ConnectionCreator EXIT "+this);
		}

