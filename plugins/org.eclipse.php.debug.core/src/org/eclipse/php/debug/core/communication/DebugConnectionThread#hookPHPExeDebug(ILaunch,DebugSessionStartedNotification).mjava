	/**
	 * Hook a PHP executable debug session
	 * 
	 * @param launch An {@link ILaunch}
	 * @param startedNotification	A DebugSessionStartedNotification
	 */
	protected void hookPHPExeDebug(ILaunch launch, DebugSessionStartedNotification startedNotification) throws CoreException {
		ILaunchConfiguration launchConfiguration = launch.getLaunchConfiguration();
		inputManager.setTransferEncoding(launchConfiguration.getAttribute(IDebugParametersKeys.TRANSFER_ENCODING, ""));
		String phpExeString = launchConfiguration.getAttribute(PHPCoreConstants.ATTR_LOCATION, (String) null);
		String fileNameString = launchConfiguration.getAttribute(PHPCoreConstants.ATTR_FILE, (String) null);
		boolean runWithDebugInfo = launchConfiguration.getAttribute(IPHPConstants.RUN_WITH_DEBUG_INFO, true);
		String projectString = launchConfiguration.getAttribute(PHPCoreConstants.ATTR_WORKING_DIRECTORY, (String) null);

		if (launch.getLaunchMode().equals(ILaunchManager.DEBUG_MODE)) {
			runWithDebugInfo = false;
		}

		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
		IProject project;
		String debugFileName;

		IPath filePath = new Path(fileNameString);
		IResource res = workspaceRoot.findMember(filePath);
		if (res != null) {
			IFile fileToDebug = (IFile) res;
			debugFileName = fileToDebug.getName();
			project = fileToDebug.getProject();
		} else if (projectString != null) {
			project = workspaceRoot.getProject(projectString);
			debugFileName = fileNameString;
		} else {
			return;
		}
		String workspaceRootPath = PHPDebugTarget.getWorkspaceRootPath(project.getWorkspace());
		boolean stopAtFirstLine = PHPProjectPreferences.getStopAtFirstLine(project);
		int requestPort = PHPProjectPreferences.getDebugPort(project);

		IPath phpExe = new Path(phpExeString);
		PHPProcess process = new PHPProcess(launch, phpExe.toOSString());

		debugTarget = new PHPDebugTarget(this, launch, phpExeString, debugFileName, workspaceRootPath, requestPort, process, runWithDebugInfo, stopAtFirstLine, project);
		launch.addDebugTarget(debugTarget);
	}

