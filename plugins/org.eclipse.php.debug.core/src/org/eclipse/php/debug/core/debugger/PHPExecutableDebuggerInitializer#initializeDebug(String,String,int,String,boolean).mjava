	public void initializeDebug(String phpExe, String fileName, int debugPort, String extendedParameters, boolean stopAtFirstLine) {
		try {
			IPath phpExePath = new Path(phpExe);
			File workingDir = new File(phpExePath.removeLastSegments(1).toString());
			String phpConfigDir = workingDir.getAbsolutePath();

			IDebugParametersInitializer parametersInitializer = DebugParametersInitializersRegistry.getBestMatchDebugParametersInitializer(launch.getLaunchMode());
			parametersInitializer.addParameter(IDebugParametersKeys.PORT, new Integer(debugPort));
			parametersInitializer.addParameter(IDebugParametersKeys.FIRST_LINE_BREAKPOINT, Boolean.valueOf(stopAtFirstLine));

			String combinedEnvVars[] = new String[systemEnvironmentVariables.length + 8];
			String[] additionalVars = new String[] { "REQUEST_METHOD=GET", "SCRIPT_FILENAME=" + fileName, "SCRIPT_NAME=" + fileName, "PATH_TRANSLATED=" + fileName, "PATH_INFO=" + fileName, "QUERY_STRING=" + parametersInitializer.generateQuery() + extendedParameters + "&debug_host=127.0.0.1",
				"REDIRECT_STATUS=1", "PHPRC=" + phpConfigDir, };

			System.arraycopy(systemEnvironmentVariables, 0, combinedEnvVars, 0, systemEnvironmentVariables.length);
			System.arraycopy(additionalVars, 0, combinedEnvVars, combinedEnvVars.length - 8, additionalVars.length);

			String[] phpCmdArray = { phpExe, "-c", phpConfigDir, fileName };
			Process p = Runtime.getRuntime().exec(phpCmdArray, combinedEnvVars, workingDir);

			Runnable reader = new ProcessOutputReader(p);
			new Thread(reader).start();

		} catch (Exception e) {
			System.out.println("PHP Executable debugger error: " + e.getMessage());
		}
	}

