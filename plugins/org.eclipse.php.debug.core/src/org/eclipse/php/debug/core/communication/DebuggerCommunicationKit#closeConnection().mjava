	/**
	 * Closes the connection.
	 * Destroys the server socket without cleaning the the request/response tables.
	 * The cleaning will be done by InputMessageHandler on termination.
	 */
	public synchronized void closeConnection() {
        Logger.debugMSG("DebuggerCommunicationKit: Starting closeConnection");
		cleanSocket();

        Logger.debugMSG("DebuggerCommunicationKit: connectionCreator exit");
        if (connectionCreator != null && connectionCreator.isAlive()) {
            connectionCreator.exit();
        }
        
        Logger.debugMSG("DebuggerCommunicationKit: closing server socket");
        if (serverSocket != null) {
            try {
                if (!serverSocket.isClosed())
                    serverSocket.close();
            } catch (Exception exc) {
                PHPDebugPlugin.log(exc);
            }
            serverSocket = null;
        } 
		
		// TODO - Check: Commented out - Causing for the second launch of debug to hang
		
/*        Logger.debugMSG("DebuggerCommunicationKit: Terminating inputManager");
		if (inputManager != null && inputManager.isAlive()) {
			inputManager.terminate();
		}
        Logger.debugMSG("DebuggerCommunicationKit: Terminating inputMessageHandler");
		if (inputMessageHandler != null && inputMessageHandler.isAlive()) {
			inputMessageHandler.terminate();
		} */

	}

