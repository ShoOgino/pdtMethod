	private static List<PathEntry> getMostMatchEntries(List<PathEntry> entries, VirtualPath remotePath) {
		if (remotePath.getSegmentsCount() == 1) {
			return entries;
		}
		Map<Integer, List<PathEntry>> map = new HashMap<>();
		int mostMatchSegmentsNumber = 1;
		for (int i = 0; i < entries.size(); i++) {
			PathEntry pathEntry = entries.get(i);
			VirtualPath virtualPath = pathEntry.getAbstractPath();
			int matchSegmentsNumber = getMatchSegmentsNumber(virtualPath, remotePath);
			if (matchSegmentsNumber > mostMatchSegmentsNumber) {
				mostMatchSegmentsNumber = matchSegmentsNumber;
			}
			List<PathEntry> list = map.get(matchSegmentsNumber);
			if (list == null) {
				list = new ArrayList<>();
				map.put(matchSegmentsNumber, list);
			}
			list.add(pathEntry);

		}
		List<PathEntry> mostMatchList = map.get(mostMatchSegmentsNumber);
		return mostMatchList;
	}

