	private String getLocalFileName(String filename, String context, int length, boolean isWindows) {
		// First, check if the file name is located in one of the include paths.
		// If so, ignore the given length and return the local file name after trimming
		// the path from its beginning.
		// (Fix https://bugs.eclipse.org/bugs/show_bug.cgi?id=171414)
		IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(fTarget.getProjectName());
		if (project != null) {
			PHPProjectOptions options = PHPProjectOptions.forProject(project);
			if (options != null) {
				IIncludePathEntry[] includePaths = options.readRawIncludePath();
				for (int i = 0; i < includePaths.length; i++) {
					String includePath = includePaths[i].getPath().toString();
					if (filename.startsWith(includePath)) {
						return filename.substring(includePath.length());
					}
				}
			}
		}
		String rName = (filename.length() > length) ? filename.substring(length) : '/' + filename;
		if (context == null) {
			if (rName.startsWith("/")) {
				rName = rName.substring(1);
			}
			return rName;
		}
		if (isWindows) {
			if ((rName.toLowerCase()).startsWith(context.toLowerCase())) {
				rName = rName.substring(context.length());
			} else {
				rName = rName.substring(1);
			}
		} else {
			if (rName.startsWith(context)) {
				rName = rName.substring(context.length());
			}
			//            else {
			//                rName = rName.substring(1);
			//            }
		}

		return rName;
	}

