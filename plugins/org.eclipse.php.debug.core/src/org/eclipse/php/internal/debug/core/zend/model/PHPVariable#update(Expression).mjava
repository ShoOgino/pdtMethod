	protected void update(Expression expression) {
		// Get previous data type
		DataType previousDataType = getDataType();
		// Catch previous value string if there is any
		String previousValueString = null;
		if (fValue != null) {
			previousValueString = fExpression.getValue().getValueAsString();
		}
		// Bind new expression
		fExpression = expression;
		// Reset name
		fName = null;
		// Update value
		if (fValue != null && fValue.getDataType() == previousDataType) {
			fValue.update(expression);
		} else {
			fValue = new PHPValue((PHPDebugTarget) getDebugTarget(), fExpression);
		}
		// Check if value has changed
		if (previousValueString != null) {
			fHasChanged = !previousValueString.equals(fExpression.getValue().getValueAsString());
		}
	}

