	/**
	 * Returns the port that is associated to the debugger that is involved in
	 * the given launch configuration.
	 * 
	 * @return The port in use. -1, in case of an error.
	 */
	public static int getDebugPort(ILaunchConfiguration launchConfiguration) {
		try {
			String debuggerID = launchConfiguration.getAttribute(
					PHPDebugCorePreferenceNames.PHP_DEBUGGER_ID,
					PHPDebugPlugin.getCurrentDebuggerId());
			AbstractDebuggerConfiguration debuggerConfiguration = PHPDebuggersRegistry
					.getDebuggerConfiguration(debuggerID);
			int port = debuggerConfiguration.getPort();
			Server server = ServersManager.getServer(launchConfiguration
					.getAttribute(Server.NAME, "")); //$NON-NLS-1$
			int customPort = -1;
			// Check custom port for server's Zend Debugger
			if (ZendDebuggerConfiguration.ID.equals(debuggerID)) {
				if (server != null) {
					customPort = ZendDebuggerSettingsUtil.getDebugPort(server
							.getUniqueId());
				}
			}
			// Check custom port for server's XDebug
			else if (XDebugDebuggerConfiguration.ID.equals(debuggerID)) {
				if (server != null) {
					customPort = XDebugDebuggerSettingsUtil.getDebugPort(server
							.getUniqueId());
				}
			}
			if (customPort != -1)
				port = customPort;
		} catch (Exception e) {
			Logger.logException(
					"Could not retrieve the debugger's port number", e);//$NON-NLS-1$
		}
		return -1;
	}

