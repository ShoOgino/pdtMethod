	protected void validate() {
		// Reset state
		setMessage(PHPDebugCoreMessages.XDebugConfigurationDialog_Dialog_description);
		String debugPort = portTextBox.getText();
		Integer portNumber = null;
		try {
			portNumber = Integer.valueOf(debugPort);
			int i = portNumber.intValue();
			if (i < 1 || i > 65535) {
				setMessage(
						PHPDebugCoreMessages.DebugConfigurationDialog_invalidPortRange,
						IMessageProvider.ERROR);
				return;
			}
		} catch (NumberFormatException ex) {
			setMessage(
					PHPDebugCoreMessages.DebugConfigurationDialog_invalidPort,
					IMessageProvider.ERROR);
			return;
		} catch (Exception e) {
			setMessage(
					PHPDebugCoreMessages.DebugConfigurationDialog_invalidPort,
					IMessageProvider.ERROR);
			return;
		}
		// Check warnings
		if (!PHPLaunchUtilities.isPortAvailable(portNumber)
				&& !PHPLaunchUtilities.isDebugDaemonActive(portNumber,
						XDebugCommunicationDaemon.XDEBUG_DEBUGGER_ID)) {
			setMessage(NLS.bind(
					PHPDebugCoreMessages.DebugConfigurationDialog_PortInUse,
					debugPort), IMessageProvider.WARNING);
		}
	}

