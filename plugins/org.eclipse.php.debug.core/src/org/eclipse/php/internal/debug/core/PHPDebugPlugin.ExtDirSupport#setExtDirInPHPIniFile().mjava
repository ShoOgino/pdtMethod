		/**
		 * Sets extension_dir in php.ini file for all php executables (i.e.
		 * resources/php53, resources/php54) provided by extension point
		 * "phpExe", for OSs different than Windows.
		 * 
		 * @throws IOException
		 * @throws URISyntaxException
		 */
		public static void setExtDirInPHPIniFile() {

			final IExtensionRegistry registry = Platform.getExtensionRegistry();
			final IConfigurationElement[] elements = registry.getConfigurationElementsFor("org.eclipse.php.debug.core", //$NON-NLS-1$
					EXTENSION_POINT_NAME);
			Matcher matcher = null;
			Pattern pattern = null;
			for (final IConfigurationElement element : elements) {
				if (PHPEXE_TAG.equals(element.getName())) {
					try {
						String location = substitudeVariables(element.getAttribute(LOCATION_ATTRIBUTE));
						final String pluginId = element.getDeclaringExtension().getNamespaceIdentifier();
						location = location.substring(0, location.lastIndexOf("/")) //$NON-NLS-1$
								.concat("/php.ini"); //$NON-NLS-1$

						File phpIni = getFileFromLocation(location, pluginId);
						if (phpIni == null)
							continue;

						File phpIniDir = phpIni.getParentFile();
						String fileName = phpIni.getAbsolutePath();
						String iniContent = readFile(fileName);
						String correctDir = phpIniDir.getAbsolutePath().concat(File.separator).replaceAll("\\\\", //$NON-NLS-1$
								"\\\\\\\\"); //$NON-NLS-1$
						pattern = Pattern.compile("(extension_dir=.*)(ext[^\\s]*)"); //$NON-NLS-1$
						matcher = pattern.matcher(iniContent);
						if (matcher.find()) {
							Path iniPath = new Path(matcher.group(1).replaceAll("extension_dir=", "")); //$NON-NLS-1$ //$NON-NLS-2$
							Path currentPath = new Path(correctDir);
							if (!currentPath.isPrefixOf(iniPath)) {
								iniContent = iniContent.replaceAll(matcher.group(0).replaceAll("\\\\", "\\\\\\\\"), //$NON-NLS-1$ //$NON-NLS-2$
										"extension_dir=\"" + correctDir //$NON-NLS-1$
												+ matcher.group(2).replace("\"", "").replaceAll("\\\\", "\\\\\\\\") //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
												+ "\""); //$NON-NLS-1$
								pattern = Pattern.compile("(zend_extension=.*)(ext[^\\s]ZendDebugger[^\\s]*)"); //$NON-NLS-1$
								matcher = pattern.matcher(iniContent);
								if (matcher.find()) {
									iniContent = iniContent.replaceAll(matcher.group(0).replaceAll("\\\\", "\\\\\\\\"), //$NON-NLS-1$ //$NON-NLS-2$
											"zend_extension=\"" + correctDir //$NON-NLS-1$
													+ matcher.group(2).replace("\"", "").replaceAll("\\\\", "\\\\\\\\") //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
													+ "\""); //$NON-NLS-1$
								}
								pattern = Pattern.compile("(zend_extension=.*)(ext[^\\s]xdebug[^\\s]*)"); //$NON-NLS-1$
								matcher = pattern.matcher(iniContent);
								if (matcher.find()) {
									iniContent = iniContent.replaceAll(matcher.group(0).replaceAll("\\\\", "\\\\\\\\"), //$NON-NLS-1$ //$NON-NLS-2$
											"zend_extension=\"" + correctDir //$NON-NLS-1$
													+ matcher.group(2).replace("\"", "").replaceAll("\\\\", "\\\\\\\\") //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
													+ "\""); //$NON-NLS-1$
								}
								pattern = Pattern.compile("(openssl.cafile=.*)(ca-bundle.crt[^\\s]*)"); //$NON-NLS-1$
								matcher = pattern.matcher(iniContent);
								if (matcher.find()) {
									iniContent = iniContent.replaceAll(matcher.group(0).replaceAll("\\\\", "\\\\\\\\"), //$NON-NLS-1$ //$NON-NLS-2$
											"openssl.cafile=\"" + correctDir + matcher.group(2).replace("\"", "") //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
													+ "\""); //$NON-NLS-1$
								}
								BufferedWriter writer = new BufferedWriter(new FileWriter(fileName));
								writer.write(iniContent);
								writer.flush();
								writer.close();
							}
						}
					} catch (Exception ex) {
						log(ex);
					}
				}
			}
		}

