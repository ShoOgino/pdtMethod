	/**
	 * Hook a PHP executable debug session
	 * 
	 * @param launch
	 *            An {@link ILaunch}
	 * @param startedNotification
	 *            A DebugSessionStartedNotification
	 */
	protected void hookPHPExeLaunch(final ILaunch launch,
			SessionDescriptor sessionDescriptor) throws CoreException {
		ILaunchConfiguration launchConfiguration = launch
				.getLaunchConfiguration();
		messageReceiver.setTransferEncoding(launchConfiguration.getAttribute(
				IDebugParametersKeys.TRANSFER_ENCODING, "")); //$NON-NLS-1$
		messageReceiver.setOutputEncoding(launchConfiguration.getAttribute(
				IDebugParametersKeys.OUTPUT_ENCODING, "")); //$NON-NLS-1$
		String phpExeString = launchConfiguration.getAttribute(
				IPHPDebugConstants.ATTR_EXECUTABLE_LOCATION, (String) null);
		String fileNameString = launchConfiguration.getAttribute(
				IPHPDebugConstants.ATTR_FILE, (String) null);
		boolean runWithDebugInfo = launchConfiguration.getAttribute(
				IPHPDebugConstants.RUN_WITH_DEBUG_INFO, true);
		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
		IProject project = null;
		String file = launchConfiguration.getAttribute(
				IPHPDebugConstants.ATTR_FILE, (String) null);
		if (file != null) {
			IResource resource = workspaceRoot.findMember(file);
			if (resource != null) {
				project = resource.getProject();
			}
		}
		if (launch.getLaunchMode().equals(ILaunchManager.DEBUG_MODE)) {
			runWithDebugInfo = false;
		}
		String debugFileName = fileNameString;
		IPath filePath = new Path(fileNameString);
		IResource res = workspaceRoot.findMember(filePath);
		if (res != null) {
			IFile fileToDebug = (IFile) res;
			debugFileName = fileToDebug.getName();
		}
		boolean stopAtFirstLine = PHPProjectPreferences
				.getStopAtFirstLine(project);
		int requestPort = PHPDebugPlugin
				.getDebugPort(DebuggerCommunicationDaemon.ZEND_DEBUGGER_ID);
		try {
			requestPort = Integer.valueOf(launch
					.getAttribute(IDebugParametersKeys.PORT));
		} catch (Exception e) {
			// should not happen
		}
		IPath phpExe = new Path(phpExeString);
		PHPProcess process = new PHPProcess(launch, phpExe.toOSString());
		debugTarget = (PHPDebugTarget) createDebugTarget(this, launch,
				phpExeString, debugFileName, requestPort, process,
				runWithDebugInfo, stopAtFirstLine, project);
		// Bind debug target to the launch
		bindTarget(launch);
	}

