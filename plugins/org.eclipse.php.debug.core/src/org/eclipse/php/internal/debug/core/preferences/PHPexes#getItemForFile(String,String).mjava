	/**
	 * Search for the executable file name in all of the registered
	 * {@link PHPexeItem}s and return a reference to the one that refer to the
	 * same file.
	 * 
	 * @param exeFilePath
	 *            The executable file name.
	 * @param iniFilePath
	 *            The php ini file path (can be null).
	 * @return The corresponding {@link PHPexeItem}, or null if none was found.
	 */
	public PHPexeItem getItemForFile(String exeFilePath, String iniFilePath) {
		Set<String> installedDebuggers = PHPDebuggersRegistry.getDebuggersIds();
		for (String debuggerId : installedDebuggers) {
			HashMap<String, PHPexeItem> installedExes = items.get(debuggerId);
			if (installedExes != null) {
				Set<String> exeNames = installedExes.keySet();
				for (String name : exeNames) {
					PHPexeItem exeItem = installedExes.get(name);
					// Check for ini equality
					boolean iniEquals = true;
					if (iniFilePath == null) {
						iniEquals = exeItem.getINILocation() == null;
					} else {
						iniEquals = exeItem.getINILocation() == null ? iniFilePath == null
								|| iniFilePath.equals("") //$NON-NLS-1$
								: iniFilePath.equals(exeItem.getINILocation()
										.toString());
					}
					if (iniEquals
							&& exeFilePath.equals(exeItem.getExecutable()
									.toString())) {
						return exeItem;
					}
				}
			}
		}
		return null;
	}

