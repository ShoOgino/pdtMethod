	private String getPrivateAddressProposals(final Inet4Address serverHostAddress) {
		List<Inet4Address> privateAddresses = NetworkUtil.getPrivateAddresses();
		if (privateAddresses.isEmpty()) {
			return null;
		}
		Collections.sort(privateAddresses, new Comparator<Inet4Address>() {
			@Override
			public int compare(Inet4Address a1, Inet4Address a2) {
				if (NetworkUtil.isSamePrivateClass(a1, serverHostAddress)
						&& !NetworkUtil.isSamePrivateClass(a2, serverHostAddress)) {
					return 1;
				}
				if (NetworkUtil.isSamePrivateClass(a2, serverHostAddress)
						&& !NetworkUtil.isSamePrivateClass(a1, serverHostAddress)) {
					return -1;
				}
				return 0;
			}
		});
		String[] hosts = new String[privateAddresses.size()];
		for (int i = 0; i < privateAddresses.size(); i++) {
			hosts[i] = privateAddresses.get(i).getHostAddress();
		}
		return PHPDebugUtil.getZendHostsString(hosts);
	}

