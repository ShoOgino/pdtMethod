	/**
	 * Returns local file name corresponding to the given remote path
	 * @param remoteFile
	 * @return local file, or remoteFile as is in case of resolving failure
	 */
	public static String convertToLocalFilename(String remoteFile, PHPDebugTarget debugTarget) {
		if (debugTarget.isPHPCGI() && new File(remoteFile).exists()) {
			IFile wsFile = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(new Path(remoteFile));
			if (wsFile != null) {
				return wsFile.getFullPath().toString();
			}
		}
		try {
			String currentScriptDir = null;
			PHPstack phpStack = debugTarget.getContextManager().getRemoteDebugger().getCallStack();
			if (phpStack.getLayers() != null && phpStack.getLayers().length > 0) {
				currentScriptDir = new File(phpStack.getLayers()[phpStack.getLayers().length - 1].getCalledFileName()).getParent();
			}

			PathEntry localFile = DebugSearchEngine.find(remoteFile, debugTarget.getLaunch().getLaunchConfiguration(), debugTarget.getProject().getLocation().toString(), currentScriptDir);
			if (localFile != null) {
				return localFile.getResolvedPath();
			}
		} catch (Exception e) {
		}
		return remoteFile; // in case of failure
	}

