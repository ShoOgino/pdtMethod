    public BreakpointSet (IProject project, boolean isPHPCGI) {
        
        fProject = project;
        fIsPHPCGI = isPHPCGI;
        fZips = new ArrayList();
        fDirectories = new ArrayList();
        fProjects = new ArrayList();
        
        if (project == null);
        PHPProjectOptions options = PHPProjectOptions.forProject(project);
        if (options != null) {
            IIncludePathEntry[] entries = options.readRawIncludePath();

            if (entries != null) {
                for (int i = 0; i < entries.length; i++) {
                    if (entries[i].getEntryKind() == IIncludePathEntry.IPE_LIBRARY) {
                        IPath path = entries[i].getPath();
                        File file = new File(path.toString());
                        if (entries[i].getContentKind() == IIncludePathEntry.K_BINARY) {
                            fZips.add(RemoteDebugger.convertToSystemIndependentFileName(file.getAbsolutePath()));
                        } else {
                            fDirectories.add(RemoteDebugger.convertToSystemIndependentFileName(file.getAbsolutePath()));
                        }
                    } else if (entries[i].getEntryKind() == IIncludePathEntry.IPE_PROJECT) {
                        IResource includeResource = entries[i].getResource();
                        if (includeResource instanceof IProject) {
                            fProjects.add(includeResource);
                        }
                    } else if (entries[i].getEntryKind() == IIncludePathEntry.IPE_VARIABLE) {
                        IPath path = entries[i].getPath();
                        String variableName = path.toString();
                        File file = getVariableFile(variableName);
                        if (file.isDirectory()) {
                            fDirectories.add(RemoteDebugger.convertToSystemIndependentFileName(file.getAbsolutePath()));
                        } else {
                            String fileName = file.getName();
                            if (fileName.toLowerCase().endsWith(".zip")) { //$NON-NLS-1$
                                fZips.add(RemoteDebugger.convertToSystemIndependentFileName(file.getAbsolutePath()));
                            }
                        }
                    }
                }
            }
        }
        
    }

