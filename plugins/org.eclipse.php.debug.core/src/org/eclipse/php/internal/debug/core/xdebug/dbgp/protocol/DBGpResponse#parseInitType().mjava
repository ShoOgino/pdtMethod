	private void parseInitType() {
		// get the init information
		type = INIT;
		idekey = getTopAttribute("idekey"); //$NON-NLS-1$
		threadId = getTopAttribute("thread"); //$NON-NLS-1$
		session = getTopAttribute("session"); //$NON-NLS-1$
		if (session.trim().length() == 0) {
			session = null;
		}
		fileUri = getTopAttribute("fileuri"); //$NON-NLS-1$
		// engine may not be the first child so you will need to search
		// for it.
		NodeList nodes = parent.getChildNodes();
		for (int i = 0; i < nodes.getLength(); i++) {
			Node node = nodes.item(i);
			if (node.getNodeName().equals("engine")) { //$NON-NLS-1$
				engineVersion = getAttribute(node, "version"); //$NON-NLS-1$
				NodeList moreNodes = node.getChildNodes();
				if (moreNodes != null && moreNodes.getLength() > 0) {
					String engineTypeStr = moreNodes.item(0).getNodeValue();
					if (engineTypeStr != null) {
						try {
							engineType = EngineTypes.valueOf(engineTypeStr);
						} catch (IllegalArgumentException e) {
							engineType = EngineTypes.other;
						}
					}

				}
				i = nodes.getLength();
			}
		}
		if (idekey.length() != 0 && fileUri.length() != 0) {
			errorCode = ERROR_OK;
		} else {
			errorCode = ERROR_INVALID_RESPONSE;
		}
	}

