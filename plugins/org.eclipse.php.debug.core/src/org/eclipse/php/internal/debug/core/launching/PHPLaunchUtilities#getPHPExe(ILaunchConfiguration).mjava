	/**
	 * Finds and returns PHP exe item that corresponds to provided launch
	 * configuration.
	 * 
	 * @param configuration
	 * @return PHP exe item that corresponds to provided launch configuration
	 * @throws CoreException
	 */
	public static PHPexeItem getPHPExe(ILaunchConfiguration configuration) throws CoreException {
		PHPexeItem item = null;
		String path = configuration.getAttribute(PHPRuntime.PHP_CONTAINER, (String) null);
		if (path == null) {
			IProject project = null;
			IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
			String projectName = configuration.getAttribute(IPHPDebugConstants.PHP_Project, (String) null);
			if (projectName != null) {
				project = workspaceRoot.getProject(projectName);
			} else {
				String phpScriptString = configuration.getAttribute(IPHPDebugConstants.ATTR_FILE, (String) null);
				IPath filePath = new Path(phpScriptString);
				IResource scriptRes = workspaceRoot.findMember(filePath);
				if (scriptRes != null) {
					project = scriptRes.getProject();
				}
			}
			item = PHPDebugPlugin.getPHPexeItem(project);
		} else {
			IPath exePath = Path.fromPortableString(path);
			org.eclipse.php.internal.core.PHPVersion version = PHPRuntime.getPHPVersion(exePath);
			if (version == null) {
				String exeName = exePath.lastSegment();
				item = PHPexes.getInstance().getItem(exeName);
			} else {
				item = PHPDebugPlugin.getPHPexeItem(version);
			}
		}
		return item;
	}

