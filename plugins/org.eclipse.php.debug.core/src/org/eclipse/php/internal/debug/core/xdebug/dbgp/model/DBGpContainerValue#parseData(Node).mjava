	/**
	 * parse the xml information for an object or array
	 * @param property
	 */
	private void parseData(Node property) {
		// children, numchildren, page, pagesize, recursive attribute page and pagesize
		// only appear if you exceed the max_children option limit. Pagesize is
		// the max_children limit.
		// children can be zero, but we may as well get all the information
		// we can, so no point checking the flag. We also need to make sure
		// that DBGpVariable is not set to null here otherwise it will attempt
		// to defer the info. This is ok for no children as page will be set to
		// -1
		String type = DBGpResponse.getAttribute(property, "type");
		if (type.equals(DBGpVariable.PHP_OBJECT)) {
			containerType = IS_OBJECT;
			className = DBGpResponse.getAttribute(property, "classname");
		}

		String numChildStr = DBGpResponse.getAttribute(property, "numchildren");
		numChild = 0;
		if (numChildStr != null && numChildStr.trim().length() != 0) {
			numChild = Integer.parseInt(numChildStr);
		}
		String pageStr = null;
		String pageSizeStr = null;
		pageStr = DBGpResponse.getAttribute(property, "page");
		pageSizeStr = DBGpResponse.getAttribute(property, "pagesize");
		//TODO: currently getMaxChildren returns 0, may need to look into this.
		pageSize = ((DBGpTarget) getDebugTarget()).getMaxChildren();
		if (pageSizeStr != null && pageSizeStr.trim().length() != 0) {
			pageSize = Integer.parseInt(pageSizeStr);
		}

		page = -1;
		if (pageStr != null && pageStr.trim().length() != 0) {
			page = Integer.parseInt(pageStr);
		}
		if (page == -1 && numChild > pageSize) {
			//Assume the xdebug defect and set page = 0 to force container control
			page = 0;
		}

		//TODO: Improvement: nApplyCount > 1 in the zend hash table for an array or object
		//String recursiveStr = DBGpResponse.getAttribute(property, "recursive");

		if (page == -1 || getOwner() instanceof DBGpContainerVariable) {
			// we have a full set of entries or we have a complete subset within a ContainerVariable
			// create a standard child entries that show the variables and their values
			NodeList childProperties = property.getChildNodes();
			int childrenReceived = childProperties.getLength();
			if (childrenReceived > 0) {
				childVariables = new DBGpVariable[childrenReceived];
				for (int i = 0; i < childrenReceived; i++) {
					Node childProperty = childProperties.item(i);
					childVariables[i] = new DBGpVariable((DBGpTarget) getDebugTarget(), childProperty, getOwner().getStackLevel());
				}
			}
		} else {

			// create container variables to handle a complete subset 
			// and that show their name as a container [x...y] in the debug view
			int subCount = roundUp((double) numChild / (double) pageSize);
			childVariables = new DBGpContainerVariable[subCount];

//			// we can populate the 1st one, we assume page=0 here.
//			// TODO: xdebug appears to do strange things on the watch expression. For example
//			// if I have expanded $a (array of 201 elements) then a watch doesn't get page 0, it could get page 4 for example.
//			childVariables[0] = new DBGpContainerVariable(getDebugTarget(), page, pageSize, numChild, property, getOwner().getStackLevel(), getOwner().getFullName());
//			for (int i = 1; i < subCount; i++) {
//				childVariables[i] = new DBGpContainerVariable(getDebugTarget(), page + i, pageSize, numChild, null, getOwner().getStackLevel(), getOwner().getFullName());
//			}
			
			for (int i = 0; i < subCount; i++) {
				if (i == page) {
					// we have data for this page so pass the property info to the container
					childVariables[i] = new DBGpContainerVariable(getDebugTarget(), i, pageSize, numChild, property, getOwner().getStackLevel(), getOwner().getFullName());
				}
				else {
					// we don't have data for this page so create a container with no info, could be fetched later.
					childVariables[i] = new DBGpContainerVariable(getDebugTarget(), i, pageSize, numChild, null, getOwner().getStackLevel(), getOwner().getFullName());
					//we copy the address from the original data as we could use it if we don't
					//have a fullname from the variable, eg if an eval was done.
					((DBGpContainerVariable)childVariables[i]).setAddress(getOwner().getAddress());
				}
			}
		}
	}

