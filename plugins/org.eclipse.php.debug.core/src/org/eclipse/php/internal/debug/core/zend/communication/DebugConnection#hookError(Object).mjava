	/**
	 * Handle a debug session hook error. This method can be subclassed for
	 * handling more complex causes. The default implementation is to display
	 * the toString() value of the cause and return false.
	 * 
	 * @param cause
	 *            An object that represents the cause for the error. Can be a
	 *            String description or a different complex object that can
	 *            supply more information.
	 * @return True, if the error was fixed in this method; False, otherwise.
	 */
	protected void hookError(Object cause) {
		if (cause != null) {
			Logger.log(Logger.ERROR, cause.toString());
		} else {
			Logger.log(Logger.ERROR, "Debug hook error"); //$NON-NLS-1$
		}
	}

