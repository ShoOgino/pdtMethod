	/**
	 * setup DBGp specific features, or get information about environment
	 */
	private void negotiateDBGpFeatures() {
		DBGpResponse resp;
		resp = session.sendSyncCmd(DBGpCommand.featureSet, "-n show_hidden -v 1"); //$NON-NLS-1$
		// check the responses, but keep going.
		DBGpUtils.isGoodDBGpResponse(this, resp);
		resp = session.sendSyncCmd(DBGpCommand.featureSet, "-n max_depth -v " + getMaxDepth()); //$NON-NLS-1$
		DBGpUtils.isGoodDBGpResponse(this, resp);
		resp = session.sendSyncCmd(DBGpCommand.featureSet, "-n max_children -v " + getMaxChildren()); //$NON-NLS-1$
		DBGpUtils.isGoodDBGpResponse(this, resp);
		
		/*
		resp = session.sendSyncCmd(DBGpCommand.featureGet, "-n max_children");
		if (DBGpUtils.isGoodDBGpResponse(this, resp)) {
			Node child = resp.getParentNode().getFirstChild();
			if (child != null) {
				String data = child.getNodeValue();
				try {
					maxChildren = Integer.parseInt(data);
				} catch (NumberFormatException nfe) {
					maxChildren = -1;
				}
			}
		}
		*/
		
		resp = session.sendSyncCmd(DBGpCommand.featureGet, "-n encoding"); //$NON-NLS-1$
		if (DBGpUtils.isGoodDBGpResponse(this, resp)) {
			Node child = resp.getParentNode().getFirstChild();
			if (child != null) {
				String data = child.getNodeValue();
				try {
					"abcdefg".getBytes(data); //$NON-NLS-1$
					session.setSessionEncoding(data);
				} catch (UnsupportedEncodingException uee) {
					DBGpLogger.logWarning("encoding from debug engine invalid", this, uee); //$NON-NLS-1$
				}
			}
		}

		asyncSupported = false;
		resp = session.sendSyncCmd(DBGpCommand.featureGet, "-n supports_async"); //$NON-NLS-1$
		if (DBGpUtils.isGoodDBGpResponse(this, resp)) {
			Node child = resp.getParentNode().getFirstChild();
			String supported = DBGpResponse.getAttribute(child, "supported"); //$NON-NLS-1$
			if (supported != null && supported.equals("1")) { //$NON-NLS-1$
				asyncSupported = true;
			}
		}

		resp = session.sendSyncCmd(DBGpCommand.stdout, "-c " + getCaptureStdout()); //$NON-NLS-1$
		DBGpUtils.isGoodDBGpResponse(this, resp);
		resp = session.sendSyncCmd(DBGpCommand.stderr, "-c " + getCaptureStderr()); //$NON-NLS-1$
		DBGpUtils.isGoodDBGpResponse(this, resp);		
	}

