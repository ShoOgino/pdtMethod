	protected boolean equals(Object obj, int recurseDepth) {
		if (obj == this) {
			return true;
		}

		if (!(obj instanceof PHPValue)) {
			return false;
		}

		PHPValue otherValue = (PHPValue) obj;
		// System.out.println("Compare " + fVariable.getFullName() + " with " + otherValue.fVariable.getFullName());

		// the "other" values were NOT necessarily loaded yet (if that is the case then we have to load them - other.getVariables) 
		boolean otherValueNull = otherValue.fValue.getValue() == null;

		if (fVariable.getFullName().equals(otherValue.fVariable.getFullName()) && (otherValueNull || fValue.getValueAsString().equals(otherValue.fValue.getValueAsString()))) {
			// if i don't have childrens means that I am a scalar
			if (!fHasChildren) {
				return !otherValue.fHasChildren;
			}

			// i have children but i did not retrieve them yet
			if (fChildren.length == 0) {
				try {
					getVariables();
				} catch (DebugException e) {
				}
			}

			if (otherValue.fChildren.length == 0) {
				try {
					otherValue.getVariables();
				} catch (DebugException e) {
				}
			}

			if (fChildren.length != otherValue.fChildren.length) {
				return false;
			}

			if (recurseDepth <= 0) {
				return true;
			}

			try {
				for (int i = 0; i < fChildren.length; i++) {
					IVariable myChild = fChildren[i];
					IVariable otherChild = otherValue.fChildren[i];

					if (!((PHPValue) myChild.getValue()).equals(otherChild.getValue(), --recurseDepth)) {
						return false;
					}
				}
			} catch (DebugException e) {
				return false;
			}
			return true;
		}
		return false;
	}

