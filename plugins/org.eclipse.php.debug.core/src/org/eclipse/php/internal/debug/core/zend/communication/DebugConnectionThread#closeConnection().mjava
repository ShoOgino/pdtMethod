	/**
	 * Closes the connection. Destroys the server socket without cleaning the
	 * the request/response tables. The cleaning will be done by
	 * InputMessageHandler on termination.
	 */
	public synchronized void closeConnection() {
		Logger.debugMSG("DebugConnectionThread: Clean socket"); //$NON-NLS-1$ //$NON-NLS-2$
		cleanSocket();

		if (theThread.isAlive()) {
			Logger.debugMSG("DebugConnectionThread: Thread interrupt"); //$NON-NLS-1$ //$NON-NLS-2$
			theThread.interrupt();
		}

		if (socket != null) {
			try {
				if (!socket.isClosed()) {
					Logger.debugMSG("DebugConnectionThread: closing the socket"); //$NON-NLS-1$ //$NON-NLS-2$
					socket.close();
				}
			} catch (Exception exc) {
				PHPDebugPlugin.log(exc);
			}
			socket = null;
		}

		// TODO - Check: Commented out - Causing for the second launch of debug
		// to hang

		/*
		 * Logger.debugMSG("DebuggerCommunicationKit: Terminating inputManager");
		 * if (inputManager != null && inputManager.isAlive()) {
		 * inputManager.terminate(); }Logger.debugMSG(
		 * "DebuggerCommunicationKit: Terminating inputMessageHandler"); if
		 * (inputMessageHandler != null && inputMessageHandler.isAlive()) {
		 * inputMessageHandler.terminate(); }
		 */
	}

