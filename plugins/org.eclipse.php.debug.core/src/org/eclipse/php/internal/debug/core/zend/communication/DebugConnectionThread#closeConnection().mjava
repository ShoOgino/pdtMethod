	/**
	 * Closes the connection.
	 * Destroys the server socket without cleaning the the request/response tables.
	 * The cleaning will be done by InputMessageHandler on termination.
	 */
	public synchronized void closeConnection() {
		Logger.debugMSG("[" + this + "] DebugConnectionThread: Starting closeConnection"); //$NON-NLS-1$ //$NON-NLS-2$
		cleanSocket();

		Logger.debugMSG("[" + this + "] DebugConnectionThread: Thread interrupt"); //$NON-NLS-1$ //$NON-NLS-2$
		if (theThread.isAlive()) {
			theThread.interrupt();
		}

		Logger.debugMSG("[" + this + "] DebugConnectionThread: closing the socket"); //$NON-NLS-1$ //$NON-NLS-2$
		if (socket != null) {
			try {
				if (!socket.isClosed())
					socket.close();
			} catch (Exception exc) {
				PHPDebugPlugin.log(exc);
			}
			socket = null;
		}

		// TODO - Check: Commented out - Causing for the second launch of debug to hang

		/*        Logger.debugMSG("DebuggerCommunicationKit: Terminating inputManager");
		 if (inputManager != null && inputManager.isAlive()) {
		 inputManager.terminate();
		 }
		 Logger.debugMSG("DebuggerCommunicationKit: Terminating inputMessageHandler");
		 if (inputMessageHandler != null && inputMessageHandler.isAlive()) {
		 inputMessageHandler.terminate();
		 } */
	}

