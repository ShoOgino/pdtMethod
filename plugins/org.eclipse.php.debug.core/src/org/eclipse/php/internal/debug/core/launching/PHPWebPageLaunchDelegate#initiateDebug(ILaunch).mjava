	/**
	 * Initiate a debug session.
	 * 
	 * @param launch
	 */
	protected void initiateDebug(ILaunch launch) {
		try {
			// Initiate a debug tunnel in case needed.
			if (!ILaunchManager.RUN_MODE.equals(launch.getLaunchMode())) {
				SSHTunnel tunnel = PHPLaunchUtilities.getSSHTunnel(launch.getLaunchConfiguration());
				if (tunnel != null) {
					tunnel.connect();
				}
			}
			debuggerInitializer.debug(launch);
		} catch (DebugException e) {
			IStatus status = e.getStatus();
			String errorMessage = null;
			if (status == null) {
				Logger.traceException("Unexpected Error return from debuggerInitializer ", e); //$NON-NLS-1$
				fireError(PHPDebugCoreMessages.Debugger_Unexpected_Error_1, e);
				errorMessage = PHPDebugCoreMessages.Debugger_Unexpected_Error_1;
			} else {
				fireError(status);
				errorMessage = status.getMessage();
			}
			String errorTitle = PHPDebugCoreMessages.PHPWebPageLaunchDelegate_DialogError;
			if (ILaunchManager.RUN_MODE.equals(launch.getLaunchMode())) {
				errorTitle = PHPDebugCoreMessages.PHPWebPageLaunchDelegate_DialogErrorRun;
			} else if (ILaunchManager.DEBUG_MODE.equals(launch.getLaunchMode())) {
				errorTitle = PHPDebugCoreMessages.PHPWebPageLaunchDelegate_DialogErrorDebug;
			} else if (ILaunchManager.PROFILE_MODE.equals(launch.getLaunchMode())) {
				errorTitle = PHPDebugCoreMessages.PHPWebPageLaunchDelegate_DialogErrorProfile;
			}
			displayErrorMessage(errorTitle, errorMessage);
		}
	}

