	// Load executables from the preferences.
	private void load() {
		Preferences prefs = PHPProjectPreferences.getModelPreferences();
		items = new HashMap<String, HashMap<String, PHPexeItem>>();

		// Load the executable items that were defined in the registered
		// extensions
		loadExtensions();

		// Load the user-defined executable items

		// Load the item names array
		String namesString = prefs
				.getString(PHPDebugCorePreferenceNames.INSTALLED_PHP_NAMES);
		if (namesString == null) {
			namesString = "";
		}
		final String[] names = namesString.length() > 0 ? namesString
				.split(SEPARATOR) : new String[0];

		// Load the item executable locations array
		String locationsString = prefs
				.getString(PHPDebugCorePreferenceNames.INSTALLED_PHP_LOCATIONS);
		if (locationsString == null) {
			locationsString = "";
		}
		final String[] phpExecutablesLocations = locationsString.length() > 0 ? locationsString
				.split(SEPARATOR)
				: new String[0];

		// Load the item executable ini's array
		String inisString = prefs
				.getString(PHPDebugCorePreferenceNames.INSTALLED_PHP_INIS);
		if (inisString == null) {
			inisString = "";
		}
		// In case there is no preference value for the
		// PHPDebugCorePreferenceNames.INSTALLED_PHP_INIS,
		// the size of the array is set to be the same as the executables array.
		final String[] phpIniLocations = inisString.length() > 0 ? inisString
				.split(SEPARATOR) : new String[phpExecutablesLocations.length];

		// Load the debuggers array
		String debuggersString = prefs
				.getString(PHPDebugCorePreferenceNames.INSTALLED_PHP_DEBUGGERS);
		if (debuggersString == null) {
			debuggersString = "";
		}
		final String[] debuggers = debuggersString.length() > 0 ? debuggersString
				.split(SEPARATOR)
				: new String[0];

		// Add the executable items
		assert names.length == phpExecutablesLocations.length;
		for (int i = 0; i < phpExecutablesLocations.length; i++) {
			String iniLocation = "null".equals(phpIniLocations[i]) ? null : phpIniLocations[i]; //$NON-NLS-1$
			final PHPexeItem item = new PHPexeItem(names[i],
					phpExecutablesLocations[i], iniLocation, debuggers[i]);
			if (item.getExecutable() != null) {
				boolean filterItem = WorkbenchActivityHelper
						.filterItem(new IPluginContribution() {
							public String getLocalId() {
								return item.getDebuggerID();
							}

							public String getPluginId() {
								return PHPDebugPlugin.ID;
							}
						});
				if (!filterItem) {
					addItem(item);
				}
			}
		}

		// Load the defaults
		String defaultsString = prefs
				.getString(PHPDebugCorePreferenceNames.INSTALLED_PHP_DEFAULTS);
		if (defaultsString == null) {
			defaultsString = "";
		}
		// Apply the default items
		final String[] defaults = defaultsString.length() > 0 ? defaultsString
				.split(SEPARATOR) : new String[0];
		for (String defaultExe : defaults) {
			// Get a pair of a debugger id and its default executable
			String[] debuggerDefault = defaultExe.split("=");
			if (debuggerDefault.length == 2) {
				setDefaultItem(debuggerDefault[0], debuggerDefault[1]);
			}
		}
	}

