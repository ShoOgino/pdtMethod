	protected Control createDialogArea(Composite parent) {
		initializeDialogUnits(parent);

		parent = (Composite) super.createDialogArea(parent);
		setTitle(PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_zendDebuggerSettings);

		Composite composite = createSubsection(
				parent,
				PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_zendDebugger);

		fRunWithDebugInfo = addCheckBox(
				composite,
				PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_runWithDebugInfo,
				PHPDebugCorePreferenceNames.RUN_WITH_DEBUG_INFO, 0);

		addLabelControl(composite,
				PHPDebugCoreMessages.DebuggerConfigurationDialog_debugPort,
				PHPDebugCorePreferenceNames.ZEND_DEBUG_PORT);
		fDebugTextBox = addTextField(composite,
				PHPDebugCorePreferenceNames.ZEND_DEBUG_PORT, 6, 2);
		GridData gridData = (GridData) fDebugTextBox.getLayoutData();
		gridData.widthHint = convertWidthInCharsToPixels(100);
		fDebugTextBox.addModifyListener(new DebugPortValidateListener());

		addLabelControl(
				composite,
				PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_client_host_ip,
				PHPDebugCorePreferenceNames.CLIENT_IP);
		autoModeButton = new Button(composite, SWT.RADIO);
		autoModeButton
				.setText(PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_AutoMode);
		autoModeButton.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				if (autoModeButton.getSelection()) {
					// bring back a default value
					String value = DefaultScope.INSTANCE.getNode(
							PHPDebugPlugin.ID).get(
							PHPDebugCorePreferenceNames.CLIENT_IP, "127.0.0.1"); //$NON-NLS-1$
					fClientIP.setText(value);
				}
			}
		});
		manualModeButton = new Button(composite, SWT.RADIO);
		manualModeButton
				.setText(PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_ManualMode);
		manualModeButton.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				fClientIP.setEnabled(manualModeButton.getSelection());
			}
		});
		new Label(composite, SWT.NONE);
		fClientIP = addTextField(composite,
				PHPDebugCorePreferenceNames.CLIENT_IP, 0, 2);
		gridData = (GridData) fClientIP.getLayoutData();
		gridData.widthHint = convertWidthInCharsToPixels(100);

		addLabelControl(
				composite,
				PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_debug_response_timeout,
				PHPDebugCorePreferenceNames.DEBUG_RESPONSE_TIMEOUT);
		fDebugResponseTimeout = addTextField(composite,
				PHPDebugCorePreferenceNames.DEBUG_RESPONSE_TIMEOUT, 0, 2);
		gridData = (GridData) fDebugResponseTimeout.getLayoutData();
		gridData.widthHint = convertWidthInCharsToPixels(100);
		fDebugResponseTimeout
				.addModifyListener(new DebugResponseTimeoutListener());
		fUseNewProtocol = addCheckBox(
				composite,
				PHPDebugCoreMessages.ZendDebuggerConfigurationDialog_useNewProtocol,
				PHPDebugCorePreferenceNames.ZEND_NEW_PROTOCOL, 0);

		internalInitializeValues(); // Initialize the dialog's values.

		return composite;
	}

