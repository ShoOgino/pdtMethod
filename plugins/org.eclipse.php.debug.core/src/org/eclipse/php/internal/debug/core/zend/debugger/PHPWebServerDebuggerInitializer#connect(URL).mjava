	public static void connect(URL url) throws DebugException {
		try {
			URLConnection connection = url.openConnection();
			String headerKey = connection.getHeaderFieldKey(1);
			if (headerKey == null) {
				Logger.log(Logger.WARNING, "No HeaderKey returned by server. Most likely not started");
				String errorMessage = PHPDebugCoreMessages.DebuggerConnection_Problem_1;
				throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.INTERNAL_ERROR, errorMessage, null));
			}

			for (int i = 1; (headerKey = connection.getHeaderFieldKey(i)) != null; i++) {
				if (headerKey.equals("X-Zend-Debug-Server")) {
					String headerValue = connection.getHeaderField(headerKey);
					if (!headerValue.equals("OK")) {
						Logger.log(Logger.WARNING, "Unexpected Header Value returned by Server. " + headerValue);
						String errorMessage = PHPDebugCoreMessages.DebuggerConnection_Problem_2 + " - " + headerValue;
						throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.INTERNAL_ERROR, errorMessage, null));
					}
					break;
				}
			}

			InputStream inputStream = connection.getInputStream();
			while (inputStream.read() != -1)
				;

		} catch (UnknownHostException exc) {
			Logger.log(Logger.WARNING, "Unknown Host Exception.");
			String errorMessage = PHPDebugCoreMessages.DebuggerConnection_Problem_3;
			throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.INTERNAL_ERROR, errorMessage, exc));
		} catch (ConnectException exc) {
			Logger.logException("Unable to connect to URL " + url, exc);
			String errorMessage = MessageFormat.format(PHPDebugCoreMessages.DebuggerConnection_Failed_1, new String[] { url.toString() });
			throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.DEBUG_CONNECTION_ERROR, errorMessage, null));
		} catch (IOException exc) {
			Logger.logException("Unable to connect to URL " + url, exc);
			String baseURL = url.toString();
			int queryPartIndex = baseURL.indexOf('?');
			if (queryPartIndex > -1) {
				baseURL = baseURL.substring(0, queryPartIndex);
			}
			String filePath = url.getPath();
			if (filePath.startsWith("/")) {
				filePath = filePath.substring(1);
			}
			String errorMessage = MessageFormat.format(PHPDebugCoreMessages.DebuggerConnection_Failed_1, new String[] { baseURL, filePath });
			throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.DEBUG_CONNECTION_ERROR, errorMessage, null));
		} catch (Exception exc) {
			Logger.logException("Unexpected exception communicating with server", exc);
			String errorMessage = exc.getMessage();
			throw new DebugException(new Status(IStatus.ERROR, PHPDebugPlugin.getID(), IPHPConstants.INTERNAL_ERROR, errorMessage, exc));
		}
	}

