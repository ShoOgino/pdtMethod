	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant#
	 * findSourceElements(java.lang.Object)
	 */
	@Override
	public Object[] findSourceElements(Object object) throws CoreException {
		try {
			// Check if the source should be retrieved from the server.
			// If so, get it.
			Object[] sourceElements = getRemoteSourceElements(object, false);
			if (sourceElements != EMPTY) {
				return sourceElements;
			}
		} catch (CoreException ce) {
		}
		// In case that the source should be obtained from the local client, or,
		// in case that the source was
		// not found on the client, perform the code below.
		try {
			// Try to get it locally.
			Object[] result = getLocalSourceElements(object);
			if (result != EMPTY) {
				return result;
			}
		} catch (CoreException ce) {
		}

		List<Object> results = new ArrayList<>();
		CoreException single = null;
		MultiStatus multiStatus = null;
		String name = getSourceName(object);
		if (name != null) {
			ISourceContainer[] containers = getSourceContainers();
			for (int i = 0; i < containers.length; i++) {
				try {
					ISourceContainer container = getDelegateContainer(containers[i]);
					if (container != null) {
						Object[] objects = container.findSourceElements(name);
						if (objects.length > 0) {
							if (isFindDuplicates()) {
								for (int j = 0; j < objects.length; j++) {
									results.add(objects[j]);
								}
							} else {
								if (objects.length == 1) {
									return objects;
								}
								return new Object[] { objects[0] };
							}
						} else {
							// Try to get the file remotely from the server
							return getRemoteSourceElements(object, true);
						}
					}
				} catch (CoreException e) {
					if (single == null) {
						single = e;
					} else if (multiStatus == null) {
						multiStatus = new MultiStatus(PHPDebugPlugin.ID, PHPDebugPlugin.INTERNAL_ERROR,
								new IStatus[] { single.getStatus() }, SourceLookupMessages.Source_Lookup_Error, null);
						multiStatus.add(e.getStatus());
					} else {
						multiStatus.add(e.getStatus());
					}
				}
			}
		}
		if (results.isEmpty()) {
			if (multiStatus != null) {
				throw new CoreException(multiStatus);
			} else if (single != null) {
				throw single;
			}
			return EMPTY;
		}
		return results.toArray();
	}

