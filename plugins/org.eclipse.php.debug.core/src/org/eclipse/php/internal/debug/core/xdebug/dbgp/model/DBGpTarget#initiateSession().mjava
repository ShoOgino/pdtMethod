	/**
	 * initiate the session, this cannot be called from the DBGpSession response
	 * handler thread as we install breakpoints synchronously and block waiting
	 * for the response thread to pick them up, so we will deadlock
	 * 
	 */
	private void initiateSession() {
		if (targetState != STATE_INIT_SESSION_WAIT && targetState != STATE_STARTED_SESSION_WAIT) {
			DBGpLogger.logWarning("initiateSession in Wrong State: " + targetState, this, null);
		}
		// refreshStackFrames = true;
		stackFrames = null;
		currentVariables = null;

		superGlobalVars = null;
		session.startSession();
		// we are effectively suspended once the session has handshaked until we
		// run
		setState(STATE_STARTED_SUSPENDED);

		try {
			negotiateDBGpFeatures();
			loadPredefinedBreakpoints();
			if (!stopAtStart) {
				// resume();

				if (session != null) {
					// set state before issuing a run otherwise a timing window occurs where
					// a run could suspend, the thread sets state to suspend but then this
					// thread sets it to running.
					setState(STATE_STARTED_RUNNING); 				
					session.sendAsyncCmd(DBGpCommand.run);
				}

			} else {
				// try to say we have suspended, then do a step_into
				suspended(DebugEvent.BREAKPOINT);
				stepInto();
			}
		} catch (DebugException e) {
		}
	}

