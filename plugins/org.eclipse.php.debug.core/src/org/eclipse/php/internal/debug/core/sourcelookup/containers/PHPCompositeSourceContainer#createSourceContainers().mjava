	protected ISourceContainer[] createSourceContainers() throws CoreException {
		ArrayList<ISourceContainer> containers = new ArrayList<ISourceContainer>();

		ISourceContainer projectContainer = new ProjectSourceContainer(project, false);
		containers.add(projectContainer);
		PHPProjectOptions options = PHPProjectOptions.forProject(project);
		if (options != null) {
			IIncludePathEntry[] entries = options.readRawIncludePath();
			if (entries != null) {
				for (IIncludePathEntry element : entries) {
					if (element.getEntryKind() == IIncludePathEntry.IPE_LIBRARY) {
						IPath path = element.getPath();
						File file = new File(path.toOSString());
						if (element.getContentKind() == IIncludePathEntry.K_BINARY) {
							containers.add(new PHPExternalArchiveSourceContainer(file.getAbsolutePath(), false, project));
						} else {
							containers.add(new PHPDirectorySourceContainer(file, false, project));
						}
					} else if (element.getEntryKind() == IIncludePathEntry.IPE_PROJECT) {
						IResource resource = element.getResource();
						if (resource instanceof IContainer) {
							IProject includeProject = element.getResource().getProject();
							containers.add(new ProjectSourceContainer(includeProject, false));
						}
					} else if (element.getEntryKind() == IIncludePathEntry.IPE_VARIABLE) {
						IPath path = element.getPath();
						containers.add(new PHPVariableSourceContainer(path, project));
					}
				}
			}
		}

		ISourceContainer[] scontainers = new ISourceContainer[containers.size()];
		containers.toArray(scontainers);
		return scontainers;
	}

