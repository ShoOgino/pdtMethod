	public static Expression[] sort(Expression[] children) {
		if (PHPProjectPreferences.isSortByName()) {
			List<Expression> list = new ArrayList<Expression>();
			for (Expression expression : children) {
				list.add(expression);
			}
			Collections.sort(list, new Comparator<Expression>() {
				public int compare(Expression o1, Expression o2) {
					return o1.getName()[o1.getName().length - 1].compareTo(o2
							.getName()[o1.getName().length - 1]);
				}
			});
			return list.toArray(new Expression[list.size()]);
		} else {
			return children;
		}
	}

