	/**
	 * Returns path mapper associated with the given launch configuration
	 * 
	 * @param launchConfiguration
	 *            Launch configuration
	 * @return path mapper
	 */
	public static PathMapper getByLaunchConfiguration(
			ILaunchConfiguration launchConfiguration) {
		PathMapper pathMapper = null;
		try {
			String serverName = launchConfiguration.getAttribute(Server.NAME,
					(String) null);
			if (serverName != null) {
				/*
				 * Try to find path mapper with the use of the server that might
				 * be bound to the corresponding launch configuration.
				 */
				pathMapper = getByServer(ServersManager.getServer(serverName));
			} else {
				/*
				 * If no server could be found (launch configuration for
				 * externally triggered sessions), create temporary one and bind
				 * it with the launch configuration.
				 */
				pathMapper = getInstance().launchConfigPathMapper
						.get(launchConfiguration);
				if (pathMapper == null) {
					pathMapper = new PathMapper();
					getInstance().launchConfigPathMapper
							.put(launchConfiguration, pathMapper);
				}
			}
		} catch (CoreException e) {
			PHPDebugPlugin.log(e);
		}
		return pathMapper;
	}

