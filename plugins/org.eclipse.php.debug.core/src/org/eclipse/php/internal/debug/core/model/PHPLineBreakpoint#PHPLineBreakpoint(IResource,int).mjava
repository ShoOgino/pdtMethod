	/**
	 * Constructs a line breakpoint on the given resource at the given line number.
	 * 
	 * @param resource
	 *            file on which to set the breakpoint
	 * @param lineNumber
	 *            1-based line number of the breakpoint
	 * @throws CoreException
	 *             if unable to create the breakpoint
	 */
	public PHPLineBreakpoint(final IResource resource, final int lineNumber) throws CoreException {

		IWorkspaceRunnable runnable = new IWorkspaceRunnable() {
			@Override
			public void run(IProgressMonitor monitor) throws CoreException {
				IMarker marker = resource.createMarker(MARKER_ID);
				marker.setAttribute(IBreakpoint.ENABLED, Boolean.TRUE);
				marker.setAttribute(IMarker.LINE_NUMBER, lineNumber);
				marker.setAttribute(IBreakpoint.ID, getModelIdentifier());
				marker.setAttribute(IMarker.MESSAGE, NLS.bind(PHPDebugCoreMessages.LineBreakPointMessage_1,
						new String[] { resource.getName(), Integer.toString(lineNumber) }));
				setMarker(marker);
				setEnabled(true);
				register(true);
			}
		};
		run(getMarkerRule(resource), runnable);
	}

