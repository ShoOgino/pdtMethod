	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.php.xdebug.core.dbgp.session.DBGpSessionListener#SessionCreated
	 * (org.eclipse.php.xdebug.core.session.DBGpSession)
	 */
	public boolean SessionCreated(DBGpSession session) {
		// need to determine if the session is one we want, but only if we
		// are looking for a session, this session may be for us but if
		// we already have a session, the debugtarget is would have to be
		// reset to handle this new session, so safer to ignore it.
		boolean isMine = false;
		isMine = DBGpSessionHandler.getInstance().isCorrectSession(session,
				this);
		if (isMine) {
			if (this.session == null && !isTerminating()) {
				session.setDebugTarget(this);
				this.session = session;

				if (STATE_INIT_SESSION_WAIT == targetState
						|| STATE_CREATE == targetState) {

					// if we are in initial session wait, fire the event to
					// unblock if we haven't even got that far, fire the event
					// so that
					// when we do enter initial session wait, we just go
					// straight
					// through.
					te.signalEvent();
				} else {
					initiateSession();
				}
			} else {
				// it was for me but I am currently processing a session, or
				// terminating, so end it. In fact we could just return false
				// here as well.
				// session.endSession();
				// well it is mine, but I am already handling a session so so it
				// isn't mine and it
				// will be terminated.
				isMine = false;
			}
		}
		return isMine;
	}

