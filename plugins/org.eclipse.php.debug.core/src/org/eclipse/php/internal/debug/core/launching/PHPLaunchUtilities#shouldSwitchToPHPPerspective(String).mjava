	// Returns true iff the PHP perspective should be displayed.
	private static boolean shouldSwitchToPHPPerspective(String perspectiveID) {
		// check whether we should ask the user.
		IPreferenceStore store = PHPUiPlugin.getDefault().getPreferenceStore();
		String option = store
				.getString(PreferenceConstants.SWITCH_BACK_TO_PHP_PERSPECTIVE);
		if (MessageDialogWithToggle.ALWAYS.equals(option)) {
			return true;
		}
		if (MessageDialogWithToggle.NEVER.equals(option)) {
			return false;
		}

		// Check whether the desired perspective is already active.
		IPerspectiveRegistry registry = PlatformUI.getWorkbench()
				.getPerspectiveRegistry();
		IPerspectiveDescriptor perspective = registry
				.findPerspectiveWithId(perspectiveID);
		if (perspective == null) {
			return false;
		}

		IWorkbenchWindow window = PlatformUI.getWorkbench()
				.getActiveWorkbenchWindow();
		if (window != null) {
			IWorkbenchPage page = window.getActivePage();
			if (page != null) {
				IPerspectiveDescriptor current = page.getPerspective();
				if (current != null && current.getId().equals(perspectiveID)) {
					return false;
				}
			}

			// Ask the user whether to switch
			MessageDialogWithToggle m = MessageDialogWithToggle
					.openYesNoQuestion(
							window.getShell(),
							PHPDebugCoreMessages.PHPLaunchUtilities_PHPPerspectiveSwitchTitle,
							NLS
									.bind(
											PHPDebugCoreMessages.PHPLaunchUtilities_PHPPerspectiveSwitchMessage,
											new String[] { perspective
													.getLabel() }),
							PHPDebugCoreMessages.PHPLaunchUtilities_rememberDecision,
							false, store,
							PreferenceConstants.SWITCH_BACK_TO_PHP_PERSPECTIVE);

			int result = m.getReturnCode();
			switch (result) {
			case IDialogConstants.YES_ID:
			case IDialogConstants.OK_ID:
				return true;
			case IDialogConstants.NO_ID:
				return false;
			}
		}
		return false;
	}

