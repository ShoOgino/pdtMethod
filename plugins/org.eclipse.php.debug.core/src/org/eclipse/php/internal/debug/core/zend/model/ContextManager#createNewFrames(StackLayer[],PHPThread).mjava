	private IStackFrame[] createNewFrames(StackLayer[] layers, PHPThread thread)
			throws DebugException {

		RemoteDebugger remoteDebugger = (RemoteDebugger) fDebugger;
		String cwd = null;
		String currentScript = null;

		IStackFrame[] frames = new IStackFrame[((layers.length - 1) * 2) + 1];
		int frameCt = ((layers.length - 1) * 2 + 1);
		for (int i = 1; i < layers.length; i++) {

			String sName = layers[i].getCallerFileName();
			String rName = layers[i].getResolvedCallerFileName();
			if (rName == null) {
				rName = remoteDebugger
						.convertToLocalFilename(
								sName,
								cwd,
								frameCt < frames.length ? ((PHPStackFrame) frames[frameCt])
										.getSourceName()
										: null);
				if (rName == null) {
					rName = sName;
				}
				layers[i].setResolvedCallerFileName(rName);
			}

			frames[frameCt - 1] = new PHPStackFrame(thread, sName, layers[i]
					.getCallerFunctionName(),
					layers[i].getCallerLineNumber() + 1, frameCt, rName,
					layers[i - 1].getVariables());
			frameCt--;

			sName = layers[i].getCalledFileName();
			rName = layers[i].getResolvedCalledFileName();
			if (rName == null) {
				rName = remoteDebugger
						.convertToLocalFilename(sName, cwd, rName);
				if (rName == null) {
					rName = sName;
				}
				layers[i].setResolvedCalledFileName(rName);
			}

			frames[frameCt - 1] = new PHPStackFrame(thread, sName, layers[i]
					.getCalledFunctionName(),
					layers[i].getCalledLineNumber() + 1, frameCt, layers[i],
					rName, layers[i].getVariables());
			frameCt--;

			if (!layers[i].getCalledFileName()
					.equals(fTarget.getLastFileName())) {
				currentScript = rName;
			}
		}

		String resolvedFile = remoteDebugger.convertToLocalFilename(fTarget
				.getLastFileName(), cwd, currentScript);
		if (resolvedFile == null) {
			resolvedFile = fTarget.getLastFileName();
		}
		frames[0] = new PHPStackFrame(thread, fTarget.getLastFileName(),
				(layers.length == 1) ? "" : frames[1].getName(), fTarget
						.getLastStop(), frameCt, resolvedFile,
				getLocalVariables());

		return frames;
	}

