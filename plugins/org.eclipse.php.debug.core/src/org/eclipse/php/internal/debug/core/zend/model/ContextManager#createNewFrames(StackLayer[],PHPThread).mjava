	private IStackFrame[] createNewFrames(StackLayer[] layers, PHPThread thread) throws DebugException {

		RemoteDebugger remoteDebugger = (RemoteDebugger) fDebugger;
		String cwd = null;
		String currentScript = null;

		IStackFrame[] frames = new IStackFrame[layers.length];
		int frameCt = layers.length;
		for (int i = 1; i < layers.length; i++) {

			String sName = layers[i].getCallerFileName();
			String rName = layers[i].getResolvedCallerFileName();
			if (rName == null) {
				rName = remoteDebugger.convertToLocalFilename(sName, cwd,
						frameCt < frames.length ? ((PHPStackFrame) frames[frameCt]).getSourceName() : null);
				if (rName == null) {
					rName = sName;
				}
				layers[i].setResolvedCallerFileName(rName);
			}

			frames[frameCt - 1] = new PHPStackFrame(thread, sName, rName, layers[i].getCallerFunctionName(),
					layers[i].getCallerLineNumber() + 1, layers[i].getDepth(), layers[i - 1].getVariables());
			frameCt--;

			if (!layers[i].getCalledFileName().equals(fTarget.getLastFileName())) {
				currentScript = rName;
			}
		}

		String resolvedFile = remoteDebugger.convertToLocalFilename(fTarget.getLastFileName(), cwd, currentScript);
		if (resolvedFile == null) {
			resolvedFile = fTarget.getLastFileName();
		}
		PHPStackFrame topFrame = new PHPStackFrame(thread, fTarget.getLastFileName(), resolvedFile,
				(layers.length == 1) ? "" //$NON-NLS-1$
						: layers[layers.length - 1].getCalledFunctionName(),
				fTarget.getLastStop(), frameCt, getLocalVariables());

		if (fFrames != null) {
			frames[0] = mergeFrame((PHPStackFrame) fFrames[0], topFrame);
		} else {
			frames[0] = topFrame;
		}

		return frames;
	}

