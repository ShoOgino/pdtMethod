	/**
	 * set a variable to a particular value
	 * 
	 * @param var
	 * @param data
	 * @return
	 */
	public boolean setProperty(DBGpVariable var, String data) {

		// XDebug expects all data to be base64 encoded.
		// In this case we don't use session encoding, we use transfer
		// encoding as we want control over the bytes being placed into the
		// variable at the other end.
		String encoded;
		try {
			encoded = Base64.encode(data.getBytes(getBinaryEncoding()));
		} catch (UnsupportedEncodingException e1) {
			// should never happen
			DBGpLogger.logException("unexpected encoding problem", this, e1); //$NON-NLS-1$
			encoded = Base64.encode(data.getBytes());
		}
		String fullName = var.getFullName();
		String escapedFullName = fullName != null ? escapeFullName(fullName) : ""; //$NON-NLS-1$
		String stackLevel = String.valueOf(var.getStackLevel());
		String args = "-n " + escapedFullName + " -d " + stackLevel + " -l " + encoded.length() + " -- " + encoded; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		if (var.getDataType() == DataType.PHP_STRING) {
			// this ensures XDebug doesn't use eval
			args = "-t string " + args; //$NON-NLS-1$
		}
		DBGpResponse resp = session.sendSyncCmd(DBGpCommand.propSet, args);
		boolean success = false;
		if (DBGpUtils.isGoodDBGpResponse(this, resp)) {
			if (resp.getTopAttribute("success").equals("1")) { //$NON-NLS-1$ //$NON-NLS-2$
				if (!stackLevel.equals("0")) { //$NON-NLS-1$
					// a variable has been changed on a previous stack
					// the gui won't have updated the current stack
					// level view, so we invalidate the cache to reload
					// the data. The variable also could have been a super
					// global, so invalid the superglobal cache as well.
					currentVariables = null;
					superGlobalVars = null;
				}
				success = true;
			}
		}
		return success;
	}

