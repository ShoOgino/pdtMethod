	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Runnable#run()
	 */
	@Override
	public void run() {
		try {
			boolean streamerReqd = false;
			try {
				ILaunchConfiguration config = launch.getLaunchConfiguration();
				if (config.getAttribute(PHPDebugCorePreferenceNames.PHP_DEBUGGER_ID, "") //$NON-NLS-1$
						.equals(DebuggerCommunicationDaemon.ZEND_DEBUGGER_ID)) {
					streamerReqd = config.getAttribute(IPHPDebugConstants.RUN_WITH_DEBUG_INFO, true)
							|| launch.getLaunchMode().equals(ILaunchManager.DEBUG_MODE);
				}
			} catch (CoreException e) {
			}
			if (streamerReqd) {

				StreamGobbler errorGobbler = new StreamGobbler(process.getErrorStream(), true);
				StreamGobbler inputGobbler = new StreamGobbler(process.getInputStream(), false);

				ConsolePlugin.getDefault().getConsoleManager().addConsoleListener(this);

				errorGobbler.start();
				inputGobbler.start();
			}
			int exitValue = process.waitFor();
			IDebugTarget debugTarget = launch.getDebugTarget();
			if (debugTarget != null) {
				IProcess p = debugTarget.getProcess();
				if (p instanceof PHPProcess) {
					((PHPProcess) p).setExitValue(exitValue);
				}
			}

		} catch (Throwable t) {
		} finally {
			ConsolePlugin.getDefault().getConsoleManager().removeConsoleListener(this);
		}
	}

