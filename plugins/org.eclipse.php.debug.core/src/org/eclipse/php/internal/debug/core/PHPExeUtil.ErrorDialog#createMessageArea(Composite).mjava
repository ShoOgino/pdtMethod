		protected Control createMessageArea(Composite composite) {
			Image image = getImage();
			if (image != null) {
				imageLabel = new Label(composite, SWT.NULL);
				image.setBackground(imageLabel.getBackground());
				imageLabel.setImage(image);
				GridDataFactory.fillDefaults().align(SWT.CENTER, SWT.BEGINNING)
						.applyTo(imageLabel);
			}
			Composite descriptionComposite = new Composite(composite, SWT.NONE);
			GridLayout layout = new GridLayout(1, true);
			layout.marginHeight = 0;
			layout.marginWidth = 0;
			layout.verticalSpacing = 10;
			descriptionComposite.setLayout(layout);
			// create message
			if (message != null) {
				messageLabel = new Label(descriptionComposite,
						getMessageLabelStyle());
				messageLabel.setText(message);
				GridDataFactory
						.fillDefaults()
						.align(SWT.FILL, SWT.BEGINNING)
						.grab(true, false)
						.hint(convertHorizontalDLUsToPixels(IDialogConstants.MINIMUM_MESSAGE_AREA_WIDTH),
								SWT.DEFAULT).applyTo(messageLabel);
			}
			// create description part with link
			if (linkMessage != null) {
				messageLink = new Link(descriptionComposite, SWT.WRAP);
				messageLink
						.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
				messageLink.setText(linkMessage);
				messageLink.addSelectionListener(new SelectionAdapter() {
					public void widgetSelected(SelectionEvent e) {
						linkClicked();
					};
				});
				GridDataFactory
						.fillDefaults()
						.align(SWT.FILL, SWT.BEGINNING)
						.grab(true, false)
						.hint(convertHorizontalDLUsToPixels(IDialogConstants.MINIMUM_MESSAGE_AREA_WIDTH),
								SWT.DEFAULT).applyTo(messageLink);
			}
			return composite;
		}

