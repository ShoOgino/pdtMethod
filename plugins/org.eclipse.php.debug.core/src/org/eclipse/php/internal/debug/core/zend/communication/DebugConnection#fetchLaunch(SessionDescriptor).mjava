	protected ILaunch fetchLaunch(SessionDescriptor sessionDescriptor) throws CoreException {
		final String query = sessionDescriptor.getStartedNotification().getQuery();
		// Check for a file content request session.
		String fileContentRequestFile = getFileContentRequestPath(query);
		if (fileContentRequestFile != null) {
			hookFileContentSession(sessionDescriptor.getStartedNotification(), fileContentRequestFile,
					getLineNumber(query));
			return null;
		}
		// Find out if the session is for profile.
		boolean isProfile = false;
		String additionalOptions = sessionDescriptor.getStartedNotification().getOptions();
		if (additionalOptions != null && additionalOptions.indexOf("start_profile=1") > -1) { //$NON-NLS-1$
			isProfile = true;
		}
		/*
		 * The super implementation failed to hook the session to any existing
		 * launch, or the session is a profile session.
		 */
		boolean isDebugOrProfileURL = isDebugOrProfileURL(query);
		int sessionID = sessionDescriptor.getId();
		if (!isDebugOrProfileURL) {
			/*
			 * First, find out if the session ID is not an older one that was
			 * sent because the browser cached a cookie which is no longer valid
			 * for us.
			 */
			if (sessionID > 0 && sessionID <= DebugSessionIdGenerator.getLastGenerated()) {
				if (PHPDebugPlugin.DEBUG) {
					PHPDebugPlugin.logErrorMessage(
							"Terminating a requested session.\nThe session id received is lower than the last generated."); //$NON-NLS-1$
				}
				return null;
			}
		}
		/*
		 * In this case we can assume that the launch is similar to a web server
		 * debug or profile session.
		 */
		ILaunchConfigurationType lcType = DebugPlugin.getDefault().getLaunchManager()
				.getLaunchConfigurationType(REMOTE_LAUNCH_TYPE_ID);
		/*
		 * Prepare to use the debug or profile perspective in case it's not
		 * installed yet (first time of using the Debug/Profile URL).
		 */
		if (!isProfile) {
			DebugUITools.setLaunchPerspective(lcType, "debug", //$NON-NLS-1$
					"org.eclipse.debug.ui.DebugPerspective"); //$NON-NLS-1$
		} else {
			DebugUITools.setLaunchPerspective(lcType, "profile", //$NON-NLS-1$
					"org.eclipse.php.profile.ui.perspective"); //$NON-NLS-1$
		}
		ILaunchConfigurationWorkingCopy wc = lcType.newInstance(null,
				(isProfile) ? SERVER_PROFILE_NAME : SERVER_DEBUG_NAME);
		wc.setAttribute(IPHPDebugConstants.RUN_WITH_DEBUG_INFO, true);
		if (additionalOptions != null
				&& additionalOptions.indexOf(DefaultDebugParametersInitializer.DEBUG_NO_REMOTE + "=1") > -1) { //$NON-NLS-1$
			wc.setAttribute(IPHPDebugConstants.DEBUGGING_USE_SERVER_FILES, true);
		}
		String originalURL = getOriginalURL(additionalOptions);
		if (originalURL == null) {
			// Use the URI instead
			originalURL = sessionDescriptor.getStartedNotification().getUri();
		}
		wc.setAttribute(IDebugParametersKeys.WEB_SERVER_DEBUGGER, Boolean.toString(true));
		wc.setAttribute(Server.BASE_URL, originalURL);
		wc.doSave();
		ILaunch launch = DebugUITools.buildAndLaunch(wc,
				(isProfile) ? ILaunchManager.PROFILE_MODE : ILaunchManager.DEBUG_MODE, new NullProgressMonitor());
		/*
		 * In case we got here, we need to update the PHPSessionLaunchMapper
		 * with the new launch and the acquired launch id. This is a case when
		 * we get a launch id from the toolbar or from the Platform.
		 */
		if (sessionID < 0)
			sessionID = DebugSessionIdGenerator.generateSessionID();
		PHPSessionLaunchMapper.put(sessionID, launch);
		if (PHPDebugPlugin.DEBUG)
			System.out.println("Added a remote launch mapping to session with ID: " //$NON-NLS-1$
					+ sessionID);
		return launch;
	}

