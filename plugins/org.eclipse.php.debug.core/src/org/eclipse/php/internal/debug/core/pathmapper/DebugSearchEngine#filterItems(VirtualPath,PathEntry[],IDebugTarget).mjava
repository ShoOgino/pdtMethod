	private static PathEntry filterItems(VirtualPath remotePath, PathEntry[] entries, IDebugTarget debugTarget) {

		// if there's an entry with exact path, and the server is local - return it without filtering
		ILaunchConfiguration launchConfiguration = debugTarget.getLaunch().getLaunchConfiguration();
		try {
			String serverName = launchConfiguration.getAttribute(Server.NAME, (String) null);
			Server server = ServersManager.getServer(serverName);
			if (server != null && server.isLocal()) {
				for (PathEntry entry : entries) {
					if (entry.getType() == Type.WORKSPACE) {
						IResource resource = ResourcesPlugin.getWorkspace().getRoot().findMember(entry.getPath());
						if (resource != null && resource.getLocation() != null && remotePath.equals(new VirtualPath(resource.getLocation().toOSString()))) {
							return entry;
						}
					}
					else if (remotePath.equals(entry.getAbstractPath())) {
						return entry;
					}
				}
			}
		} catch (CoreException e) {
		}

		IPathEntryFilter[] filters = initializePathEntryFilters();
		for (int i = 0; i < filters.length; ++i) {
			entries = filters[i].filter(entries, remotePath, debugTarget);
		}
		return entries.length > 0 ? entries[0] : null;
	}

