	protected IBreakpoint[] findBreakpoints(String processFileLocation, PHPDebugTarget debugTarget) {
		IBreakpointManager breakpointManager = debugTarget.getBreakpointManager();
		if (!breakpointManager.isEnabled()) {
			return new IBreakpoint[0];
		}
		IBreakpoint[] breakpoints = breakpointManager.getBreakpoints(IPHPDebugConstants.ID_PHP_DEBUG_CORE);
		List<IBreakpoint> matches = new LinkedList<IBreakpoint>();
		for (IBreakpoint bp : breakpoints) {
			IResource resource = ResourcesPlugin.getWorkspace().getRoot().findMember(processFileLocation);
			// Might be an Eclipse linked resource
			if (resource == null) {
				IResource[] resources = ResourcesPlugin.getWorkspace().getRoot()
						.findFilesForLocationURI(URIUtil.toURI(processFileLocation));
				if (resources.length > 0) {
					resource = resources[0];
				}
			}
			try {
				String bpFileLocation = bp.getMarker().getResource().getRawLocation().makeAbsolute().toOSString();
				/*
				 * Use NIO libraries to handle comparison of files that might
				 * contains symbolic links in their paths.
				 */
				java.nio.file.Path bpFilePath = FileSystems.getDefault().getPath(bpFileLocation, ""); //$NON-NLS-1$
				java.nio.file.Path processFilePath = FileSystems.getDefault().getPath(processFileLocation, ""); //$NON-NLS-1$
				if (bp.getMarker().getResource().equals(resource) || Files.isSameFile(bpFilePath, processFilePath)) {
					matches.add(bp);
					continue;
				}
				String secondaryId = (String) bp.getMarker()
						.getAttribute(StructuredResourceMarkerAnnotationModel.SECONDARY_ID_KEY);
				if (secondaryId != null) {
					IPath path = Path.fromPortableString(secondaryId);
					if ((path.getDevice() == null) && (path.toString().startsWith("org.eclipse.dltk"))) { //$NON-NLS-1$
						String fullPathString = path.toString();
						String absolutePath = fullPathString.substring(fullPathString.indexOf(':') + 1);
						path = Path.fromPortableString(absolutePath);
					} else {
						path = EnvironmentPathUtils.getLocalPath(path);
					}
					secondaryId = path.toString();
					if (VirtualPath.isAbsolute(processFileLocation)
							&& (new VirtualPath(processFileLocation).equals(new VirtualPath(secondaryId)))
							|| resource != null && secondaryId.equals(resource.getLocation().toString())) {
						matches.add(bp);
					}
				}
			} catch (Exception e) {
				PHPDebugPlugin.log(e);
			}
		}
		return matches.toArray(new IBreakpoint[matches.size()]);
	}

