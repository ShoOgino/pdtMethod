	protected IBreakpoint[] findBreakpoints(String localPath,
			PHPDebugTarget debugTarget) {

		IBreakpointManager breakpointManager = debugTarget
				.getBreakpointManager();
		if (!breakpointManager.isEnabled()) {
			return new IBreakpoint[0];
		}

		IBreakpoint[] breakpoints = breakpointManager
				.getBreakpoints(IPHPDebugConstants.ID_PHP_DEBUG_CORE);
		List<IBreakpoint> l = new LinkedList<IBreakpoint>();

		for (IBreakpoint bp : breakpoints) {

			IResource resource = ResourcesPlugin.getWorkspace().getRoot()
					.findMember(localPath);

			if (resource != null) {
				if (bp.getMarker().getResource().equals(resource)) {
					l.add(bp);
				}
			} else {
				try {
					String secondaryId = (String) bp
							.getMarker()
							.getAttribute(
									StructuredResourceMarkerAnnotationModel.SECONDARY_ID_KEY);
					if (secondaryId != null) {
						Path secondaryIdPath = new Path(secondaryId);
						if (EnvironmentPathUtils.isFull(secondaryIdPath)) {
							secondaryId = EnvironmentPathUtils
									.getLocalPathString(secondaryIdPath);
						}
						if (new VirtualPath(localPath).equals(new VirtualPath(
								secondaryId))) {
							l.add(bp);
						}
					}
				} catch (Exception e) {
					PHPDebugPlugin.log(e);
				}
			}
		}
		return l.toArray(new IBreakpoint[l.size()]);
	}

