	/**
	 * Display a wait window, indicating the user that the debug session is in
	 * progress and the PDT is waiting for the debugger's response. Once a
	 * response arrives, the {@link #hideWaitForDebuggerMessage()} should be
	 * called to remove the window. In case a response does not arrive, there is
	 * a good chance that the {@link #showLaunchErrorMessage()} should be
	 * called.
	 * 
	 * @param debugConnection
	 * @see #hideWaitForDebuggerMessage()
	 * @see #showLaunchErrorMessage()
	 */
	public static void showWaitForDebuggerMessage(final DebugConnection debugConnection) {
		if (progressDialog != null) {
			// Allow only one progress indicator
			return;
		}
		Display.getDefault().asyncExec(new Runnable() {
			public void run() {
				progressDialog = new DebuggerDelayProgressMonitorDialog();
				if (progressDialog.open() == Window.CANCEL) {
					debugConnection.disconnect();
				}
				progressDialog = null;
			}
		});
	}

