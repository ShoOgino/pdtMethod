	private void parseProperty(Node property) {
		/*
		 * We could have a property which has no name, full-name or type as a
		 * result of an expression evaluation
		 */
		name = DBGpResponse.getAttribute(property, "name"); //$NON-NLS-1$
		setFullName(DBGpResponse.getAttribute(property, "fullname")); //$NON-NLS-1$
		setAddress(DBGpResponse.getAttribute(property, "address")); //$NON-NLS-1$
		type = DBGpResponse.getAttribute(property, "type"); //$NON-NLS-1$
		if (type.equals(PHP_BOOL)) {
			value = new DBGpBoolValue(this, property);
		} else if (type.equals(PHP_INT)) {
			value = new DBGpNumValue(this, property, PHP_INT);
		} else if (type.equals(PHP_FLOAT)) {
			value = new DBGpNumValue(this, property, PHP_FLOAT);
		} else if (type.equals(PHP_STRING)) {
			String size = DBGpResponse.getAttribute(property, "size"); //$NON-NLS-1$
			int strByteLen = -1;
			try {
				strByteLen = Integer.parseInt(size);
			} catch (NumberFormatException e) {
			}
			value = new DBGpStringValue(this, property, strByteLen);
		} else if (type.equals(PHP_RESOURCE)) {
			value = new DBGpResourceValue(this, property);
		} else if (type.equals(PHP_NULL)) {
			value = new DBGpNullValue(this, property);
		} else if (type.equals(PHP_ARRAY) || type.equals(PHP_OBJECT)) {
			value = new DBGpContainerValue(this, property);
		}
		String facets = DBGpResponse.getAttribute(property, "facet"); //$NON-NLS-1$
		if (facets.contains("static")) //$NON-NLS-1$
			addFacets(Facet.MOD_STATIC);
		if (facets.contains("public")) //$NON-NLS-1$
			addFacets(Facet.MOD_PUBLIC);
		else if (facets.contains("protected")) //$NON-NLS-1$
			addFacets(Facet.MOD_PROTECTED);
		else if (facets.contains("private")) //$NON-NLS-1$
			addFacets(Facet.MOD_PRIVATE);
		// Hopefully this will put the $ at appropriate point in the name
		if (getFullName().length() > 1
				&& name.equals(getFullName().substring(1))) {
			name = getFullName();
		}
		if (hasFacet(KIND_ARRAY_MEMBER))
			name = '[' + name + ']';
		else if (hasFacet(Facet.MOD_STATIC) && name.startsWith(":")) { //$NON-NLS-1$
			name = name.substring(name.lastIndexOf(':') + 1);
		} else if (name.equals("::")) //$NON-NLS-1$
			name = VariablesUtil.CLASS_INDICATOR;
	}

