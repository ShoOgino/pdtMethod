	@Override
	public void update(Expression expression, int depth) {
		if (expression.getValue().getDataType() == PHP_VIRTUAL_CLASS)
			return;
		byte[] value = getExpressionValue(expression, depth);
		ExpressionValue expressionValue = expressionValueDeserializer.deserializer(expression, value);
		// Workaround for fetching static members for objects
		if (expressionValue.getDataType() == PHP_OBJECT && CurrentContextExpression.supportsStaticContext(debugger)) {
			Expression[] expressionStaticNodes = fExpressionsUtil
					.fetchStaticMembers((String) expressionValue.getValue());
			List<Expression> allNodes = new ArrayList<>();
			allNodes.addAll(Arrays.asList(expressionStaticNodes));
			allNodes.addAll(Arrays.asList(expressionValue.getChildren()));
			expressionValue = new ExpressionValue(PHP_OBJECT, expressionValue.getValue(),
					expressionValue.getValueAsString(), allNodes.toArray(new Expression[allNodes.size()]),
					expressionValue.getChildrenCount() + expressionStaticNodes.length);
		}
		// Sort object members by type & name
		if (!PHPProjectPreferences.isSortByName() && expressionValue.getDataType() == PHP_OBJECT)
			VariablesUtil.sortObjectMembers(expressionValue.getOriChildren());
		expression.setValue(expressionValue);
	}

