	/**
	 * create the DBGp preferences from the UI preferences.
	 * <ul>
	 * <li>Array Depth
	 * <li>Children
	 * <li>show super globals
	 * 
	 * @return
	 */
	public static DBGpPreferences createSessionPreferences() {
		DBGpPreferences sessionPrefs = new DBGpPreferences();
		Preferences uiPrefs = getPreferences();
		int maxDepth = uiPrefs
				.getInt(XDebugPreferenceMgr.XDEBUG_PREF_ARRAYDEPTH);
		if (1 == maxDepth) {
			XDebugPreferenceMgr.setDefaults();
			maxDepth = XDebugPreferenceMgr.getDepthDefault();
		}
		sessionPrefs
				.setValue(DBGpPreferences.DBGP_MAX_DEPTH_PROPERTY, maxDepth);

		int maxChildren = uiPrefs
				.getInt(XDebugPreferenceMgr.XDEBUG_PREF_CHILDREN);
		sessionPrefs.setValue(DBGpPreferences.DBGP_MAX_CHILDREN_PROPERTY,
				maxChildren);

		boolean getSuperGlobals = uiPrefs
				.getBoolean(XDebugPreferenceMgr.XDEBUG_PREF_SHOWSUPERGLOBALS);
		sessionPrefs.setValue(DBGpPreferences.DBGP_SHOW_GLOBALS_PROPERTY,
				getSuperGlobals);

		// ui stored values are identical to DBGp expected values so no need to
		// convert
		int captureStdout = uiPrefs
				.getInt(XDebugPreferenceMgr.XDEBUG_PREF_CAPTURESTDOUT);
		sessionPrefs.setValue(DBGpPreferences.DBGP_CAPTURE_STDOUT_PROPERTY,
				captureStdout);

		int captureStderr = uiPrefs
				.getInt(XDebugPreferenceMgr.XDEBUG_PREF_CAPTURESTDERR);
		sessionPrefs.setValue(DBGpPreferences.DBGP_CAPTURE_STDERR_PROPERTY,
				captureStderr);

		return sessionPrefs;

	}

