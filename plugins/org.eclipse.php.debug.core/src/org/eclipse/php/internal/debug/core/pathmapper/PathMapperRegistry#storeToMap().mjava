	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.php.internal.core.util.preferences.IXMLPreferencesStorable#
	 * storeToMap()
	 */
	@Override
	public synchronized Map<String, Object> storeToMap() {
		Map<String, Object> elements = new HashMap<>();
		Iterator<?> i = serverPathMapper.keySet().iterator();
		int c = 1;
		while (i.hasNext()) {
			Map<String, Object> entry = new HashMap<>();
			Server server = (Server) i.next();
			PathMapper pathMapper = serverPathMapper.get(server);
			entry.put("server", server.getName()); //$NON-NLS-1$
			if (pathMapper != null) {
				entry.put("mapper", pathMapper.storeToMap()); //$NON-NLS-1$
			}
			elements.put("item" + (c++), entry); //$NON-NLS-1$
		}
		i = phpExePathMapper.keySet().iterator();
		while (i.hasNext()) {
			Map<String, Object> entry = new HashMap<>();
			PHPexeItem phpExeItem = (PHPexeItem) i.next();
			PathMapper pathMapper = phpExePathMapper.get(phpExeItem);
			entry.put("phpExe", phpExeItem.getExecutable().toString()); //$NON-NLS-1$
			if (phpExeItem.getINILocation() != null) {
				entry.put("phpIni", phpExeItem.getINILocation().toString()); //$NON-NLS-1$
			}
			entry.put("mapper", pathMapper.storeToMap()); //$NON-NLS-1$
			elements.put("item" + (c++), entry); //$NON-NLS-1$
		}
		Map<String, Object> root = new HashMap<>();
		root.put("pathMappers", elements); //$NON-NLS-1$
		return root;
	}

