	public Expression[] getCurrentVariables(int depth) {
		Expression contextExpression = new CurrentContextExpression();
		byte[] value = getExpressionValue(contextExpression, depth);
		ExpressionValue variableValue = expressionValueDeserializer
				.deserializer(contextExpression, value);
		Expression[] variables = variableValue.getOriChildren();
		if (variables == null || variables.length == 0) {
			return EMPTY_VARIABLE_ARRAY;
		}
		boolean hasThis = false;
		List<Expression> currentVariables = new ArrayList<Expression>();
		for (int i = 0; i < variables.length - 1; i++) {
			String s = variables[i].getFullName();
			// Skip $GLOBALS variable (since PHP 5.0.0)
			if (s.equals("$GLOBALS")) //$NON-NLS-1$
				continue;
			// Check if object context is active
			if (s.equals("$this")) //$NON-NLS-1$
				hasThis = true;
			currentVariables.add(variables[i]);
		}
		// Last one in the list is dummy for a current class name
		Expression dummyClass = variables[variables.length - 1];
		String className = (String) dummyClass.getValue().getValue();
		// Check if we are in static context
		if (!hasThis && className != null && !className.isEmpty()) {
			Expression staticClassContext = ExpressionsUtil.fetchStaticContext(
					className, this);
			if (staticClassContext != null)
				currentVariables.add(staticClassContext);
		}
		variables = currentVariables.toArray(new Expression[currentVariables
				.size()]);
		// Sort by type (default order: this or class, locals, super globals)
		VariablesUtil.sortContextMembers(variables);
		hashResultDepthOne.put("LOCALS", variables); //$NON-NLS-1$
		return variables;
	}

