	private void createPartitions() {
		int numChild = fChildren.length;
		int partitions = (int) Math.ceil(numChild / (double) 100);
		IVariable[] children = new IVariable[partitions];
		for (int i = 0; i < partitions; i++) {
			int startIndex = i * ARRAY_PARTITION_BOUNDARY;
			int endIndex = (i + 1) * ARRAY_PARTITION_BOUNDARY - 1;
			if (endIndex > numChild) {
				endIndex = numChild - 1;
			}
			final IVariable[] vars = Arrays.copyOfRange(fChildren,
					startIndex, endIndex + 1);
			IVariable var = new VirtualPartition(this,
					new IVariableProvider() {
						@Override
						public IVariable[] getVariables()
								throws DebugException {
							return vars;
						}
					}, startIndex, endIndex);
			children[i] = var;
		}
		fChildren = children;
	}

