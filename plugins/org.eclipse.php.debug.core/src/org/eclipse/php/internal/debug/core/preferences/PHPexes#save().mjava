	/**
	 * Save the edited PHP executable items to the plug-in preferences.
	 */
	public void save() {
		Preferences prefs = PHPProjectPreferences.getModelPreferences();
		final PHPexeItem[] phpItems = getEditableItems();
		final StringBuffer locationsString = new StringBuffer();
		final StringBuffer inisString = new StringBuffer();
		final StringBuffer namesString = new StringBuffer();
		final StringBuffer uniqueIdsString = new StringBuffer();
		final StringBuffer debuggersString = new StringBuffer();
		final StringBuffer defaultItemForPHPVersionString = new StringBuffer();
		final StringBuffer loadIniDefaultString = new StringBuffer();
		for (int i = 0; i < phpItems.length; i++) {
			final PHPexeItem item = phpItems[i];
			if (i > 0) {
				locationsString.append(SEPARATOR);
				inisString.append(SEPARATOR);
				namesString.append(SEPARATOR);
				uniqueIdsString.append(SEPARATOR);
				debuggersString.append(SEPARATOR);
				defaultItemForPHPVersionString.append(SEPARATOR);
				loadIniDefaultString.append(SEPARATOR);
			}
			locationsString.append(item.getExecutable().toString());
			inisString.append(item.getINILocation() != null ? item
					.getINILocation().toString() : NULL_PLACE_HOLDER);
			namesString.append(item.getName());
			uniqueIdsString.append(item.getUniqueId());
			debuggersString.append(item.getDebuggerID());
			loadIniDefaultString.append(item.isLoadDefaultINI() ? TRUE : FALSE);

			if (item.geDefaultForPHPVersionSize() > 0) {
				for (int j = 0; j < item.geDefaultForPHPVersionSize(); j++) {
					if (j > 0) {
						defaultItemForPHPVersionString
								.append(SEPARATOR_FOR_PHPVERSION);
					}
					defaultItemForPHPVersionString.append(item
							.getPHPVersionAtDefaultList(j).getAlias());
				}
			} else {
				defaultItemForPHPVersionString.append(NULL_PLACE_HOLDER);
			}

		}
		prefs.setValue(PHPDebugCorePreferenceNames.INSTALLED_PHP_NAMES,
				namesString.toString());
		prefs.setValue(PHPDebugCorePreferenceNames.INSTALLED_PHP_UNIQUE_IDS,
				uniqueIdsString.toString());
		prefs.setValue(PHPDebugCorePreferenceNames.INSTALLED_PHP_LOCATIONS,
				locationsString.toString());
		prefs.setValue(PHPDebugCorePreferenceNames.INSTALLED_PHP_INIS,
				inisString.toString());
		prefs.setValue(PHPDebugCorePreferenceNames.INSTALLED_PHP_DEBUGGERS,
				debuggersString.toString());
		prefs.setValue(
				PHPDebugCorePreferenceNames.INSTALLED_PHP_DEFAULT_FOR_VERSIONS,
				defaultItemForPHPVersionString.toString());
		prefs.setValue(
				PHPDebugCorePreferenceNames.INSTALLED_PHP_LOAD_DEFAULT_INIS,
				loadIniDefaultString.toString());
		PHPDebugPlugin.getDefault().savePluginPreferences();
	}

