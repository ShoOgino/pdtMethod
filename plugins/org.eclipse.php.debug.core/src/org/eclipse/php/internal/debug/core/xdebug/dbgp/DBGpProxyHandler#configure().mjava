	/**
	 * configure the Proxy Handler from the preferences.
	 */
	public void configure() {
		if (useProxy() == false) {
			unregister();
		} else {
			int idePort = XDebugDebuggerSettingsUtil.getDebugPort(getOwnerId());
			String ideKey = XDebugDebuggerSettingsUtil.getProxyIdeKey(getOwnerId());
			boolean multisession = XDebugPreferenceMgr.useMultiSession();
			String proxy = XDebugDebuggerSettingsUtil.getProxyAddress(getOwnerId());
			String proxyHost = proxy;
			int proxyPort = DEFAULT_PROXY_PORT;
			int split = proxy.indexOf(':');
			if (split != -1) {
				proxyHost = proxy.substring(0, split);
				if (split + 1 < proxy.length()) {
					String portStr = proxy.substring(split + 1);
					try {
						proxyPort = Integer.parseInt(portStr);
					} catch (NumberFormatException e) {
					}
				}
			}
			if (proxyPort == idePort) {
				displayErrorMessage(PHPDebugCoreMessages.XDebug_DBGpProxyHandler_0);
			} else {
				setProxyInfo(proxyHost, proxyPort, ideKey, idePort, multisession);
				if (XDebugPreferenceMgr.getAcceptRemoteSession() != AcceptRemoteSession.off) {
					/*
					 * if JIT we must register with the proxy straight away
					 * rather than wait for the first launch
					 */
					Job job = new Job(PHPDebugCoreMessages.DBGpProxyConnection_Registering_DBGp_proxy) {
						@Override
						protected IStatus run(IProgressMonitor monitor) {
							if (registerWithProxy() == false) {
								displayErrorMessage(PHPDebugCoreMessages.XDebug_DBGpProxyHandler_1 + getErrorMsg());
								XDebugPreferenceMgr.setUseProxy(false);
							}
							return Status.OK_STATUS;
						}
					};
					job.schedule();
				}
			}
		}
	}

