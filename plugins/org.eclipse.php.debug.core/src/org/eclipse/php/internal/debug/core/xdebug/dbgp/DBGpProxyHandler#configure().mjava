	/**
	 * configure the Proxy Handler from the preferences.
	 */
	public void configure() {
		//TODO: move to using preference manager completely.
		Preferences prefs = XDebugPreferenceMgr.getPreferences();
		
		if (useProxy() == false) {
			unregister();
		}
		else {
			int idePort = XDebugPreferenceMgr.getPort(prefs);			
			String ideKey = prefs.getString(XDebugPreferenceMgr.XDEBUG_PREF_IDEKEY);
			boolean multisession = XDebugPreferenceMgr.useMultiSession(); 
			String proxy = prefs.getString(XDebugPreferenceMgr.XDEBUG_PREF_PROXY);
			String proxyHost = proxy;
			int proxyPort = DEFAULT_PROXY_PORT;
			int split = proxy.indexOf(':');
			if (split != -1) {
				proxyHost = proxy.substring(0, split);
				if (split + 1 < proxy.length()) {
					String portStr = proxy.substring(split + 1);
					try {
						proxyPort = Integer.parseInt(portStr);
					} catch (NumberFormatException e) {
					}
				}
			}
			
			if (proxyPort == XDebugPreferenceMgr.getPort()) {
				displayErrorMessage(PHPDebugCoreMessages.XDebug_DBGpProxyHandler_0); //$NON-NLS-1$
				XDebugPreferenceMgr.setUseProxy(false);
			}
			else {
				setProxyInfo(proxyHost, proxyPort, ideKey, idePort, multisession);
				if (XDebugPreferenceMgr.getAcceptRemoteSession() != AcceptRemoteSession.off) {
					// if jit we must register with the proxy straight away rather than wait
					// for the first launch
					
					Job job = new Job("register with proxy") { //$NON-NLS-1$

						@Override
						protected IStatus run(IProgressMonitor monitor) {
							if (registerWithProxy() == false) {
								displayErrorMessage(PHPDebugCoreMessages.XDebug_DBGpProxyHandler_1 + getErrorMsg()); //$NON-NLS-1$
								XDebugPreferenceMgr.setUseProxy(false);
							}
							return Status.OK_STATUS;
						}
					};
					job.schedule();
				}
				
			}
		}
	}

