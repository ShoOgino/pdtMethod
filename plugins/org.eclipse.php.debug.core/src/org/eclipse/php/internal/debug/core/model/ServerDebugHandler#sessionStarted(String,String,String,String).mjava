	public void sessionStarted(String fileName, String uri, String query, String options) {
		super.sessionStarted(fileName, uri, query, options);
		String sFileName = RemoteDebugger.convertToSystemIndependentFileName(fileName);

		fDebugTarget.setLastFileName(sFileName);
		if (!fDebugTarget.isPHPCGI()) {
			fDebugTarget.setServerWindows(false);
			int index;
			// check for Windows, since case isn't always returned correctly
			if (fileName.startsWith(":\\", 1)) {
				index = sFileName.toLowerCase().lastIndexOf(uri.toLowerCase());
				fDebugTarget.setServerWindows(true);
			} else {
				if (uri.startsWith("/~")) {
					int iUDir = uri.indexOf("/", 1);
					uri = uri.substring(iUDir);
				}
				index = sFileName.lastIndexOf(uri);
			}
			fDebugTarget.setHTDocs(sFileName.substring(0, index));
		}

		StartLock startLock = fDebugTarget.getStartLock();
		synchronized (startLock) {
			if (startLock.isRunStart()) {
				startLock.setStarted(true);
				fDebugTarget.started();
				fStatus = getRemoteDebugger().start(fDebugTarget.getStartResponseHandler());
				if (!fStatus) {
					Logger.log(Logger.ERROR, "PHPDebugTarget: debugger.start return false");
				}
				fDebugTarget.setLastCommand("start");
			} else {
				startLock.setRunStart(true);
			}
		}
	}

