	/**
	 * Determines PHP script path which is currently interpreted by iterating over the stack
	 * @return resolved PHP script path or <code>null</code> in case it couldn't be resolved
	 */
	public String resolvePreviousScript() {
		StackLayer[] layers = getContextManager().getRemoteDebugger().getCallStack().getLayers();
		String previousFileName = null;
		if (layers != null && layers.length > 1) {
			for (int i = 2; i < layers.length; i++) {
				String callerFileName = layers[i].getCallerFileName();
				String calledFileName = layers[i].getCalledFileName();
				String resolvedCalledFile = getContextManager().getCachedResolvedStackLayer(callerFileName + calledFileName);

				//if the couldn't find a cached resolved called file name
				//run the PHP search engine
				if (resolvedCalledFile.length() == 0) {//this means there's no cached resolved file name
					try {
						Result<?, ?> result = PHPSearchEngine.find(calledFileName, getProject().getLocation().toString(), new Path(callerFileName).removeLastSegments(1).toString(), getProject());
						if (result instanceof ResourceResult) {
							// workspace file
							ResourceResult resResult = (ResourceResult) result;
							IResource resource = resResult.getFile();
							resolvedCalledFile = resource.getFullPath().toString();
						} else if (result instanceof IncludedFileResult) {
							IncludedFileResult incFileResult = (IncludedFileResult) result;
							resolvedCalledFile = incFileResult.getFile().getAbsolutePath().toString();
						}
					} catch (Exception e) {
						PHPDebugPlugin.log(e);
					}
					//cache the resolved file name
					getContextManager().cacheResolvedStackLayers(callerFileName + calledFileName, resolvedCalledFile);
				}
				if (resolvedCalledFile.length() > 0) {
					layers[i].setCalledFileName(resolvedCalledFile);
					if (i + 1 < layers.length) {
						layers[i + 1].setCalledFileName(resolvedCalledFile);
					}
				}
			}
			previousFileName = layers[layers.length - 1].getCalledFileName();
		}
		return previousFileName;
	}

