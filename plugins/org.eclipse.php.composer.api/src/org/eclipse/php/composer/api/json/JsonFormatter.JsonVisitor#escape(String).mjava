		private static String escape(String s) {
			if (s == null || s.isEmpty()) {
				return ""; //$NON-NLS-1$
			}
			StringBuilder sb = new StringBuilder();

			for (int i = 0; i < s.length(); i++) {
				char ch = s.charAt(i);
				switch (ch) {
				case '"':
					sb.append("\\\""); //$NON-NLS-1$
					break;
				case '\\':
					sb.append("\\\\"); //$NON-NLS-1$
					break;
				case '\b':
					sb.append("\\b"); //$NON-NLS-1$
					break;
				case '\f':
					sb.append("\\f"); //$NON-NLS-1$
					break;
				case '\n':
					sb.append("\\n"); //$NON-NLS-1$
					break;
				case '\r':
					sb.append("\\r"); //$NON-NLS-1$
					break;
				case '\t':
					sb.append("\\t"); //$NON-NLS-1$
					break;
				// see
				// https://github.com/pulse00/Composer-Eclipse-Plugin/issues/51
				/*
				 * case '/': sb.append("\\/"); break;
				 */
				default:
					// Reference: http://www.unicode.org/versions/Unicode5.1.0/
					if ((ch >= '\u0000' && ch <= '\u001F') || (ch >= '\u007F' && ch <= '\u009F')
							|| (ch >= '\u2000' && ch <= '\u20FF')) {
						String ss = Integer.toHexString(ch);
						sb.append("\\u"); //$NON-NLS-1$
						for (int k = 0; k < 4 - ss.length(); k++) {
							sb.append('0');
						}
						sb.append(ss.toUpperCase());
					} else {
						sb.append(ch);
					}
				}
			}
			return sb.toString();
		}

