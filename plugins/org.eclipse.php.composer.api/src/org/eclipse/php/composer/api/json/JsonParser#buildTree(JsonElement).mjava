	private Object buildTree(JsonElement entity) {

		if (entity.isJsonPrimitive()) {
			JsonPrimitive p = entity.getAsJsonPrimitive();
			if (p.isBoolean()) {
				return p.getAsBoolean();
			}
			if (p.isNumber()) {
				return p.getAsLong();
			}
			return p.getAsString();
		} else if (entity.isJsonNull()) {
			return null;
		} else if (entity.isJsonArray()) {
			LinkedList<Object> arr = new LinkedList<Object>();
			for (JsonElement el : entity.getAsJsonArray()) {
				arr.add(buildTree(el));
			}
			return arr;
		} else if (entity.isJsonObject()) {
			LinkedHashMap<String, Object> map = new LinkedHashMap<String, Object>();
			for (Entry<String, JsonElement> el : entity.getAsJsonObject().entrySet()) {
				map.put(el.getKey(), buildTree(el.getValue()));
			}
			return map;
		}

		return null;
	}

