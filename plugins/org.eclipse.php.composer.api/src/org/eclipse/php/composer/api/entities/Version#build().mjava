	private String build() {
		StringBuilder sb = new StringBuilder();

		if (!constraint.isEmpty()) {
			sb.append(constraint);
		}

		if (devPosition == BEGIN && stability == ComposerConstants.DEV) {
			sb.append("dev-"); //$NON-NLS-1$
		}

		if (!prefix.isEmpty()) {
			sb.append(prefix);
		}

		sb.append(major);

		if (!minor.isEmpty()) {
			sb.append("."); //$NON-NLS-1$
			sb.append(minor);
		}

		if (!fix.isEmpty()) {
			sb.append("."); //$NON-NLS-1$
			sb.append(fix);
		}

		if (!build.isEmpty()) {
			sb.append("."); //$NON-NLS-1$
			sb.append(build);
		}

		StringBuilder sx = new StringBuilder();

		if (!stability.isEmpty() && stability != ComposerConstants.STABLE
				&& (stability == ComposerConstants.DEV ? devPosition != BEGIN : true)) {
			sx.append(stability);
		}

		if (!suffix.isEmpty()) {
			sx.append(suffix);
		}

		if (sx.length() > 0) {
			sb.append("-"); //$NON-NLS-1$
			sb.append(sx);
		}

		if (!stabilityModifier.isEmpty()) {
			sb.append("@"); //$NON-NLS-1$
			sb.append(stabilityModifier);
		}

		if (versions.size() > 0) {
			int i = 1;
			for (Version v : versions) {
				sb.append(v.toString());
				if (i < versions.size()) {
					sb.append(","); //$NON-NLS-1$
				}
				i++;
			}
		}

		return sb.toString();
	}

