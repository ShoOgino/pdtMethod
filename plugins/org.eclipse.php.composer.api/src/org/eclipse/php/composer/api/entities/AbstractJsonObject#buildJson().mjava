	@Override
	protected Object buildJson() {
		LinkedList<String> propsOrder = new LinkedList<>(sortOrder);

		// First: create an index to search for field names and add them to the
		// props order
		HashMap<String, Field> namedFields = new HashMap<>();
		for (Field field : getFields(this.getClass())) {
			field.setAccessible(true);
			String fieldName = getFieldName(field);
			namedFields.put(fieldName, field);
			propsOrder.add(fieldName);
		}

		// add properties that aren't in the hashmap yet
		for (Entry<String, V> entry : properties.entrySet()) {
			propsOrder.add(entry.getKey());
		}

		// Second: find property contents (either field or property key)
		LinkedHashMap<String, Object> out = new LinkedHashMap<>();
		for (String entry : propsOrder) {
			if (out.containsKey(entry)) {
				continue;
			}
			Object value = null;

			// search class fields first
			if (namedFields.containsKey(entry)) {
				try {
					value = namedFields.get(entry).get(this);
				} catch (Exception e) {
					log.error(e);
				}
			}

			// check properties
			else if (properties.containsKey(entry)) {
				value = properties.get(entry);
			}

			value = getJsonValue(value);

			if (value == null || value.equals("")) { //$NON-NLS-1$
				continue;
			}

			// add to output
			out.put(entry, value);
		}

		return out;
	}

