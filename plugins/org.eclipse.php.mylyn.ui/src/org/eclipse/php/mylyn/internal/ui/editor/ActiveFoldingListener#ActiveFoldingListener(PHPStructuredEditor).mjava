	public ActiveFoldingListener(PHPStructuredEditor editor) {
		this.editor = editor;
		ContextCore.getContextManager().addListener(this);
		DLTKUiBridgePlugin.getDefault().getPluginPreferences()
				.addPropertyChangeListener(PREFERENCE_LISTENER);

		enabled = DLTKUiBridgePlugin.getDefault().getPreferenceStore()
				.getBoolean(DLTKUiBridgePlugin.AUTO_FOLDING_ENABLED);
		try {
			Object adapter = editor.getAdapter(IFoldingStructureProvider.class);
			if (adapter instanceof IFoldingStructureProviderExtension) {
				updater = (IFoldingStructureProviderExtension) adapter;
			} else {
				StatusHandler
						.log(new Status(
								IStatus.ERROR,
								DLTKUiBridgePlugin.ID_PLUGIN,
								"Could not install active folding on provider: " + adapter + ", must extend " //$NON-NLS-1$ //$NON-NLS-2$
										+ IFoldingStructureProviderExtension.class
												.getName()));
			}
		} catch (Exception e) {
			StatusHandler.log(new Status(IStatus.ERROR,
					DLTKUiBridgePlugin.ID_PLUGIN,
					"Could not install auto folding, reflection denied", e)); //$NON-NLS-1$
		}
		updateFolding();
	}

