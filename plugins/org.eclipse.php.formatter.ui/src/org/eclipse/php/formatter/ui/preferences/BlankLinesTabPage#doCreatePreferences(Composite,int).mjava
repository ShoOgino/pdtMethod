	protected void doCreatePreferences(Composite composite, int numColumns) {
		Group group = createGroup(numColumns, composite,
				FormatterMessages.BlankLinesTabPage_namespace_group_title);
		namespaceDecl = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_namespace_option_before_namespace,
				0, 32);
		namespaceDecl
				.setValue(codeFormatterPreferences.blank_lines_before_namespace);

		namespaceDeclAfter = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_namespace_option_after_namespace,
				0, 32);
		namespaceDeclAfter
				.setValue(codeFormatterPreferences.blank_lines_after_namespace);

		// useStatementsBefore = createNumberPref(
		// group,
		// numColumns,
		// FormatterMessages.BlankLinesTabPage_namespace_option_before_use_statements,
		// 0, 32);
		// useStatementsBefore
		// .setValue(codeFormatterPreferences.blank_lines_before_use_statements);

		useStatementsAfter = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_namespace_option_after_use_statements,
				0, 32);
		useStatementsAfter
				.setValue(codeFormatterPreferences.blank_lines_after_use_statements);

		// useStatementsBetween = createNumberPref(
		// group,
		// numColumns,
		// FormatterMessages.BlankLinesTabPage_namespace_option_between_use_statements,
		// 0, 32);
		// useStatementsBetween
		// .setValue(codeFormatterPreferences.blank_lines_between_use_statements);

		namespaceDeclBetween = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_namespace_option_between_namespaces,
				0, 32);
		namespaceDeclBetween
				.setValue(codeFormatterPreferences.blank_lines_between_namespaces);

		group = createGroup(numColumns, composite,
				FormatterMessages.BlankLinesTabPage_class_group_title);
		classDecl = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_before_class_declarations,
				0, 32);
		classDecl
				.setValue(codeFormatterPreferences.blank_line_before_class_declaration);

		constantDecl = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_before_constant_decls,
				0, 32);
		constantDecl
				.setValue(codeFormatterPreferences.blank_line_before_constant_declaration);

		fieldDecl = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_before_field_decls,
				0, 32);
		fieldDecl
				.setValue(codeFormatterPreferences.blank_line_before_field_declaration);

		methodDecl = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_before_method_decls,
				0, 32);
		methodDecl
				.setValue(codeFormatterPreferences.blank_line_before_method_declaration);

		methodBegin = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_at_beginning_of_method_body,
				0, 32);
		methodBegin
				.setValue(codeFormatterPreferences.blank_line_at_begin_of_method);

		methodEnd = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_at_end_of_method_body,
				0, 32);
		methodEnd
				.setValue(codeFormatterPreferences.blank_line_at_end_of_method);

		classEnd = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_class_option_at_end_of_class_body,
				0, 32);
		classEnd.setValue(codeFormatterPreferences.blank_line_at_end_of_class);
		group = createGroup(numColumns, composite,
				FormatterMessages.BlankLinesTabPage_blank_lines_group_title);
		emptyLinesToPreserve = createNumberPref(
				group,
				numColumns,
				FormatterMessages.BlankLinesTabPage_blank_lines_option_empty_lines_to_preserve,
				0, 32);
		emptyLinesToPreserve
				.setValue(codeFormatterPreferences.blank_line_preserve_empty_lines);

		isInitialized = true;
	}

