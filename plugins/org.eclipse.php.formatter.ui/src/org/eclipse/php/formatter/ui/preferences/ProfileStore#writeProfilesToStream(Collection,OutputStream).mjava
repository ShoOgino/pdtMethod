	/**
	 * Save profiles to an XML stream
	 * 
	 * @param profiles
	 *            List of <code>CustomProfile</code>
	 * @param stream
	 *            Stream to write
	 * @throws CoreException
	 */
	private static void writeProfilesToStream(Collection profiles,
			OutputStream stream) throws CoreException {

		try {
			final DocumentBuilderFactory factory = DocumentBuilderFactory
					.newInstance();
			final DocumentBuilder builder = factory.newDocumentBuilder();
			final Document document = builder.newDocument();

			final Element rootElement = document.createElement(XML_NODE_ROOT);

			document.appendChild(rootElement);

			for (final Iterator iter = profiles.iterator(); iter.hasNext();) {
				final Profile profile = (Profile) iter.next();
				if (profile.isProfileToSave()) {
					final Element profileElement = createProfileElement(
							profile, document);
					rootElement.appendChild(profileElement);
				}
			}

			Transformer transformer = TransformerFactory.newInstance()
					.newTransformer();
			transformer.setOutputProperty(OutputKeys.METHOD, "xml"); //$NON-NLS-1$
			transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8"); //$NON-NLS-1$
			transformer.setOutputProperty(OutputKeys.INDENT, "yes"); //$NON-NLS-1$
			transformer.transform(new DOMSource(document), new StreamResult(
					stream));
		} catch (TransformerException e) {
			throw createException(
					e,
					FormatterMessages.CodingStyleConfigurationBlock_error_serializing_xml_message);
		} catch (ParserConfigurationException e) {
			throw createException(
					e,
					FormatterMessages.CodingStyleConfigurationBlock_error_serializing_xml_message);
		}
	}

