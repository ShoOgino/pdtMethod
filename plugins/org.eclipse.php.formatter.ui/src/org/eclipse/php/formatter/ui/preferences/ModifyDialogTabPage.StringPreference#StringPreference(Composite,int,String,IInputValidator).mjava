		public StringPreference(Composite composite, int numColumns,
				String text, IInputValidator inputValidator) {

			fInputValidator = inputValidator;

			fLabel = new Label(composite, SWT.NONE);
			fLabel.setFont(composite.getFont());
			fLabel.setText(text);

			fLabel.setLayoutData(createGridData(numColumns - 1,
					GridData.HORIZONTAL_ALIGN_BEGINNING, SWT.DEFAULT));

			fNumberText = new Text(composite, SWT.SINGLE | SWT.BORDER);
			fNumberText.setFont(composite.getFont());

			final int length = 30;
			fNumberText.setLayoutData(createGridData(1,
					GridData.HORIZONTAL_ALIGN_BEGINNING,
					fPixelConverter.convertWidthInCharsToPixels(length)));

			// createLabel(numColumns - 1, composite, text,
			// GridData.FILL_HORIZONTAL);
			//
			// fNumberText = new Text(composite, SWT.SINGLE | SWT.BORDER
			// | SWT.RIGHT);
			// fNumberText.setFont(composite.getFont());
			// // final int length = Integer.toString(maxValue).length() + 3;
			// fNumberText.setLayoutData(createGridData(1,
			// GridData.HORIZONTAL_ALIGN_END,
			// fPixelConverter.convertWidthInCharsToPixels(length)));

			fNumberText.addFocusListener(new FocusListener() {
				public void focusGained(FocusEvent e) {
					StringPreference.this.focusGained();
				}

				public void focusLost(FocusEvent e) {
					StringPreference.this.focusLost();
				}
			});

			fNumberText.addModifyListener(new ModifyListener() {
				public void modifyText(ModifyEvent e) {
					fieldModified();
				}
			});
		}

