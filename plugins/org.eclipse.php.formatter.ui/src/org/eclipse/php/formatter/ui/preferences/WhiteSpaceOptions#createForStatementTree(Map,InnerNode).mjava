	private static InnerNode createForStatementTree(Map workingValues,
			InnerNode parent) {
		final InnerNode root = new InnerNode(parent, workingValues,
				FormatterMessages.WhiteSpaceTabPage_for);

		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_before_opening_paren,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_after_opening_paren,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_before_closing_paren,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_for_before_comma,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_for_after_comma,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_before_semicolon,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_FOR,
				FOR_PREVIEW);
		createOption(
				root,
				workingValues,
				FormatterMessages.WhiteSpaceTabPage_after_semicolon,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR,
				FOR_PREVIEW);

		return root;
	}

