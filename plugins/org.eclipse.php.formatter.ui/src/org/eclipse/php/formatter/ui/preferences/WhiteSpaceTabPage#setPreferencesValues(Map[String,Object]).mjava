	public void setPreferencesValues(Map<String, Object> preferences) {
		codeFormatterPreferences.insert_space_after_opening_paren_in_while = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_WHILE);
		codeFormatterPreferences.insert_space_before_opening_paren_in_while = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_WHILE);
		codeFormatterPreferences.insert_space_before_closing_paren_in_while = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_WHILE);

		codeFormatterPreferences.insert_space_before_opening_paren_in_switch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_SWITCH);
		codeFormatterPreferences.insert_space_after_opening_paren_in_switch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_SWITCH);
		codeFormatterPreferences.insert_space_before_closing_paren_in_switch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_SWITCH);
		codeFormatterPreferences.insert_space_before_opening_brace_in_switch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_SWITCH);
		codeFormatterPreferences.insert_space_after_switch_default = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT);
		codeFormatterPreferences.insert_space_after_switch_case_value = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CASE);
		codeFormatterPreferences.insert_space_before_opening_brace_in_block = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_BLOCK);
		codeFormatterPreferences.insert_space_after_closing_brace_in_block = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_CLOSING_BRACE_IN_BLOCK);
		codeFormatterPreferences.insert_space_before_semicolon = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON);

		codeFormatterPreferences.insert_space_before_assignment = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATOR);
		codeFormatterPreferences.insert_space_after_assignment = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATOR);
		codeFormatterPreferences.insert_space_before_binary_operation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR);
		codeFormatterPreferences.insert_space_after_binary_operation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR);
		codeFormatterPreferences.insert_space_before_postfix_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR);
		codeFormatterPreferences.insert_space_after_postfix_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_POSTFIX_OPERATOR);
		codeFormatterPreferences.insert_space_before_concatenation_operation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CONCATENATION_OPERATOR);
		codeFormatterPreferences.insert_space_after_concatenation_operation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_CONCATENATION_OPERATOR);
		codeFormatterPreferences.insert_space_before_prefix_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PREFIX_OPERATOR);
		codeFormatterPreferences.insert_space_after_prefix_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_PREFIX_OPERATOR);
		codeFormatterPreferences.insert_space_before_unary_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_UNARY_OPERATOR);
		codeFormatterPreferences.insert_space_after_unary_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_UNARY_OPERATOR);

		codeFormatterPreferences.insert_space_before_cast_type = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST);
		codeFormatterPreferences.insert_space_after_cast_type = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST);
		codeFormatterPreferences.insert_space_after_cast_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST);

		codeFormatterPreferences.insert_space_after_conditional_colon = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL);
		codeFormatterPreferences.insert_space_before_conditional_colon = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL);
		codeFormatterPreferences.insert_space_after_conditional_question_mark = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL);
		codeFormatterPreferences.insert_space_before_conditional_question_mark = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL);

		codeFormatterPreferences.insert_space_before_opening_paren_in_catch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CATCH);
		codeFormatterPreferences.insert_space_after_opening_paren_in_catch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CATCH);
		codeFormatterPreferences.insert_space_before_closing_paren_in_catch = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CATCH);

		codeFormatterPreferences.insert_space_before_comma_in_implements = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES);
		codeFormatterPreferences.insert_space_after_comma_in_implements = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES);
		codeFormatterPreferences.insert_space_before_opening_brace_in_class = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_TYPE_DECLARATION);

		codeFormatterPreferences.insert_space_before_opening_paren_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_after_opening_paren_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_before_comma_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_INVOCATION_ARGUMENTS);
		codeFormatterPreferences.insert_space_after_comma_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_INVOCATION_ARGUMENTS);
		codeFormatterPreferences.insert_space_before_closing_paren_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_between_empty_paren_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_before_arrow_in_method_invocation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ARROW_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_after_arrow_in_method_invocation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ARROW_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_before_coloncolon_in_method_invocation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COLONCOLON_IN_METHOD_INVOCATION);
		codeFormatterPreferences.insert_space_after_coloncolon_in_method_invocation = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COLONCOLON_IN_METHOD_INVOCATION);

		codeFormatterPreferences.insert_space_before_arrow_in_field_access = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ARROW_IN_FIELD_ACCESS);
		codeFormatterPreferences.insert_space_after_arrow_in_field_access = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ARROW_IN_FIELD_ACCESS);
		codeFormatterPreferences.insert_space_before_coloncolon_in_field_access = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COLONCOLON_IN_FIELD_ACCESS);
		codeFormatterPreferences.insert_space_after_coloncolon_in_field_access = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COLONCOLON_IN_FIELD_ACCESS);

		codeFormatterPreferences.insert_space_before_open_paren_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_FOR);
		codeFormatterPreferences.insert_space_after_open_paren_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_FOR);
		codeFormatterPreferences.insert_space_before_close_paren_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_FOR);
		codeFormatterPreferences.insert_space_before_comma_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR);
		codeFormatterPreferences.insert_space_after_comma_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR);
		codeFormatterPreferences.insert_space_before_semicolon_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_FOR);
		codeFormatterPreferences.insert_space_after_semicolon_in_for = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR);

		codeFormatterPreferences.insert_space_before_open_paren_in_foreach = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_FOREACH);
		codeFormatterPreferences.insert_space_after_open_paren_in_foreach = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_FOREACH);
		codeFormatterPreferences.insert_space_before_close_paren_in_foreach = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_FOREACH);
		codeFormatterPreferences.insert_space_before_arrow_in_foreach = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ARROW_IN_FOREACH);
		codeFormatterPreferences.insert_space_after_arrow_in_foreach = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ARROW_IN_FOREACH);

		codeFormatterPreferences.insert_space_before_arrow_in_yield = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ARROW_IN_YIELD);
		codeFormatterPreferences.insert_space_after_arrow_in_yield = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ARROW_IN_YIELD);

		codeFormatterPreferences.insert_space_before_comma_in_class_variable = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS);
		codeFormatterPreferences.insert_space_after_comma_in_class_variable = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS);
		codeFormatterPreferences.insert_space_before_comma_in_class_constant = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_CONSTANT_DECLARATIONS);
		codeFormatterPreferences.insert_space_after_comma_in_class_constant = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_CONSTANT_DECLARATIONS);

		codeFormatterPreferences.insert_space_before_opening_bracket_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_REFERENCE);
		codeFormatterPreferences.insert_space_after_opening_bracket_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACKET_IN_ARRAY_REFERENCE);
		codeFormatterPreferences.insert_space_before_closing_bracket_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACKET_IN_ARRAY_REFERENCE);
		codeFormatterPreferences.insert_space_between_empty_brackets = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACKETS_IN_ARRAY_TYPE_REFERENCE);

		codeFormatterPreferences.insert_space_before_opening_paren_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_after_opening_paren_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_before_closing_paren_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_before_list_comma_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_after_list_comma_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_before_arrow_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ARROW_IN_ARRAY_CREATION);
		codeFormatterPreferences.insert_space_after_arrow_in_array = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ARROW_IN_ARRAY_CREATION);

		codeFormatterPreferences.insert_space_before_opening_paren_in_list = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_LIST);
		codeFormatterPreferences.insert_space_after_opening_paren_in_list = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_LIST);
		codeFormatterPreferences.insert_space_before_closing_paren_in_list = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_LIST);
		codeFormatterPreferences.insert_space_before_comma_in_list = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_LIST);
		codeFormatterPreferences.insert_space_after_comma_in_list = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_LIST);

		codeFormatterPreferences.insert_space_before_opening_paren_in_function_declaration = getBooleanValue(
				preferences, CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_DECLARATION);
		codeFormatterPreferences.insert_space_after_opening_paren_in_function_declaration = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_DECLARATION);
		codeFormatterPreferences.insert_space_between_empty_paren_in_function_declaration = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_DECLARATION);
		codeFormatterPreferences.insert_space_before_closing_paren_in_function_declaration = getBooleanValue(
				preferences, CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_DECLARATION);
		codeFormatterPreferences.insert_space_before_comma_in_function_declaration = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_DECLARATION_PARAMETERS);
		codeFormatterPreferences.insert_space_after_comma_in_function_declaration = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_DECLARATION_PARAMETERS);
		codeFormatterPreferences.insert_space_before_opening_brace_in_function = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_METHOD_DECLARATION);

		codeFormatterPreferences.insert_space_before_opening_paren_in_if = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_IF);
		codeFormatterPreferences.insert_space_after_opening_paren_in_if = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_IF);
		codeFormatterPreferences.insert_space_before_closing_paren_in_if = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_IF);

		codeFormatterPreferences.insert_space_before_opening_paren_in_declare = getBooleanValue(preferences,
				"codeFormatterPreferences.insert_space_before_opening_paren_in_declare"); //$NON-NLS-1$
		codeFormatterPreferences.insert_space_after_opening_paren_in_declare = getBooleanValue(preferences,
				"codeFormatterPreferences.insert_space_after_opening_paren_in_declare"); //$NON-NLS-1$
		codeFormatterPreferences.insert_space_before_closing_paren_in_declare = getBooleanValue(preferences,
				"codeFormatterPreferences.insert_space_before_closing_paren_in_declare"); //$NON-NLS-1$

		codeFormatterPreferences.insert_space_before_comma_in_static = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_STATIC);
		codeFormatterPreferences.insert_space_after_comma_in_static = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_STATIC);
		codeFormatterPreferences.insert_space_before_comma_in_global = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_GLOBAL);
		codeFormatterPreferences.insert_space_after_comma_in_global = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_GLOBAL);
		codeFormatterPreferences.insert_space_before_comma_in_echo = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ECHO);
		codeFormatterPreferences.insert_space_after_comma_in_echo = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ECHO);

		codeFormatterPreferences.insert_space_after_open_paren_in_parenthesis_expression = getBooleanValue(preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION);
		codeFormatterPreferences.insert_space_before_close_paren_in_parenthesis_expression = getBooleanValue(
				preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHESIZED_EXPRESSION);

		codeFormatterPreferences.insert_space_after_reference_symbol_in_referenced_expression = getBooleanValue(
				preferences,
				CodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_REFERENCE_SYMBOL_IN_REFERENCED_EXPRESSION);
	}

