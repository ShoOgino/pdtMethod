	protected void applyStyles() {
		if (fText == null || fText.isDisposed() || fInput == null
				|| fInput.length() == 0) {
			return;
		}

		final IPreferenceStore editorStore = EditorsPlugin.getDefault()
				.getPreferenceStore();
		fText.setBackground(editorStore
				.getBoolean(AbstractTextEditor.PREFERENCE_COLOR_BACKGROUND_SYSTEM_DEFAULT) ? null
				: new Color(fText.getDisplay(), PreferenceConverter.getColor(
						editorStore,
						AbstractTextEditor.PREFERENCE_COLOR_BACKGROUND)));

		fStyleProvider.loadColors();

		IStructuredDocumentRegion node = fNodes;
		final Collection<StyleRange> holdResults = new ArrayList<StyleRange>();
		fStyleProvider
				.prepareTextRegions(node, 0, fInput.length(), holdResults);

		for (Iterator<StyleRange> iter = holdResults.iterator(); iter.hasNext();) {
			StyleRange element = iter.next();
			fText.setStyleRange(element);
		}
	}

