	private void initializeValues() {
		if (fFilter != null) {
			fFilterName.setText(fFilter.getName());

			ExecutionStatisticsFilterString filterString = fFilter.getFilterString();
			if (filterString != null) {
				fFilterString.setText(filterString.getString() == null ? "" : filterString.getString()); //$NON-NLS-1$
				fCaseSensitive.setSelection(filterString.isCaseSensitive());
				fFilterByFile.setSelection(
						ExecutionStatisticsFilterString.FILTER_BY_FILE_NAME.equals(filterString.getFilterBy()));
				fFilterByClass.setSelection(
						ExecutionStatisticsFilterString.FILTER_BY_CLASS_NAME.equals(filterString.getFilterBy()));
				fFilterByFunction.setSelection(
						ExecutionStatisticsFilterString.FILTER_BY_FUNCTION_NAME.equals(filterString.getFilterBy()));
			}

			ExecutionStatisticsFieldFilter fieldFilter = fFilter.getFieldFilter();
			if (fieldFilter != null) {
				fShowInformationMatching.setSelection(true);
				for (int i = 0; i < fDescriptor.getItemCount(); ++i) {
					if (fDescriptor.getData(fDescriptor.getItem(i)).equals(fieldFilter.getDescriptor())) {
						fDescriptor.select(i);
						break;
					}
				}
				for (int i = 0; i < fField.getItemCount(); ++i) {
					if (fField.getData(fField.getItem(i)).equals(fieldFilter.getField())) {
						fField.select(i);
						break;
					}
				}
				fNumber.setText(Integer.toString(fieldFilter.getNumber()));
			}
		}

		fCondTableViewer.setInput(fFilter);

		showInformationMatchingSelected();
	}

