	@Override
	public void createControl(Composite parent) {
		initializeDialogUnits(parent);
		try {
			fSourceType = ProfilerUiPlugin.getDefault().getDialogSettings().getInt(PreferenceKeys.IMPORT_TYPE);
		} catch (NumberFormatException e) {
			fSourceType = ProfilerUIConstants.ECLIPSE_TYPE;
		}

		Composite composite = new Composite(parent, SWT.NULL);
		GridLayout layout = new GridLayout();
		layout.verticalSpacing = 10;
		layout.numColumns = 3;
		composite.setLayout(layout);
		composite.setLayoutData(new GridData(GridData.FILL_BOTH));
		composite.setFont(parent.getFont());

		Label label = new Label(composite, SWT.NONE);
		label.setText(PHPProfileUIMessages.getString("ImportSessionWizardPage1.8")); //$NON-NLS-1$
		ComboViewer typeCombo = new ComboViewer(composite, SWT.READ_ONLY);
		typeCombo.setContentProvider(ArrayContentProvider.getInstance());
		typeCombo.setLabelProvider(new LabelProvider() {
			@Override
			public String getText(Object element) {
				if (element instanceof Integer) {
					switch (Integer.valueOf((Integer) element)) {
					case ProfilerUIConstants.ECLIPSE_TYPE:
						return PHPProfileUIMessages.getString("ImportSessionWizardPage1.9"); //$NON-NLS-1$
					case ProfilerUIConstants.XDEBUG_TYPE:
						return PHPProfileUIMessages.getString("ImportSessionWizardPage1.10"); //$NON-NLS-1$
					}
				}
				return super.getText(element);
			}
		});
		typeCombo.setInput(new Integer[] { ProfilerUIConstants.ECLIPSE_TYPE, ProfilerUIConstants.XDEBUG_TYPE });
		typeCombo.addSelectionChangedListener(new ISelectionChangedListener() {

			@Override
			public void selectionChanged(SelectionChangedEvent event) {
				if (event.getStructuredSelection() != null
						&& event.getStructuredSelection().getFirstElement() instanceof Integer) {
					fSourceType = (Integer) event.getStructuredSelection().getFirstElement();
					ProfilerUiPlugin.getDefault().getDialogSettings().put(PreferenceKeys.IMPORT_TYPE, fSourceType);
				}
			}
		});
		typeCombo.setSelection(new StructuredSelection(fSourceType));
		GridData gridData = new GridData();
		gridData.horizontalSpan = 2;
		typeCombo.getCombo().setLayoutData(gridData);

		label = new Label(composite, SWT.NONE);
		label.setText(PHPProfileUIMessages.getString("ImportSessionWizardPage1.2")); //$NON-NLS-1$

		fSourceField = new Text(composite, SWT.BORDER);
		fSourceField.addListener(SWT.Modify, fieldModifyListener);
		fSourceField.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

		fSourceBtn = new Button(composite, SWT.NONE);
		fSourceBtn.setText(PHPProfileUIMessages.getString("ImportSessionWizardPage1.3")); //$NON-NLS-1$
		fSourceBtn.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				FileDialog dialog = new FileDialog(fSourceBtn.getShell(), SWT.OPEN);
				if (fSourceType == ProfilerUIConstants.ECLIPSE_TYPE) {
					dialog.setFilterExtensions(new String[] { "*.xml", "*.*" }); //$NON-NLS-1$ //$NON-NLS-2$
				}
				dialog.setText(PHPProfileUIMessages.getString("ImportSessionWizardPage1.4")); //$NON-NLS-1$

				String dirName = new File(fSourceField.getText().trim()).getParent();
				if (dirName != null && dirName.length() > 0 && new File(dirName).exists()) {
					dialog.setFilterPath(new Path(dirName).toOSString());
				}

				String file = dialog.open();
				if (file != null) {
					fSourceField.setText(file);
				}
			}
		});

		setPageComplete(validatePage());

		setErrorMessage(null);
		setMessage(null);

		setControl(composite);
		PlatformUI.getWorkbench().getHelpSystem().setHelp(getControl(), IPHPHelpContextIds.IMPORTING_PROFILE_SESSIONS);
	}

