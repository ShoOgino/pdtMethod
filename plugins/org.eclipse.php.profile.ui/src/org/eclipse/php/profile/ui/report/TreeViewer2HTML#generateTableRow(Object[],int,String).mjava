	/**
	 * Generates table row
	 * 
	 * @param Object
	 *            [] current items
	 * @param int
	 *            number of tabs
	 * @param String
	 *            row id prefix (initial=table's prefix, then id_0, id_0_0, id_1,
	 *            etc...)
	 */
	private void generateTableRow(Object[] items, int tabs, String idPrefix) {
		if (items == null || items.length == 0) {
			return;
		}

		StringBuilder tabsBuf = new StringBuilder();
		for (int i = 0; i < tabs; ++i) {
			tabsBuf.append("&nbsp;&nbsp;&nbsp;"); //$NON-NLS-1$
		}

		for (int i = 0; i < items.length; ++i) {
			int numColumns = fTree.getColumnCount();
			String newId = idPrefix + "_" + i; //$NON-NLS-1$
			fWriter.print("<tr id="); //$NON-NLS-1$
			fWriter.print(newId);
			if (items[i] instanceof IHTMLPresentableTreeElement) {
				fWriter.print(" class=\""); //$NON-NLS-1$
				fWriter.print(((IHTMLPresentableTreeElement) items[i]).getTableRowClass());
				fWriter.print("\""); //$NON-NLS-1$
			}
			fWriter.println(">"); //$NON-NLS-1$

			for (int j = 0; j < numColumns; ++j) {
				String text = fLabelProvider.getColumnText(items[i], j);
				fWriter.print("\t<td"); //$NON-NLS-1$
				if (text == null) {
					fWriter.print(" align=right"); //$NON-NLS-1$
					text = "-"; //$NON-NLS-1$
				} else {
					switch (fTree.getColumn(j).getAlignment()) {
					case SWT.LEFT:
						fWriter.print(" align=left"); //$NON-NLS-1$
						break;
					case SWT.CENTER:
						fWriter.print(" align=center"); //$NON-NLS-1$
						break;
					case SWT.RIGHT:
						fWriter.print(" align=right"); //$NON-NLS-1$
						break;
					}
				}
				fWriter.print(">"); //$NON-NLS-1$
				if (j == 0) {
					fWriter.print(tabsBuf);
					if (fContentProvider.hasChildren(items[i])) {
						fWriter.print("<a href=\"#\""); //$NON-NLS-1$
						if (items[i] instanceof IHTMLPresentableTreeElement) {
							fWriter.print(" class=\""); //$NON-NLS-1$
							fWriter.print(((IHTMLPresentableTreeElement) items[i]).getTableLinkClass());
							fWriter.print("\""); //$NON-NLS-1$
						}
						fWriter.print(" onclick=\"return toggle('"); //$NON-NLS-1$
						fWriter.print(newId);
						fWriter.print("');\">"); //$NON-NLS-1$

						fWriter.print("<img id=\""); //$NON-NLS-1$
						fWriter.print(newId);
						fWriter.print("_s\" class=\"fold\" src=\""); //$NON-NLS-1$
						fWriter.print(HTMLReporter.IMAGES_DIR);
						fWriter.print("/minus.png\"/>"); //$NON-NLS-1$
					}

					fWriter.print("<img class=\"type\" src=\""); //$NON-NLS-1$
					fWriter.print(HTMLReporter.IMAGES_DIR);
					fWriter.print("/"); //$NON-NLS-1$
					if (items[i] instanceof IHTMLPresentableTreeElement) {
						fWriter.print(((IHTMLPresentableTreeElement) items[i]).getImageURL());
					}
					fWriter.print("\"/>"); //$NON-NLS-1$
				}
				fWriter.print(text);
				fWriter.println("</td>"); //$NON-NLS-1$
			}
			fWriter.println("</tr>"); //$NON-NLS-1$
			generateTableRow(fContentProvider.getChildren(items[i]), tabs + 1, newId);
		}
	}

