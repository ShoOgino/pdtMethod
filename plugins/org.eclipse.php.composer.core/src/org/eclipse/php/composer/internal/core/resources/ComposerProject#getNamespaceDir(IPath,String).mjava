	@Override
	public IPath getNamespaceDir(IPath source, String namespace) {
		Autoload[] autoloads = new Autoload[] { getComposerPackage().getAutoload(),
				getComposerPackage().getAutoloadDev() };
		Namespace matched = null;
		for (Autoload autoload : autoloads) {
			for (Namespace name : autoload.getPsr4().getNamespaces()) {
				matched = match(namespace, name, matched);
			}
			for (Namespace name : autoload.getPsr0().getNamespaces()) {
				matched = match(namespace, name, matched);
			}
		}
		if (matched != null) {
			String path = matched.getPaths().get(0).toString();
			IPath result = new Path(source.segment(0)).makeAbsolute();

			int move = matched.getNamespace().length();
			if (matched.getNamespace().endsWith(NamespaceReference.NAMESPACE_DELIMITER)) {
				move--;
			}
			String addon = namespace.substring(move);
			if (addon.endsWith(NamespaceReference.NAMESPACE_DELIMITER)) {
				addon = addon.substring(0, addon.length() - 1);
			}
			result = result.append(new Path(path));
			result = result.append(new Path(addon.replace(NamespaceReference.NAMESPACE_SEPARATOR, IPath.SEPARATOR)));
			return result;
		}

		return null;
	}

