	public static String serialize(IBuildpathEntry[] entries, boolean isSystemLibrary) throws IOException {

		ByteArrayOutputStream s = new ByteArrayOutputStream();
		OutputStreamWriter writer = new OutputStreamWriter(s, StandardCharsets.UTF_8);

		XMLWriter xmlWriter = new XMLWriter(writer, null, true);

		HashMap<String, String> library = new HashMap<>();
		library.put(TAG_VERSION, String.valueOf(CURRENT_VERSION));
		library.put(TAG_SYSTEMLIBRARY, String.valueOf(isSystemLibrary));
		xmlWriter.printTag(TAG_USERLIBRARY, library, true, true, false);

		for (int i = 0, length = entries.length; i < length; ++i) {
			BuildpathEntry cpEntry = (BuildpathEntry) entries[i];

			HashMap<String, String> archive = new HashMap<>();
			archive.put(TAG_PATH, cpEntry.getPath().toString());

			// boolean hasExtraAttributes = cpEntry.extraAttributes != null
			// && cpEntry.extraAttributes.length != 0;
			boolean hasExtraAttributes = false;
			boolean hasRestrictions = cpEntry.getAccessRuleSet() != null; // access
			// rule
			// set
			// is
			// null
			// if
			// no
			// access
			// rules
			xmlWriter.printTag(TAG_ARCHIVE, archive, true, true, !(hasExtraAttributes || hasRestrictions));

			// write extra attributes if necessary
			if (hasExtraAttributes) {
				// cpEntry.encodeExtraAttributes(xmlWriter, true, true);
			}

			// write extra attributes and restriction if necessary
			if (hasRestrictions) {
				// cpEntry.encodeAccessRules(xmlWriter, true, true);
			}

			// write archive end tag if necessary
			if (hasExtraAttributes || hasRestrictions) {
				xmlWriter.endTag(TAG_ARCHIVE, true/* insert tab */, true/*
																		 * insert new line
																		 */);
			}
		}
		xmlWriter.endTag(TAG_USERLIBRARY, true/* insert tab */, true/*
																	 * insert new line
																	 */);
		writer.flush();
		writer.close();
		xmlWriter.close();
		return s.toString(StandardCharsets.UTF_8.name());

	}

