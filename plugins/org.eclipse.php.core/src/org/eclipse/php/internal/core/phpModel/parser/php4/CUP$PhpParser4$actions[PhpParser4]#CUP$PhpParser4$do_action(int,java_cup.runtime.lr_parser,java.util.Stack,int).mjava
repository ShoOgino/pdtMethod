  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$PhpParser4$do_action(
    int                        CUP$PhpParser4$act_num,
    java_cup.runtime.lr_parser CUP$PhpParser4$parser,
    java.util.Stack            CUP$PhpParser4$stack,
    int                        CUP$PhpParser4$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$PhpParser4$result;

      /* select the action based on the action number */
      switch (CUP$PhpParser4$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // string_st ::= T_DEFINE 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("string_st",64, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // string_st ::= T_STRING 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("string_st",64, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // tracked_variable ::= T_VARIABLE 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    RESULT = var;
    parser.getParserClient().handleVariableName(var, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("tracked_variable",75, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // isset_variables ::= isset_variables T_COMMA cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("isset_variables",74, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // isset_variables ::= cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("isset_variables",74, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // internal_functions_in_yacc ::= T_REQUIRE_ONCE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.REQUIRE_ONCE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // internal_functions_in_yacc ::= T_REQUIRE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.REQUIRE_ONCE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // internal_functions_in_yacc ::= T_EVAL T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // internal_functions_in_yacc ::= T_INCLUDE_ONCE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.INCLUDE_ONCE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // internal_functions_in_yacc ::= T_INCLUDE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    RESULT = e;
        parser.getParserClient().handleIncludedFile(IncludingType.INCLUDE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // internal_functions_in_yacc ::= T_EMPTY T_OPEN_PARENTHESE cvar T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // internal_functions_in_yacc ::= T_ISSET T_OPEN_PARENTHESE isset_variables T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",63, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // encaps_var_offset ::= tracked_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",62, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // encaps_var_offset ::= T_NUM_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",62, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // encaps_var_offset ::= string_st 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",62, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // encaps_var ::= T_CURLY_OPEN_WITH_DOLAR cvar T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME T_OPEN_RECT expr T_CLOSE_RECT T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES expr T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // encaps_var ::= tracked_variable T_OBJECT_OPERATOR string_st 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // encaps_var ::= tracked_variable T_OPEN_RECT encaps_var_offset T_CLOSE_RECT 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // encaps_var ::= tracked_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_var",61, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // encaps_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // encaps_list ::= encaps_list T_OBJECT_OPERATOR 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // encaps_list ::= encaps_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // encaps_list ::= encaps_list T_CURLY_OPEN 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // encaps_list ::= encaps_list T_CLOSE_RECT 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // encaps_list ::= encaps_list T_OPEN_RECT 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // encaps_list ::= encaps_list T_BAD_CHARACTER 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // encaps_list ::= encaps_list T_CHARACTER 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // encaps_list ::= encaps_list T_NUM_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // encaps_list ::= encaps_list string_st 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // encaps_list ::= encaps_list encaps_var 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("encaps_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // non_empty_array_pair_list ::= T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // non_empty_array_pair_list ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // array_pair_list ::= non_empty_array_pair_list possible_comma 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("array_pair_list",58, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // array_pair_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("array_pair_list",58, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // assignment_list_element ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("assignment_list_element",57, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // assignment_list_element ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("assignment_list_element",57, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // assignment_list_element ::= cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("assignment_list_element",57, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // assignment_list ::= assignment_list_element 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("assignment_list",56, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // assignment_list ::= assignment_list T_COMMA assignment_list_element 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("assignment_list",56, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // simple_indirect_reference ::= simple_indirect_reference T_DOLLAR 
            {
              Object RESULT =null;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		 RESULT = ref + "$"; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("simple_indirect_reference",55, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // simple_indirect_reference ::= T_DOLLAR 
            {
              Object RESULT =null;
		 RESULT = "$"; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("simple_indirect_reference",55, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // variable_name ::= T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("variable_name",54, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // variable_name ::= string_st 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("variable_name",54, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // object_dim_list ::= variable_name 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = "*" + var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("object_dim_list",53, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // object_dim_list ::= object_dim_list T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("object_dim_list",53, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // object_dim_list ::= object_dim_list T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("object_dim_list",53, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // object_property ::= cvar_without_objects 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("object_property",52, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // object_property ::= object_dim_list 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("object_property",52, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // ref_list ::= ref_list T_OBJECT_OPERATOR object_property 
            {
              Object RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int propertyleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int propertyright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String property = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = list + ";" + property; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("ref_list",76, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // ref_list ::= object_property 
            {
              Object RESULT =null;
		int propertyleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int propertyright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String property = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = property; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("ref_list",76, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // dim_offset ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("dim_offset",51, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // dim_offset ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("dim_offset",51, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // compound_variable ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("compound_variable",50, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // compound_variable ::= tracked_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("compound_variable",50, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // reference_variable ::= compound_variable 
            {
              String RESULT =null;
		int comp_varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int comp_varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String comp_var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = comp_var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("reference_variable",49, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // reference_variable ::= reference_variable T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("reference_variable",49, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // reference_variable ::= reference_variable T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("reference_variable",49, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // cvar_without_objects ::= simple_indirect_reference reference_variable 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("cvar_without_objects",73, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // cvar_without_objects ::= reference_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("cvar_without_objects",73, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // cvar ::= cvar_without_objects T_OBJECT_OPERATOR ref_list 
            {
              String RESULT =null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = varName + ";" + list; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("cvar",68, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // cvar ::= cvar_without_objects 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("cvar",68, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // rw_cvar ::= cvar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("rw_cvar",72, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // w_cvar ::= cvar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("w_cvar",71, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // r_cvar ::= cvar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = "r_variable;" + var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("r_cvar",70, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // expr ::= expr_without_variable 
            {
              String RESULT =null;
		int ewvleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int ewvright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String ewv = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = ewv; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr",48, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // expr ::= r_cvar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr",48, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // non_empty_static_array_pair_list ::= static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",47, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // non_empty_static_array_pair_list ::= static_scalar T_DOUBLE_ARROW static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",47, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",47, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar T_DOUBLE_ARROW static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",47, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // possible_comma ::= T_COMMA 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("possible_comma",46, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // possible_comma ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("possible_comma",46, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // static_array_pair_list ::= non_empty_static_array_pair_list possible_comma 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_array_pair_list",45, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // static_array_pair_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_array_pair_list",45, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // scalar ::= T_START_HEREDOC encaps_list T_END_HEREDOC 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // scalar ::= T_SINGLE_QUATE encaps_list T_SINGLE_QUATE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // scalar ::= T_QUATE encaps_list T_QUATE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // scalar ::= common_scalar 
            {
              String RESULT =null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = scalar; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // scalar ::= T_STRING_VARNAME 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // scalar ::= string_st 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // static_scalar ::= T_ARRAY T_OPEN_PARENTHESE static_array_pair_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		 RESULT = "array"; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // static_scalar ::= T_MINUS static_scalar 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // static_scalar ::= T_PLUS static_scalar 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // static_scalar ::= string_st 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // static_scalar ::= common_scalar 
            {
              String RESULT =null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = scalar; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // common_scalar ::= T_FUNC_C 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // common_scalar ::= T_CLASS_C 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // common_scalar ::= T_FILE 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // common_scalar ::= T_LINE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // common_scalar ::= T_CONSTANT_ENCAPSED_STRING 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // common_scalar ::= T_DNUMBER 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // common_scalar ::= T_LNUMBER 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("common_scalar",42, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // ctor_arguments ::= T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object parameters = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		 RESULT = ((CompletionLexer)parser.getScanner()).createString(parametersleft,parametersright); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("ctor_arguments",41, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // ctor_arguments ::= 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("ctor_arguments",41, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // exit_expr ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("exit_expr",40, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // exit_expr ::= T_OPEN_PARENTHESE T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("exit_expr",40, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // exit_expr ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("exit_expr",40, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // static_or_variable_string ::= r_cvar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_or_variable_string",65, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // static_or_variable_string ::= T_STRING 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = className; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_or_variable_string",65, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // function_call ::= string_st T_PAAMAYIM_NEKUDOTAYIM static_or_variable_string T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		 RESULT = "r_variable;" + className + ";" + name;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // function_call ::= cvar T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		
    name = name == null ? "" : name; // fix empty name for indirect call - $variable(1,2,3);
    int index = name.lastIndexOf(';');
    if(index != -1){
        if (name.length() > index && name.charAt(index + 1) == '*'){
            name = name.substring(0,index + 1) + name.substring(index + 2);
        }
    }
    RESULT = "r_variable;" + name;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // function_call ::= T_STRING T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		 RESULT = "function_call;" + name;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // function_call ::= T_DEFINE T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // function_call ::= T_DEFINE T_OPEN_PARENTHESE T_STRING T_COMMA define_function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int defineleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).left;
		int defineright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).right;
		String define = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		
    parser.getParserClient().handleDefine(value, val, parser.getPHPDoc(defineleft), defineleft, valueright, valueleft);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // function_call ::= T_DEFINE T_OPEN_PARENTHESE T_CONSTANT_ENCAPSED_STRING T_COMMA define_function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int defineleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).left;
		int defineright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).right;
		String define = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		
    parser.getParserClient().handleDefine(value, val, parser.getPHPDoc(defineleft), defineleft, valueright, valueleft);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call",39, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA T_REFERENCE w_cvar 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		 RESULT = val;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA cvar 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		 RESULT = val;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA expr_without_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		 RESULT = val;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // define_function_call_parameter_list ::= T_REFERENCE w_cvar 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = parser.createString(valleft - 1, valright);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // define_function_call_parameter_list ::= cvar 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = parser.createString(valleft, valright);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // define_function_call_parameter_list ::= expr_without_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = parser.createString(valleft, valright);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // expr_without_variable ::= T_PRINT expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // expr_without_variable ::= T_BACKQUATE encaps_list T_BACKQUATE 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // expr_without_variable ::= T_ARRAY T_OPEN_PARENTHESE array_pair_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		 RESULT = "array"; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // expr_without_variable ::= scalar 
            {
              String RESULT =null;
		int scalar_resultleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int scalar_resultright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String scalar_result = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = scalar_result; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // expr_without_variable ::= T_AT expr 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = e; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // expr_without_variable ::= T_EXIT exit_expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // expr_without_variable ::= T_UNSET_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // expr_without_variable ::= T_BOOL_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // expr_without_variable ::= T_OBJECT_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // expr_without_variable ::= T_ARRAY_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // expr_without_variable ::= T_STRING_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // expr_without_variable ::= T_DOUBLE_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // expr_without_variable ::= T_INT_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // expr_without_variable ::= internal_functions_in_yacc 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // expr_without_variable ::= function_call 
            {
              String RESULT =null;
		int callleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int callright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String call = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = call; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // expr_without_variable ::= expr T_QUESTION_MARK expr T_NEKUDOTAIM expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // expr_without_variable ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		 RESULT = e; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // expr_without_variable ::= expr T_IS_GREATER_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // expr_without_variable ::= expr T_LGREATER expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // expr_without_variable ::= expr T_IS_SMALLER_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // expr_without_variable ::= expr T_RGREATER expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // expr_without_variable ::= expr T_IS_NOT_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // expr_without_variable ::= expr T_IS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // expr_without_variable ::= expr T_IS_NOT_IDENTICAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // expr_without_variable ::= expr T_IS_IDENTICAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // expr_without_variable ::= T_TILDA expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // expr_without_variable ::= T_NOT expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // expr_without_variable ::= T_MINUS expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // expr_without_variable ::= T_PLUS expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // expr_without_variable ::= expr T_SR expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // expr_without_variable ::= expr T_SL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // expr_without_variable ::= expr T_PRECENT expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // expr_without_variable ::= expr T_DIV expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // expr_without_variable ::= expr T_TIMES expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // expr_without_variable ::= expr T_MINUS expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // expr_without_variable ::= expr T_PLUS expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // expr_without_variable ::= expr T_NEKUDA expr 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = e1 + e2; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // expr_without_variable ::= expr T_KOVA expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // expr_without_variable ::= expr T_REFERENCE expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // expr_without_variable ::= expr T_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // expr_without_variable ::= expr T_LOGICAL_XOR expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // expr_without_variable ::= expr T_LOGICAL_AND expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // expr_without_variable ::= expr T_LOGICAL_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // expr_without_variable ::= expr T_BOOLEAN_AND expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // expr_without_variable ::= expr T_BOOLEAN_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // expr_without_variable ::= T_DEC rw_cvar 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // expr_without_variable ::= rw_cvar T_DEC 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // expr_without_variable ::= T_INC rw_cvar 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // expr_without_variable ::= rw_cvar T_INC 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // expr_without_variable ::= cvar T_SR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // expr_without_variable ::= cvar T_SL_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // expr_without_variable ::= cvar T_XOR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // expr_without_variable ::= cvar T_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // expr_without_variable ::= cvar T_AND_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // expr_without_variable ::= cvar T_MOD_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // expr_without_variable ::= cvar T_CONCAT_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // expr_without_variable ::= cvar T_DIV_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // expr_without_variable ::= cvar T_MUL_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // expr_without_variable ::= cvar T_MINUS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // expr_without_variable ::= cvar T_PLUS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // expr_without_variable ::= T_NEW static_or_variable_string ctor_arguments 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String ctor = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = "object_instansiation;" + className + ";" + ctor; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // expr_without_variable ::= cvar T_EQUAL T_REFERENCE T_NEW static_or_variable_string ctor_arguments 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String ctor = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
   parser.getParserClient().handleObjectInstansiation(var, className, ctor, parser.getCurrentLine(), classNameleft, false);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // expr_without_variable ::= cvar T_EQUAL T_REFERENCE function_call 
            {
              String RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    if (var1 != null) {
        if (var2 != null) {
            String objectType = null;
            if(var2.startsWith("r_variable")){
                objectType = var2;
            } else {
                objectType = "r_variable;" + var2;    
            }
            
            parser.getParserClient().handleObjectInstansiation(var1, objectType, null, parser.getCurrentLine(), var2left, false);
        } else {
            parser.getParserClient().handleVariableName(var1, parser.getCurrentLine());
        }
    }

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // expr_without_variable ::= cvar T_EQUAL T_REFERENCE w_cvar 
            {
              String RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    if (var1 != null) {
        if (var2 != null) {
            String objectType = null;
            String args = null;
            if (var2.startsWith("$")){
                objectType = "r_variable;" + var2;
            } else {
                String[] strings = var2.split(";");
                objectType = strings[0];
                if(strings.length == 2){
                    args = strings[1];
                }
            }
            parser.getParserClient().handleObjectInstansiation(var1, objectType, args, parser.getCurrentLine(), var2left, false);
        } else {
            parser.getParserClient().handleVariableName(var1, parser.getCurrentLine());
        }
    }

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // expr_without_variable ::= cvar T_EQUAL expr 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int expleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int expright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String exp = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    if (var != null) {
        if (exp != null) {
            String objectType = null;
            String args = null;
            if (exp.startsWith("object_instansiation")) {
                String[] strings = exp.split(";");
                objectType = strings[1];
                  if(strings.length == 3){
                    args = strings[2];
                }
            } else if (exp.equals("array")) {
                objectType = "array";
            } else if (exp.startsWith("r_variable")){
                objectType = exp;
            } else if (exp.startsWith("function_call")){
                objectType = "r_variable;" + exp;
            }
            parser.getParserClient().handleObjectInstansiation(var, objectType, args, parser.getCurrentLine(), expleft, false);
        } else {
            parser.getParserClient().handleVariableName(var, parser.getCurrentLine());
        }
    }

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // expr_without_variable ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE T_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("expr_without_variable",38, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // non_empty_for_expr ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_for_expr",37, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // non_empty_for_expr ::= non_empty_for_expr T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_for_expr",37, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // for_expr ::= non_empty_for_expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("for_expr",36, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // for_expr ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("for_expr",36, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // echo_expr_list ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("echo_expr_list",35, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // echo_expr_list ::= echo_expr_list T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("echo_expr_list",35, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // class_variable_decleration ::= T_VARIABLE T_EQUAL static_scalar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		 RESULT = var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_variable_decleration",66, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // class_variable_decleration ::= T_VARIABLE 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = var;  
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_variable_decleration",66, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // class_variable_decleration ::= class_variable_decleration T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              String RESULT =null;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		 RESULT = decl+","+var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_variable_decleration",66, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // class_variable_decleration ::= class_variable_decleration T_COMMA T_VARIABLE 
            {
              String RESULT =null;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 RESULT = decl + "," + var; 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_variable_decleration",66, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // is_reference ::= T_REFERENCE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("is_reference",34, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // is_reference ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("is_reference",34, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // class_statement ::= T_VAR_COMMENT 
            {
              Object RESULT =null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    varComment = varComment.substring(2, varComment.length() - 2).trim();   // remove '/*' and '*/'

    StringTokenizer tokenizer = new StringTokenizer(varComment, " \n\t\r");
    if (tokenizer.countTokens() >= 3) {
        tokenizer.nextToken();  // ignore the @var
        String objectName = tokenizer.nextToken();
        String objectType = tokenizer.nextToken();
        if (objectName.charAt(0) != '$') {
            objectName = "$" + objectName;
        }
        parser.getParserClient().handleObjectInstansiation(objectName, objectType, null, parser.getCurrentLine(), varCommentleft, true);
    }

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_statement",33, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // class_statement ::= T_FUNCTION is_reference string_st NT$5 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$6 T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).value;
		int closeleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int closeright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object close = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleFunctionDeclarationEnds(functionName, true, closeright);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_statement",33, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // NT$6 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;

    int leftPosition = tfuncleft;
    parser.getParserClient().handleFunctionDeclaration(functionName, true, PhpParser4.ZERO_INTEGER.intValue(), parser.getPHPDoc(leftPosition), leftPosition, functionNameleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$6",83, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // NT$5 ::= 
            {
              Object RESULT =null;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
parser.getParserClient().handleFunctionDeclarationStarts(functionName);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$5",82, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // class_statement ::= T_VAR class_variable_decleration T_SEMICOLON 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		
    parser.getParserClient().handleClassVariablesDeclaration(decl, PhpParser4.ZERO_INTEGER.intValue(), parser.getPHPDoc(modifierleft), modifierleft, declright, declleft);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_statement",33, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // class_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_statement_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // class_statement_list ::= class_statement_list class_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("class_statement_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // static_var_list ::= T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_var_list",31, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // static_var_list ::= T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_var_list",31, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // static_var_list ::= static_var_list T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_var_list",31, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // static_var_list ::= static_var_list T_COMMA T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("static_var_list",31, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // global_var ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("global_var",30, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // global_var ::= T_DOLLAR r_cvar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar("$" + var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("global_var",30, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // global_var ::= T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("global_var",30, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // global_var_list ::= global_var 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("global_var_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // global_var_list ::= global_var_list T_COMMA global_var 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("global_var_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA expr_without_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // non_empty_function_call_parameter_list ::= T_REFERENCE w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // non_empty_function_call_parameter_list ::= cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // non_empty_function_call_parameter_list ::= expr_without_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // function_call_parameter_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call_parameter_list",26, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // function_call_parameter_list ::= non_empty_function_call_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("function_call_parameter_list",26, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // parameter ::= error 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleError("parameter::=error", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter",25, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // parameter ::= T_CONST T_VARIABLE 
            {
              Object RESULT =null;
		int cnstleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int cnstright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object cnst = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(null, var, false, true, "", cnstleft, varright, varleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter",25, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // parameter ::= T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(null, var, false, false, scalar, varleft, scalarright, varleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter",25, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // parameter ::= T_REFERENCE T_VARIABLE 
            {
              Object RESULT =null;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(null, var, true, false, "", refleft, varright, varleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter",25, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parameter ::= T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(null, var, false, false, "", varleft, varright, varleft, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter",25, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // non_empty_parameter_list ::= error non_empty_parameter_list 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		
    parser.getParserClient().handleError("non_empty_parameter_list::=error1", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",24, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // non_empty_parameter_list ::= non_empty_parameter_list T_COMMA non_empty_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",24, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // non_empty_parameter_list ::= parameter 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",24, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parameter_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter_list",23, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parameter_list ::= non_empty_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("parameter_list",23, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // new_else_single ::= T_ELSE T_NEKUDOTAIM inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("new_else_single",22, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // new_else_single ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("new_else_single",22, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // else_single ::= T_ELSE statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("else_single",21, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // else_single ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("else_single",21, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // new_elseif_list ::= new_elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("new_elseif_list",20, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // new_elseif_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("new_elseif_list",20, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // elseif_list ::= elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("elseif_list",19, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // elseif_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("elseif_list",19, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // while_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDWHILE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("while_statement",18, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // while_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("while_statement",18, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // case_separator ::= T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("case_separator",17, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // case_separator ::= T_NEKUDOTAIM 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("case_separator",17, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // case_list ::= case_list T_DEFAULT case_separator inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // case_list ::= case_list T_CASE expr case_separator inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // case_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // switch_case_list ::= T_NEKUDOTAIM T_SEMICOLON case_list T_ENDSWITCH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("switch_case_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // switch_case_list ::= T_NEKUDOTAIM case_list T_ENDSWITCH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("switch_case_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // switch_case_list ::= T_CURLY_OPEN T_SEMICOLON case_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("switch_case_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // switch_case_list ::= T_CURLY_OPEN case_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("switch_case_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // declare_list ::= declare_list T_COMMA string_st T_EQUAL static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("declare_list",14, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // declare_list ::= string_st T_EQUAL static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("declare_list",14, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // declare_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDDECLARE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("declare_statement",13, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // declare_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("declare_statement",13, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // foreach_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOREACH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("foreach_statement",12, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // foreach_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("foreach_statement",12, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // for_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOR T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("for_statement",11, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // for_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("for_statement",11, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // foreach_optional_arg ::= T_DOUBLE_ARROW w_cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("foreach_optional_arg",10, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // foreach_optional_arg ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("foreach_optional_arg",10, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // unticked_declaration_statement ::= T_CLASS T_STRING NT$3 T_EXTENDS T_STRING NT$4 T_CURLY_OPEN class_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-7)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-7)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-7)).value;
		int superClassNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int superClassNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		String superClassName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;
		int end_curlyleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int end_curlyright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object end_curly = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 parser.getParserClient().handleClassDeclarationEnds(className, end_curlyright); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_declaration_statement",69, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NT$4 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int superClassNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int superClassNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String superClassName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;

        String superClassFullName = "[" + superClassNameleft + "." + superClassNameright + "]" + superClassName;
        parser.getParserClient().handleClassDeclaration(className, PhpParser4.ZERO_INTEGER.intValue(), superClassFullName, null, parser.getPHPDoc(modifierleft), modifierleft, classNameleft, parser.getCurrentLine());
    
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$4",81, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$3 ::= 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
 parser.getParserClient().hadleClassDeclarationStarts(className, modifierleft); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$3",80, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // unticked_declaration_statement ::= T_CLASS T_STRING NT$2 T_CURLY_OPEN class_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;
		int end_curlyleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int end_curlyright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object end_curly = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		 parser.getParserClient().handleClassDeclarationEnds(className, end_curlyright); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_declaration_statement",69, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$2 ::= 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object modifier = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
 parser.getParserClient().hadleClassDeclarationStarts(className, modifierleft);
       parser.getParserClient().handleClassDeclaration(className, PhpParser4.ZERO_INTEGER.intValue(), null, null, parser.getPHPDoc(modifierleft), modifierleft, classNameleft, parser.getCurrentLine());
    
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$2",79, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // unticked_declaration_statement ::= T_FUNCTION is_reference string_st NT$0 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$1 T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)).value;
		int curlyCloseleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int curlyCloseright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object curlyClose = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		parser.getParserClient().handleFunctionDeclarationEnds(functionName, false, curlyCloseright);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_declaration_statement",69, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-10)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-3)).value;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)).value;

        parser.getParserClient().handleFunctionDeclaration(functionName, false, 0, parser.getPHPDoc(tFuncleft), tFuncleft, functionNameleft, parser.getCurrentLine());
     
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$1",78, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$0 ::= 
            {
              Object RESULT =null;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
parser.getParserClient().handleFunctionDeclarationStarts(functionName);
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("NT$0",77, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // declaration_statement ::= unticked_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("declaration_statement",67, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // use_filename ::= T_OPEN_PARENTHESE T_CONSTANT_ENCAPSED_STRING T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("use_filename",9, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // use_filename ::= T_CONSTANT_ENCAPSED_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("use_filename",9, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // unset_variable ::= cvar 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unset_variable",8, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // unset_variables ::= unset_variables T_COMMA unset_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unset_variables",7, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // unset_variables ::= unset_variable 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unset_variables",7, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // unticked_statement ::= T_VAR_COMMENT 
            {
              Object RESULT =null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    varComment = varComment.substring(2, varComment.length() - 2).trim();   // remove '/*' and '*/'

    StringTokenizer tokenizer = new StringTokenizer(varComment, " \n\t\r");
    if (tokenizer.countTokens() >= 3) {
        tokenizer.nextToken();  // ignore the @var
        String objectName = tokenizer.nextToken();
        String objectType = tokenizer.nextToken();
        if (objectName.charAt(0) != '$') {
            objectName = "$" + objectName;
        }
        parser.getParserClient().handleObjectInstansiation(objectName, objectType, null, parser.getCurrentLine(), varCommentleft, true);
    }

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // unticked_statement ::= error 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.peek()).value;
		
    parser.getParserClient().handleError("unticked_statement::=error ", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // unticked_statement ::= T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // unticked_statement ::= T_DECLARE T_OPEN_PARENTHESE declare_list T_CLOSE_PARENTHESE declare_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE expr_without_variable T_AS w_cvar foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-7)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE w_cvar T_AS w_cvar foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-7)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // unticked_statement ::= T_UNSET T_OPEN_PARENTHESE unset_variables T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // unticked_statement ::= T_USE use_filename T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // unticked_statement ::= expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // unticked_statement ::= T_INLINE_HTML 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // unticked_statement ::= T_ECHO echo_expr_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // unticked_statement ::= T_STATIC static_var_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // unticked_statement ::= T_GLOBAL global_var_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // unticked_statement ::= T_RETURN cvar T_SEMICOLON 
            {
              Object RESULT =null;
		 parser.getParserClient().haveReturnValue(); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // unticked_statement ::= T_RETURN expr_without_variable T_SEMICOLON 
            {
              Object RESULT =null;
		 parser.getParserClient().haveReturnValue(); 
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // unticked_statement ::= T_RETURN T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // unticked_statement ::= T_CONTINUE expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // unticked_statement ::= T_CONTINUE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // unticked_statement ::= T_BREAK expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // unticked_statement ::= T_BREAK T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // unticked_statement ::= T_SWITCH T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE switch_case_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // unticked_statement ::= T_FOR T_OPEN_PARENTHESE for_expr T_SEMICOLON for_expr T_SEMICOLON for_expr T_CLOSE_PARENTHESE for_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-8)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // unticked_statement ::= T_DO statement T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // unticked_statement ::= T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE while_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list new_elseif_list new_else_single T_ENDIF T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-9)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement elseif_list else_single 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // unticked_statement ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // statement ::= unticked_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("statement",3, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // inner_statement ::= declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // inner_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // inner_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("inner_statement_list",4, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // inner_statement_list ::= inner_statement_list inner_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("inner_statement_list",4, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // top_statement ::= declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // top_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // top_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("top_statement_list",1, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // top_statement_list ::= top_statement_list top_statement 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("top_statement_list",1, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= thestart EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)).value;
		RESULT = start_val;
              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.elementAt(CUP$PhpParser4$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$PhpParser4$parser.done_parsing();
          return CUP$PhpParser4$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // thestart ::= top_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser4$result = parser.getSymbolFactory().newSymbol("thestart",0, ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser4$stack.peek()), RESULT);
            }
          return CUP$PhpParser4$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }

