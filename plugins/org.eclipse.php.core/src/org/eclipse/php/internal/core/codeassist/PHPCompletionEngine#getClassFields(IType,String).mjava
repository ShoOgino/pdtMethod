	protected static IField[] getClassFields(IType type, String startsWith) {
		final Set<IField> fields = new HashSet<IField>();
		try {
			IDLTKSearchScope scope = SearchEngine.createHierarchyScope(type);
			SearchPattern pattern = SearchPattern.createPattern(startsWith + WILDCARD, IDLTKSearchConstants.FIELD, IDLTKSearchConstants.DECLARATIONS, SearchPattern.R_PATTERN_MATCH, PHPLanguageToolkit.getDefault());

			new SearchEngine().search(pattern, new SearchParticipant[] { SearchEngine.getDefaultSearchParticipant() }, scope, new SearchRequestor() {
				public void acceptSearchMatch(SearchMatch match) throws CoreException {
					fields.add((IField) match.getElement());
				}
			}, null);
			
			IField[] typeFields = type.getFields();
			for (IField typeField : typeFields) {
				if (typeField.getElementName().startsWith(startsWith)) {
					fields.add(typeField);
				}
			}
		} catch (Exception e) {
			Logger.logException(e);
		}
		return fields.toArray(new IField[fields.size()]);
	}

