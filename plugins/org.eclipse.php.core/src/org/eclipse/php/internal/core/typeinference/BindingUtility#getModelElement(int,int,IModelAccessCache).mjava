	/**
	 * This method returns model elements for the expression under the given
	 * offset and length, and will filter the results using the file-network.
	 * This method uses cached evaluated type from previous evaluations (if
	 * exists).
	 * 
	 * @param startOffset
	 *            Starting offset of the expression.
	 * @param length
	 *            Length of the expression.
	 * @param cache
	 *            Model access cache if available
	 * @return model element or <code>null</code> in case it couldn't be found
	 * @throws ModelException
	 * 
	 * @throws IllegalArgumentException
	 *             in case if context cannot be found for the given node.
	 * @see #getModelElement(int, int, boolean)
	 */
	public IModelElement[] getModelElement(int startOffset, int length, IModelAccessCache cache) throws ModelException {
		return getModelElement(startOffset, length, true, cache);
	}

