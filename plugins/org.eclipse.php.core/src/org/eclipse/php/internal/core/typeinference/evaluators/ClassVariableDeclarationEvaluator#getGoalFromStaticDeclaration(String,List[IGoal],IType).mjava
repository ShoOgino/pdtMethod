	protected void getGoalFromStaticDeclaration(String variableName,
			final List<IGoal> subGoals, final IType type) throws ModelException {
		ISourceModule sourceModule = type.getSourceModule();
		ModuleDeclaration moduleDeclaration = SourceParserUtil
				.getModuleDeclaration(sourceModule);
		TypeDeclaration typeDeclaration = PHPModelUtils.getNodeByClass(
				moduleDeclaration, type);

		// try to search declarations of type "self::$var =" or
		// "$this->var ="
		ClassDeclarationSearcher searcher = new ClassDeclarationSearcher(
				sourceModule, typeDeclaration, 0, 0, variableName);
		try {
			moduleDeclaration.traverse(searcher);
			Map<ASTNode, IContext> staticDeclarations = searcher
					.getStaticDeclarations();
			for (ASTNode node : staticDeclarations.keySet()) {
				subGoals.add(new ExpressionTypeGoal(staticDeclarations
						.get(node), node));
			}
		} catch (Exception e) {
			if (DLTKCore.DEBUG) {
				e.printStackTrace();
			}
		}
	}

