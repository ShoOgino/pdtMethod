	public static int getIndentationBaseLine(
			final IStructuredDocument document, int currLineIndex,
			final int offset, boolean checkMultiLine)
			throws BadLocationException {
		// PHPHeuristicScanner scanner = PHPHeuristicScanner
		// .createHeuristicScanner(document, offset - 1, true);
		// int nonWhitespacePosition = scanner.findNonWhitespaceBackward(
		// offset - 1, PHPHeuristicScanner.UNBOUND);
		// if (document.getLineOfOffset(nonWhitespacePosition) == currLineIndex
		// && nonWhitespacePosition <= offset) {
		// ITextRegion textRegion = scanner
		// .getTextRegion(nonWhitespacePosition);
		// if (textRegion != null
		// && textRegion.getType()
		// .equals(PHPRegionTypes.PHP_SEMICOLON)) {
		// return currLineIndex;
		// }
		// }
		if (checkMultiLine) {
			currLineIndex = adjustLine(document, currLineIndex, offset);
		}
		// PHPHeuristicScanner scanner = PHPHeuristicScanner
		// .createHeuristicScanner(document, offset - 1, true);
		//
		// int token = scanner.previousToken(offset - 1,
		// PHPHeuristicScanner.UNBOUND);
		// if (document.getLineOfOffset(scanner.getPosition()) == currLineIndex
		// && scanner.getPosition() <= offset) {
		// if (token == PHPHeuristicScanner.TokenSEMICOLON) {
		// // return currLineIndex;
		// }
		// }

		// if (document.getLength() == offset) {
		// if (document.getChar(offset - 1) == ';') {
		// return currLineIndex;
		// }
		// } else {
		// if (document.getChar(offset) == ';'
		// || document.getChar(offset - 1) == ';') {
		// return currLineIndex;
		// }
		// }
		while (currLineIndex > 0) {

			if (isIndentationBase(document, offset, currLineIndex,
					checkMultiLine))
				return currLineIndex;

			currLineIndex = getNextLineIndex(document, checkMultiLine,
					currLineIndex);
		}
		return 0;
	}

