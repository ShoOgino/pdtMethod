	/**
	 * Returns active completion context resolver. By default returns this class
	 * instance, but may be overridden using extension point.
	 * 
	 * @return array of active {@link ICompletionContextResolver}'s
	 */
	public static ICompletionContextResolver[] getActive() {
		if (instances == null) { // not synchronized since we don't care about
			// creating multiple instances of resolvers
			// in worst case

			List<ICompletionContextResolver> resolvers = new LinkedList<>();
			IConfigurationElement[] elements = Platform.getExtensionRegistry()
					.getConfigurationElementsFor("org.eclipse.php.core.completionContextResolvers"); //$NON-NLS-1$
			for (IConfigurationElement element : elements) {
				if (element.getName().equals("resolver")) { //$NON-NLS-1$
					try {
						resolvers.add((ICompletionContextResolver) element.createExecutableExtension("class")); //$NON-NLS-1$
					} catch (CoreException e) {
						PHPCorePlugin.log(e);
					}
				}
			}
			resolvers.add(new CompletionContextResolver()); // add default
			instances = resolvers.toArray(new ICompletionContextResolver[resolvers.size()]);
		}
		return instances;
	}

