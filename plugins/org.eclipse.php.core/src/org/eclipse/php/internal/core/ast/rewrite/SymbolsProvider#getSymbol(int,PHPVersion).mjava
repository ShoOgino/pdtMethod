	/**
	 * Returns a {@link Symbol} that holds a sym id that is computed by
	 * identifying the correct id for the given php version. The given symID
	 * should be one of this class ID constants, and the PHP version String
	 * should be one of the {@link AST} defined PHP constants. The returned
	 * Symbol will always be a non-null Symbol. In case the Symbol was not
	 * recognized, an {@link SymbolsProvider2#ERROR_SYMBOL} will be returned.
	 * 
	 * @param symID
	 *            Symbol ID - One of this class constants.
	 * @param phpVersion
	 *            PHP version String.
	 * @return A Symbol reference for the given id and php version.
	 */
	public static Symbol getSymbol(int symID, PHPVersion phpVersion) {
		if (PHPVersion.PHP5 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP5;
			case LESS_ID:
				return LESS_SYMBOL_PHP5;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP5;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP5;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP5;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP5;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP5;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP5;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP5;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP5;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP5;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP5;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP5;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP5;
			case DO_ID:
				return DO_SYMBOL_PHP5;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP5;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP5;
			case THROW_ID:
				return THROW_SYMBOL_PHP5;
			case NEW_ID:
				return NEW_SYMBOL_PHP5;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP5;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP5;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP5;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP5;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP5;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP5;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP5;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP5;
			default:
				break;
			}
		}
		if (PHPVersion.PHP5_3 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP53;
			case LESS_ID:
				return LESS_SYMBOL_PHP53;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP53;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP53;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP53;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP53;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP53;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP53;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP53;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP53;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP53;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP53;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP53;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP53;
			case DO_ID:
				return DO_SYMBOL_PHP53;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP53;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP53;
			case THROW_ID:
				return THROW_SYMBOL_PHP53;
			case NEW_ID:
				return NEW_SYMBOL_PHP53;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP53;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP53;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP53;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP53;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP53;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP53;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP53;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP53;
			default:
				break;
			}
		}
		if (PHPVersion.PHP5_4 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP54;
			case LESS_ID:
				return LESS_SYMBOL_PHP54;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP54;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP54;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP54;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP54;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP54;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP54;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP54;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP54;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP54;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP54;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP54;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP54;
			case DO_ID:
				return DO_SYMBOL_PHP54;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP54;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP54;
			case THROW_ID:
				return THROW_SYMBOL_PHP54;
			case NEW_ID:
				return NEW_SYMBOL_PHP54;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP54;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP54;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP54;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP54;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP54;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP54;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP54;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP54;
			default:
				break;
			}
		}

		if (PHPVersion.PHP5_5 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP55;
			case LESS_ID:
				return LESS_SYMBOL_PHP55;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP55;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP55;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP55;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP55;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP55;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP55;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP55;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP55;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP55;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP55;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP55;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP55;
			case DO_ID:
				return DO_SYMBOL_PHP55;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP55;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP55;
			case THROW_ID:
				return THROW_SYMBOL_PHP55;
			case NEW_ID:
				return NEW_SYMBOL_PHP55;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP55;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP55;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP55;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP55;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP55;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP55;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP55;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP55;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP55;
			default:
				break;
			}
		}

		if (PHPVersion.PHP5_6 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP56;
			case LESS_ID:
				return LESS_SYMBOL_PHP56;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP56;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP56;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP56;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP56;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP56;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP56;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP56;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP56;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP56;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP56;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP56;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP56;
			case DO_ID:
				return DO_SYMBOL_PHP56;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP56;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP56;
			case THROW_ID:
				return THROW_SYMBOL_PHP56;
			case NEW_ID:
				return NEW_SYMBOL_PHP56;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP56;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP56;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP56;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP56;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP56;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP56;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP56;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP56;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP56;
			default:
				break;
			}
		}

		if (PHPVersion.PHP7_0 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP7;
			case LESS_ID:
				return LESS_SYMBOL_PHP7;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP7;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP7;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP7;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP7;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP7;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP7;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP7;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP7;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP7;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP7;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP7;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP7;
			case DO_ID:
				return DO_SYMBOL_PHP7;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP7;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP7;
			case THROW_ID:
				return THROW_SYMBOL_PHP7;
			case NEW_ID:
				return NEW_SYMBOL_PHP7;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP7;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP7;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP7;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP7;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP7;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP7;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP7;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP7;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP7;
			default:
				break;
			}
		}

		if (PHPVersion.PHP7_1 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP71;
			case LESS_ID:
				return LESS_SYMBOL_PHP71;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP71;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP71;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP71;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP71;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP71;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP71;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP71;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP71;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP71;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP71;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP71;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP71;
			case DO_ID:
				return DO_SYMBOL_PHP71;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP71;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP71;
			case THROW_ID:
				return THROW_SYMBOL_PHP71;
			case NEW_ID:
				return NEW_SYMBOL_PHP71;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP71;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP71;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP71;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP71;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP71;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP71;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP71;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP71;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP71;
			default:
				break;
			}
		}

		if (PHPVersion.PHP7_2 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP72;
			case LESS_ID:
				return LESS_SYMBOL_PHP72;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP72;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP72;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP72;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP72;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP72;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP72;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP72;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP72;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP72;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP72;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP72;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP72;
			case DO_ID:
				return DO_SYMBOL_PHP72;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP72;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP72;
			case THROW_ID:
				return THROW_SYMBOL_PHP72;
			case NEW_ID:
				return NEW_SYMBOL_PHP72;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP72;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP72;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP72;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP72;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP72;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP72;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP72;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP72;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP72;
			default:
				break;
			}
		}

		if (PHPVersion.PHP7_3 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP73;
			case LESS_ID:
				return LESS_SYMBOL_PHP73;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP73;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP73;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP73;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP73;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP73;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP73;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP73;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP73;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP73;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP73;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP73;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP73;
			case DO_ID:
				return DO_SYMBOL_PHP73;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP73;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP73;
			case THROW_ID:
				return THROW_SYMBOL_PHP73;
			case NEW_ID:
				return NEW_SYMBOL_PHP73;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP73;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP73;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP73;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP73;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP73;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP73;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP73;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP73;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP73;
			default:
				break;
			}
		}

		if (PHPVersion.PHP7_4 == phpVersion) {
			switch (symID) {
			case DOT_SYMBOL_ID:
				return DOT_SYMBOL_PHP74;
			case LESS_ID:
				return LESS_SYMBOL_PHP74;
			case GREATER_ID:
				return GREATER_SYMBOL_PHP74;
			case RBRACKET_ID:
				return RBRACKET_SYMBOL_PHP74;
			case LBRACKET_ID:
				return LBRACKET_SYMBOL_PHP74;
			case RBRACE_ID:
				return RBRACE_SYMBOL_PHP74;
			case LBRACE_ID:
				return LBRACE_SYMBOL_PHP74;
			case RPAREN_ID:
				return RPAREN_SYMBOL_PHP74;
			case LPAREN_ID:
				return LPAREN_SYMBOL_PHP74;
			case INTERFACE_ID:
				return INTERFACE_SYMBOL_PHP74;
			case CLASS_ID:
				return CLASS_SYMBOL_PHP74;
			case RETURN_ID:
				return RETURN_SYMBOL_PHP74;
			case BREAK_ID:
				return BREAK_SYMBOL_PHP74;
			case CONTINUE_ID:
				return CONTINUE_SYMBOL_PHP74;
			case DO_ID:
				return DO_SYMBOL_PHP74;
			case WHILE_ID:
				return WHILE_SYMBOL_PHP74;
			case SEMICOLON_ID:
				return SEMICOLON_SYMBOL_PHP74;
			case THROW_ID:
				return THROW_SYMBOL_PHP74;
			case NEW_ID:
				return NEW_SYMBOL_PHP74;
			case ELSE_ID:
				return ELSE_SYMBOL_PHP74;
			case IMPLEMENTS_ID:
				return IMPLEMENTS_SYMBOL_PHP74;
			case END_FOR_ID:
				return END_FOR_SYMBOL_PHP74;
			case END_FOREACH_ID:
				return END_FOREACH_SYMBOL_PHP74;
			case END_IF_ID:
				return END_IF_SYMBOL_PHP74;
			case END_WHILE_ID:
				return END_WHILE_SYMBOL_PHP74;
			case END_SWITCH_ID:
				return END_SWITCH_SYMBOL_PHP74;
			case OBJECT_OP_SYMBOL_ID:
				return OBJECT_OP_SYMBOL_PHP74;
			case YIELD_ID:
				return YIELD_SYMBOL_PHP74;
			default:
				break;
			}
		}

		return ERROR_SYMBOL;
	}

