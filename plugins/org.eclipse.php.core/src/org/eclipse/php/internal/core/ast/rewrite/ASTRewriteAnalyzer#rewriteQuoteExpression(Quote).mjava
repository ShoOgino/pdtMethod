	/**
	 * @param quote
	 */
	private void rewriteQuoteExpression(Quote quote) {
		int expressionStart = quote.getStart();
		switch (quote.getQuoteType()) {
		case Quote.QT_QUOTE:
		case Quote.QT_SINGLE:
			expressionStart++;
			break;
		case Quote.QT_HEREDOC:
			// search for the first new line
			int quoteEnd = quote.getEnd();
			for (; expressionStart < quoteEnd; expressionStart++) {
				if (content[expressionStart] == '\n'
						|| content[expressionStart] == '\r') {
					expressionStart++;
					if (content[expressionStart] == '\n'
							|| content[expressionStart] == '\r') {
						expressionStart++;
					}
					break;
				}
			}
			break;

		}
		rewriteNodeList(quote, Quote.EXPRESSIONS_PROPERTY, expressionStart, "", //$NON-NLS-1$
				""); //$NON-NLS-1$
		// In case that the original expressions list was empty, we should add a
		// new line
		List originalValue = (List) getOriginalValue(quote,
				Quote.EXPRESSIONS_PROPERTY);
		List newValue = (List) getNewValue(quote, Quote.EXPRESSIONS_PROPERTY);
		if ((originalValue == null || originalValue.size() == 0)
				&& newValue != null && newValue.size() > 0) {
			doTextInsert(expressionStart, "\n", //$NON-NLS-1$
					getEditGroup(quote, Quote.EXPRESSIONS_PROPERTY));
		}
	}

