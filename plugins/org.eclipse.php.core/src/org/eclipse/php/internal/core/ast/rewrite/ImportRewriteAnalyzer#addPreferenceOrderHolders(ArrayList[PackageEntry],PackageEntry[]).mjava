	private void addPreferenceOrderHolders(ArrayList<PackageEntry> packageEntries, PackageEntry[] preferenceOrder) {
		if (packageEntries.isEmpty()) {
			// all new: copy the elements
			for (int i = 0; i < preferenceOrder.length; i++) {
				packageEntries.add(preferenceOrder[i]);
			}
		} else {
			// match the preference order entries to existing imports
			// entries not found are appended after the last successfully
			// matched entry

			PackageEntry[] lastAssigned = new PackageEntry[preferenceOrder.length];

			// find an existing package entry that matches most
			for (int k = 0; k < packageEntries.size(); k++) {
				PackageEntry entry = packageEntries.get(k);
				if (!entry.isComment()) {
					String currName = entry.getName();
					int currNameLen = currName.length();
					int bestGroupIndex = -1;
					int bestGroupLen = -1;
					for (int i = 0; i < preferenceOrder.length; i++) {
						String currPrefEntry = preferenceOrder[i].getName();
						int currPrefLen = currPrefEntry.length();
						if (currName.startsWith(currPrefEntry) && currPrefLen >= bestGroupLen) {
							if (currPrefLen == currNameLen
									|| currName.charAt(currPrefLen) == NamespaceReference.NAMESPACE_SEPARATOR) {
								if (bestGroupIndex == -1 || currPrefLen > bestGroupLen) {
									bestGroupLen = currPrefLen;
									bestGroupIndex = i;
								}
							}
						}
					}
					if (bestGroupIndex != -1) {
						entry.setGroupID(preferenceOrder[bestGroupIndex].getName());
						lastAssigned[bestGroupIndex] = entry; // remember last
						// entry
					}
				}
			}
			// fill in not-assigned categories, keep partial order
			int currAppendIndex = 0;
			for (int i = 0; i < lastAssigned.length; i++) {
				PackageEntry entry = lastAssigned[i];
				if (entry == null) {
					PackageEntry newEntry = preferenceOrder[i];
					if (currAppendIndex == 0) {
						currAppendIndex = getIndexAfterStatics(packageEntries);
					}
					packageEntries.add(currAppendIndex, newEntry);
					currAppendIndex++;
				} else {
					currAppendIndex = packageEntries.indexOf(entry) + 1;
				}
			}
		}
	}

