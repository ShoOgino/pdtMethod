	private int getNextLineIndex(int offset, int currLineIndex, boolean checkMultiLineStatement)
			throws BadLocationException {
		final IRegion lineInfo = document.getLineInformation(currLineIndex);
		final int currLineEndOffset = lineInfo.getOffset() + lineInfo.getLength();
		String checkedLineBeginState = FormatterUtils.getPartitionType(document, lineInfo.getOffset(), true);

		String forLineEndState = FormatterUtils.getPartitionType(document, currLineEndOffset);

		int insideBraceless = getMultilineInsideBraceless(Math.min(currLineEndOffset, offset));
		if (insideBraceless >= 0) {
			return document.getLineOfOffset(insideBraceless);
		}
		if (isMultilineType(checkedLineBeginState) && (checkMultiLineStatement
				|| shouldNotConsiderAsIndentationBase(checkedLineBeginState, forLineEndState))) {
			int index = getMultiLineStatementStartOffset(lineInfo.getOffset(), currLineIndex);
			if (index > -1) {
				return index;
			}
		}

		if (checkMultiLineStatement) {
			int result = adjustLine(currLineIndex, currLineEndOffset);
			if (result == currLineIndex && result != 0) {
				result--;
			}
			return result;
		}

		return currLineIndex - 1;
	}

