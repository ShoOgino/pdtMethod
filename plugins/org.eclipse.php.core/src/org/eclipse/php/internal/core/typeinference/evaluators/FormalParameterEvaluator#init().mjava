	public IGoal[] init() {
		ExpressionTypeGoal typedGoal = (ExpressionTypeGoal) goal;
		FormalParameter parameter = (FormalParameter) typedGoal.getExpression();

		SimpleReference type = parameter.getParameterType();
		if (type != null) {
			result = PHPClassType.fromSimpleReference(type);
		} else {
			IContext context = typedGoal.getContext();
			if (context instanceof MethodContext) {
				MethodContext methodContext = (MethodContext) context;
				PHPMethodDeclaration methodDeclaration = (PHPMethodDeclaration) methodContext
						.getMethodNode();
				PHPDocBlock[] docBlocks = new PHPDocBlock[0];
				try {
					IMethod method = (IMethod) methodContext.getSourceModule()
							.getElementAt(methodDeclaration.getNameStart());
					if (method.getDeclaringType() != null) {
						docBlocks = PHPModelUtils.getTypeHierarchyMethodDoc(
								method.getDeclaringType(),
								method.getElementName(), true, null);
					} else {
						docBlocks = new PHPDocBlock[] { methodDeclaration
								.getPHPDoc() };
					}
				} catch (CoreException e) {
				}
				for (PHPDocBlock docBlock : docBlocks) {
					if (result != null) {
						break;
					}
					if (docBlock != null) {
						for (PHPDocTag tag : docBlock.getTags()) {
							if (tag.getTagKind() == PHPDocTag.PARAM) {
								SimpleReference[] references = tag
										.getReferences();
								if (references.length == 2) {
									if (references[0].getName().equals(
											parameter.getName())) {
										// result = PHPClassType
										// .fromSimpleReference(PHPModelUtils.getFullName(references[1].getName(),
										// methodContext.getSourceModule(),
										// references[1].sourceStart()));
										// fix unit test testDoctag7.pdtt
										result = PHPClassType
												.fromTypeName(
														references[1].getName(),
														methodContext
																.getSourceModule(),
														references[1]
																.sourceStart());
									}
								}
							}
						}
					}
				}
			}
		}
		return IGoal.NO_GOALS;
	}

