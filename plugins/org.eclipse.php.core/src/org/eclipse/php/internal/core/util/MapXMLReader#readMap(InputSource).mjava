	/**
	 * Read a Map from the given input stream . The returned Map will always
	 * have a String key and a List of one or more mapped values (also Strings).
	 * 
	 * @param input
	 *            An InputStream.
	 * @return A Map read from the input stream.
	 * @throws IOException
	 *             If any I/O error occures.
	 * @throws ParserConfigurationException
	 * @throws SAXException
	 */
	public static Map readMap(InputSource input) throws IOException, ParserConfigurationException, SAXException {
		Map map = new HashMap();
		DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
		Document dom = builder.parse(input);
		NodeList keys = dom.getElementsByTagName(MapXMLWriter.KEY_TAG);
		for (int i = 0; i < keys.getLength(); i++) {
			Node node = keys.item(i);
			NamedNodeMap attributes = node.getAttributes();
			if (attributes != null) {
				Node keyName = attributes.getNamedItem(MapXMLWriter.NAME_TAG);
				if (keyName != null) {
					String key = keyName.getNodeValue();
					NodeList values = node.getChildNodes();
					List valuesList = new ArrayList(values.getLength());
					for (int j = 0; j < values.getLength(); j++) {
						Node valueNode = values.item(j);
						if (valueNode.getNodeType() == Node.ELEMENT_NODE) {
							valueNode = valueNode.getFirstChild();
							if (valueNode != null) {
								valuesList.add(valueNode.getNodeValue());
							}
						}
					}
					map.put(key, valuesList);
				}
			}
		}
		return map;
	}

