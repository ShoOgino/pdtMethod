	@Override
	public boolean visit(ClassDeclaration classDeclaration) {
		int modifier = classDeclaration.getModifier();
		if (modifier != ClassDeclaration.MODIFIER_NONE) {
			result.append(ClassDeclaration.getModifier(modifier));
			result.append(' ');
		}
		result.append("class "); //$NON-NLS-1$
		classDeclaration.getName().accept(this);
		if (classDeclaration.getSuperClass() != null) {
			result.append(" extends "); //$NON-NLS-1$
			classDeclaration.getSuperClass().accept(this);
		}
		Iterator<Identifier> iterator = classDeclaration.interfaces().iterator();
		if (!iterator.hasNext()) {
			result.append(" implements "); //$NON-NLS-1$
			iterator.next().accept(this);
			while (iterator.hasNext()) {
				result.append(" , "); //$NON-NLS-1$
				iterator.next().accept(this);
			}
		}
		classDeclaration.getBody().accept(this);
		return false;
	}

