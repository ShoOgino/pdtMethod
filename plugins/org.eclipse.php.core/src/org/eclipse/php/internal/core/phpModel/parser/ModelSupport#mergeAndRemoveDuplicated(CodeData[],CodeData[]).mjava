	public static CodeData[] mergeAndRemoveDuplicated(CodeData[] sortedArray1, CodeData[] sortedArray2) {
		if (sortedArray1 == null) {
			return sortedArray2;
		}
		if (sortedArray2 == null) {
			return sortedArray1;
		}
		if (sortedArray1.length == 0) {
			return sortedArray2;
		}
		if (sortedArray2.length == 0) {
			return sortedArray1;
		}
		List result = new ArrayList(sortedArray1.length + sortedArray2.length);
		int pointer1 = 0;
		int pointer2 = 0;
		while (pointer1 != sortedArray1.length || pointer2 != sortedArray2.length) {
			if (pointer1 == sortedArray1.length) {
				result.add(sortedArray2[pointer2++]);
				continue;
			}
			if (pointer2 == sortedArray2.length) {
				result.add(sortedArray1[pointer1++]);
				continue;
			}
			int compareTo = sortedArray1[pointer1].compareTo(sortedArray2[pointer2]);
			if (compareTo == 0) {
				result.add(sortedArray1[pointer1++]);
				pointer2++;
				continue;
			}
			if (compareTo < 0) {
				result.add(sortedArray1[pointer1++]);
			} else {
				result.add(sortedArray2[pointer2++]);
			}
		}

		CodeData[] rv = new CodeData[result.size()];
		result.toArray(rv);
		return rv;
	}

