	public Object evaluateGoal(IGoal rootGoal, IPruner pruner, IEvaluationStatisticsListener statisticsListener) {
		long time = 0;
		if (statisticsListener == null) {
			statisticsListener = new DefaultEvaluatorStatisticsListener();
		}
		this.statisticsListener = statisticsListener;

		reset();
		if (pruner != null) {
			pruner.init();
		}
		workingQueue.add(new WorkingPair(rootGoal, null));
		statisticsListener.evaluationStarted(rootGoal);
		
		while (!workingQueue.isEmpty()) {
			
			WorkingPair pair = (WorkingPair) workingQueue.getFirst();
			workingQueue.removeFirst();
			GoalEvaluationState state = (GoalEvaluationState) goalStates.get(pair.goal);
			
			if (state != null && pair.creator != null) {
				notifyEvaluator(pair.creator, pair.goal);
			} else {
				boolean prune = false;
				if (pruner != null && pair.creator != null) {
					prune = pruner.prune(pair.goal);
				}
				
				if (prune) {
					storeGoal(pair.goal, IGoal.State.PRUNED, null, pair.creator);
					notifyEvaluator(pair.creator, pair.goal);
				} else {
					IGoalEvaluator evaluator = evaluatorFactory.createEvaluator(pair.goal);
					Assert.isNotNull(evaluator);
					statisticsListener.goalEvaluatorAssigned(pair.goal, evaluator);
					time = System.currentTimeMillis();
					IGoal[] newGoals = evaluator.init();
					if (newGoals == null) {
						newGoals = IGoal.NO_GOALS;
					}
					statisticsListener.evaluatorInitialized(evaluator, newGoals, System.currentTimeMillis() - time);
					
					if (newGoals.length > 0) {
						for (int i = 0; i < newGoals.length; i++) {
							workingQueue.add(new WorkingPair(newGoals[i], evaluator));
						}
						EvaluatorState evaluatorState = new EvaluatorState(newGoals.length);
						evaluatorState.subgoals.addAll(Arrays.asList(newGoals));
						evaluatorStates.put(evaluator, evaluatorState);
						storeGoal(pair.goal, IGoal.State.WAITING, null, pair.creator);
					} else {
						time = System.currentTimeMillis();
						Object result = evaluator.produceResult();
						statisticsListener.evaluatorProducedResult(evaluator, result, System.currentTimeMillis() - time);
						storeGoal(pair.goal, IGoal.State.DONE, result, pair.creator);
						if (pair.creator != null) {
							notifyEvaluator(pair.creator, pair.goal);
						}
					}
				}
			}
		}
		GoalEvaluationState s = (GoalEvaluationState) goalStates.get(rootGoal);

		Assert.isTrue(s.state == IGoal.State.DONE);
		return s.result;
	}

