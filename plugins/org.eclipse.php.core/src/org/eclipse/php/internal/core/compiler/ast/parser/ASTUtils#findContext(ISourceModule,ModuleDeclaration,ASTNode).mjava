	/**
	 * Finds type inference context for the given AST node.
	 * 
	 * @param sourceModule
	 *            Source module element
	 * @param unit
	 *            Module decalaration AST node
	 * @param target
	 *            AST node to find context for
	 */
	public static IContext findContext(final ISourceModule sourceModule,
			final ModuleDeclaration unit, final ASTNode target) {

		ContextFinder visitor = new ContextFinder(sourceModule) {
			private IContext context;

			public IContext getContext() {
				return context;
			}

			public boolean visitGeneral(ASTNode node) throws Exception {
				if (node == target) {
					context = contextStack.peek();
					return false;
				}
				return context == null;
			}
		};

		try {
			unit.traverse(visitor);
		} catch (Exception e) {
			Logger.logException(e);
		}

		return visitor.getContext();
	}

