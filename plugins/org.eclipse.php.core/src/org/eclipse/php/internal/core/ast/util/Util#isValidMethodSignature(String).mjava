	/*
	 * public static boolean isValidFolderNameForPackage(String folderName,
	 * String sourceLevel, String complianceLevel) { return
	 * JavaConventions.validateIdentifier(folderName, sourceLevel,
	 * complianceLevel).getSeverity() != IStatus.ERROR; }
	 */
	/**
	 * Returns true if the given method signature is valid, false if it is not.
	 */
	public static boolean isValidMethodSignature(String sig) {
		int len = sig.length();
		if (len == 0)
			return false;
		int i = 0;
		char c = sig.charAt(i++);
		if (c != '(')
			return false;
		if (i >= len)
			return false;
		while (sig.charAt(i) != ')') {
			// Void is not allowed as a parameter type.
			i = checkTypeSignature(sig, i, len, false);
			if (i == -1)
				return false;
			if (i >= len)
				return false;
		}
		++i;
		i = checkTypeSignature(sig, i, len, true);
		return i == len;
	}

