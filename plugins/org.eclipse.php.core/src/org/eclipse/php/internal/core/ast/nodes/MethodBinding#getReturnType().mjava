	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.php.internal.core.ast.nodes.IFunctionBinding#getReturnType()
	 */
	public ITypeBinding[] getReturnType() {
		List<ITypeBinding> result = new ArrayList<ITypeBinding>();
		ISourceModule sourceModule = modelElement.getSourceModule();

		int flags;
		try {
			flags = modelElement.getFlags();
			if (!PHPFlags.isAbstract(flags)) {
				BindingUtility bindingUtility = new BindingUtility(sourceModule);
				IEvaluatedType[] evaluatedFunctionReturnTypes = bindingUtility
						.getFunctionReturnType(modelElement);
				for (IEvaluatedType currentEvaluatedType : evaluatedFunctionReturnTypes) {
					ITypeBinding typeBinding = this.resolver.getTypeBinding(
							currentEvaluatedType, sourceModule);
					if (typeBinding != null) {
						result.add(typeBinding);
					}
				}
			} else {
				IModelElement parentElement = modelElement.getParent();
				if (parentElement instanceof IType) {
					IType parent = (IType) parentElement;
					IType[] functionReturnTypes = CodeAssistUtils
							.getFunctionReturnType(new IType[] { parent },
									modelElement.getElementName(),
									CodeAssistUtils.USE_PHPDOC, modelElement
											.getSourceModule(), 0);
					for (IType currentEvaluatedType : functionReturnTypes) {
						ITypeBinding typeBinding = this.resolver
								.getTypeBinding(currentEvaluatedType);
						if (typeBinding != null) {
							result.add(typeBinding);
						}
					}
				}
			}
		} catch (ModelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return (ITypeBinding[]) result.toArray(new ITypeBinding[result.size()]);
	}

