	/**
	 * Non-null prefix part of a "grouped use statement", in the statement part
	 * before '{'. <b>Returned value is null if it's not a "grouped use
	 * statement".</b> For example, this method would return "X\Y\" with
	 * <code>"use X\Y\ { A, B, \C\D| };"</code> and would return "\X\Y\" with
	 * <code>"use \X\Y\ { A, B, \C\D| };"</code>.
	 * 
	 * @return
	 */
	@SuppressWarnings("null")
	@Nullable
	public String getGroupPrefixBeforeOpeningCurly() {
		if (!isCursorInsideGroupStatement) {
			return null;
		}
		int statementLength = biggestCommonStatementText.length();
		int prefixEnd = PHPTextSequenceUtilities.readBackwardSpaces(biggestCommonStatementText, statementLength); // read
		// whitespace
		int prefixStart = PHPTextSequenceUtilities.readNamespaceStartIndex(biggestCommonStatementText, prefixEnd, true);
		return prefixStart < 0 ? "" : biggestCommonStatementText.subSequence(prefixStart, prefixEnd).toString(); //$NON-NLS-1$
	}

