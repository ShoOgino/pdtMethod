	/**
	 * There is no special definition of equality for bindings; equality is
	 * simply object identity. Within the context of a single cluster of
	 * bindings, each binding is represented by a distinct object. However,
	 * between different clusters of bindings, the binding objects may or may
	 * not be different; in these cases, the client should compare bindings
	 * using {@link #isEqualTo(IBinding)}, which checks their keys.
	 * 
	 * @param other
	 *            {@inheritDoc}
	 * @return {@inheritDoc}
	 */
	public boolean equals(Object other) {
		if (other == this) {
			// identical binding - equal (key or no key)
			return true;
		}
		if (other == null) {
			// other binding missing
			return false;
		}
		if (!(other instanceof TypeBinding)) {
			return false;
		}
		TypeBinding otherBinding = (TypeBinding) other;
		if (!this.type.equals(otherBinding.type)) {
			return false;
		}
		if (this.elements == null) {
			return otherBinding.elements == null;
		}

		if (elements.length != otherBinding.elements.length) {
			return false;
		}

		for (int i = 0; i < elements.length; i++) {
			boolean hasEqual = false;
			for (int j = 0; j < otherBinding.elements.length; j++) {
				// if found equals, break the inner loop
				if (elements[i].equals(otherBinding.elements[j])) {
					hasEqual = true;
					break;
				}
			}
			// if no equal element found, return false.
			if (!hasEqual) {
				return false;
			}

		}
		return true;

	}

