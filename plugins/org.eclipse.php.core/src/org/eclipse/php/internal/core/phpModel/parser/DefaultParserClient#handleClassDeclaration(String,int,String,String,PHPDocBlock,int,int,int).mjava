	public void handleClassDeclaration(String className, int modifier, String superClassName, String interfacesNames, PHPDocBlock docInfo, int startPosition, int stopPosition, int lineNumber) {
		PHPClassData.PHPSuperClassNameData superClassData;
		if (superClassName != null) {
			int index = superClassName.indexOf(']');
			String locationStr = superClassName.substring(1, index);
			superClassName = superClassName.substring(index + 1);
			int superClassStartPosition = Integer.parseInt(locationStr.substring(0, locationStr.indexOf(".")));
			int superClassEndPosition = Integer.parseInt(locationStr.substring(locationStr.indexOf(".") + 1, locationStr.length()));
			UserData userData = PHPCodeDataFactory.createUserData(workingFileName, superClassStartPosition, superClassEndPosition, superClassStartPosition, 0);
			superClassData = PHPCodeDataFactory.createPHPSuperClassNameData(superClassName, userData);
		} else {
			superClassData = PHPCodeDataFactory.createPHPSuperClassNameData(superClassName, null);
		}

		PHPClassData.PHPInterfaceNameData[] interfaces;
		if (interfacesNames != null) {
			String[] interfacesNamesArray = interfacesNames.split(",");
			interfaces = new PHPClassData.PHPInterfaceNameData[interfacesNamesArray.length];
			for (int i = 0; i < interfacesNamesArray.length; i++) {

				String interfaceName = interfacesNamesArray[i];
				int index = interfaceName.indexOf(']');
				String locationStr = interfaceName.substring(1, index);
				interfaceName = interfaceName.substring(index + 1);
				int interfaceNameStartPosition = Integer.parseInt(locationStr.substring(0, locationStr.indexOf(".")));
				int interfaceNameEndPosition = Integer.parseInt(locationStr.substring(locationStr.indexOf(".") + 1, locationStr.length()));
				UserData userData = PHPCodeDataFactory.createUserData(workingFileName, interfaceNameStartPosition, interfaceNameEndPosition, interfaceNameStartPosition, 0);
				interfaces[i] = PHPCodeDataFactory.createPHPInterfaceNameData(interfaceName, userData);
			}

		} else {
			interfaces = PHPCodeDataFactory.EMPTY_INTERFACES_DATA_ARRAY;
		}

		UserData userData = PHPCodeDataFactory.createUserData(workingFileName, startPosition, stopPosition, stopPosition, lineNumber);

		PHPClassData classData = PHPCodeDataFactory.createPHPClassData(className, modifier, docInfo, userData, superClassData, interfaces, PHPCodeDataFactory.EMPTY_CLASS_VAR_DATA_ARRAY, PHPCodeDataFactory.EMPTY_CLASS_CONST_DATA_ARRAY, PHPCodeDataFactory.EMPTY_FUNCTIONS_DATA_ARRAY);

		classes.add(classData);
		classesStack.push(classData);
	}

