	/**
	 * Finds USE statement by the alias name
	 * 
	 * @param moduleDeclaration
	 *            The AST root node
	 * @param aliasName
	 *            The alias name.
	 * @param offset
	 *            Current position in the file (this is needed since we don't
	 *            want to take USE statements placed below current position into
	 *            account)
	 * @return USE statement part node, or <code>null</code> in case relevant
	 *         statement couldn't be found
	 */
	public static UsePart findUseStatementByAlias(ModuleDeclaration moduleDeclaration, String aliasName, int offset) {

		FindUseStatementByAliasASTVisitor visitor = new FindUseStatementByAliasASTVisitor(aliasName, offset);

		try {
			moduleDeclaration.traverse(visitor);
		} catch (Exception e) {
			Logger.logException(e);
		}

		return visitor.getResult();
	}

