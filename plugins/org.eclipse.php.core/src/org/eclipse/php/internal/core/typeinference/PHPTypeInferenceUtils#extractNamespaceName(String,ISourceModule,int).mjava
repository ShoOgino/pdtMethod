	/**
	 * Extracts the namespace name from the specified element name and resolves it using USE statements that present in the file.
	 * @param elementName The name of the element, like: \A\B or A\B\C.
	 * @param sourceModule Source module where the element is referenced
	 * @param offset The offset where element is referenced
	 * @return namespace name or <code>null</code> in case there's no namespace prefix in the element. In case of global namespace
	 * 		this method returns an empty string: <code>""</code>
	 */
	public static String extractNamespaceName(String elementName, ISourceModule sourceModule, final int offset) {

		boolean isGlobal = false;
		if (elementName.charAt(0) == '\\') {
			isGlobal = true;
			elementName = elementName.substring(1);
		}

		int nsIndex = elementName.lastIndexOf('\\');
		if (nsIndex != -1) {

			String namespace = elementName.substring(0, nsIndex);
			
			if (!isGlobal && namespace.indexOf('\\') == -1) {
				// it can be an alias - try to find relevant USE statement
				
				ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(sourceModule);
				UsePart usePart = ASTUtils.findUseStatement(moduleDeclaration, namespace, offset);
				if (usePart != null) {
					namespace = usePart.getNamespace().getFullyQualifiedName();
				}
			}
			return namespace;
		}
		
		return null;
	}

