	/**
	 * Checks if the first given path string is the container of the second
	 * given file's path
	 * 
	 * @param containerPathString
	 * @param filePathString
	 * @return
	 */
	public static boolean checkIfContainerOfFile(String containerPathString, String filePathString) {
		Path containerFilterPath = new Path(containerPathString.toLowerCase());
		Path filePath = new Path(filePathString.toLowerCase());
		if (containerFilterPath.segmentCount() > filePath.segmentCount()) {
			return false;// container has more segments than file itself
		}

		if (((containerFilterPath.getDevice() == null) && (filePath.getDevice() != null))
				|| ((containerFilterPath.getDevice() != null) && (filePath.getDevice() == null))) {
			return false;
		}

		if ((containerFilterPath.getDevice() != null)
				&& !containerFilterPath.getDevice().toLowerCase().equals(filePath.getDevice().toLowerCase())) {
			return false;
		}

		for (int i = 0; i < containerFilterPath.segmentCount(); i++) {
			if (!containerFilterPath.segment(i).equals(filePath.segment(i))) {
				return false;
			}
		}
		return true;
	}

