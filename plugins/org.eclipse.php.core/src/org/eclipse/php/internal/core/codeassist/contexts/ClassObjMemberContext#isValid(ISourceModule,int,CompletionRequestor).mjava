	public boolean isValid(ISourceModule sourceModule, int offset, CompletionRequestor requestor) {
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}
		if (getTriggerType() != Trigger.OBJECT) {
			return false;
		}
		
		IType[] types = getLhsTypes();
		if (types != null && types.length > 0) {
			ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(sourceModule);
			if (moduleDeclaration != null) {
				IContext context = ASTUtils.findContext(sourceModule, moduleDeclaration, offset);
				if (context instanceof MethodContext) {
					IEvaluatedType instanceType = ((MethodContext)context).getInstanceType();
					if (instanceType instanceof PHPClassType) {
						PHPClassType classType = (PHPClassType) instanceType;
						String namespace = classType.getNamespace();
						if (namespace != null && namespace.length() > 0) {
							String typeName = classType.getTypeName();
							int i = typeName.lastIndexOf(NamespaceReference.NAMESPACE_SEPARATOR);
							if (i != -1) {
								typeName = typeName.substring(i + 1);
							}
							if (namespace.charAt(0) == NamespaceReference.NAMESPACE_SEPARATOR) {
								namespace = namespace.substring(1);
							}
							IType currentNamespace = PHPModelUtils.getCurrentNamespace(types[0]);
							if (currentNamespace != null) {
								isThisCall = namespace.equals(currentNamespace.getElementName()) 
									&& typeName.equals(types[0].getElementName());
							}
						} else {
							isThisCall = classType.getTypeName().equals(types[0].getElementName());
						}
					}
				}
			}
		}
		
		return true;
	}

