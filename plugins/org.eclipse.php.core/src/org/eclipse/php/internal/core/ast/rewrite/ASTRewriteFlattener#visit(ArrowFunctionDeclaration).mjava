	@Override
	public boolean visit(ArrowFunctionDeclaration functionDeclaration) {
		result.append(" fn "); //$NON-NLS-1$
		if (functionDeclaration.isReference()) {
			result.append('&');
		}
		result.append('(');
		List<FormalParameter> formalParametersList = functionDeclaration.formalParameters();
		Iterator<FormalParameter> paramIt = formalParametersList.iterator();
		while (paramIt.hasNext()) {
			paramIt.next().accept(this);
			if (paramIt.hasNext()) {
				result.append(", "); //$NON-NLS-1$
			}
		}
		result.append(')');

		if (functionDeclaration.getReturnType() != null) {
			result.append(':');
			functionDeclaration.getReturnType().accept(this);
			result.append(' ');
		}

		if (functionDeclaration.getBody() != null) {
			functionDeclaration.getBody().accept(this);
		}
		return false;
	}

