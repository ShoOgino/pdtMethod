	private static void internalBuildReferencedFilesTree(final Node root,
			Set<ISourceModule> processedFiles,
			Map<ISourceModule, Node> cachedTrees, IProgressMonitor monitor)
			throws CoreException {

		ISourceModule sourceModule = root.getFile();
		IField[] includes = PhpModelAccess.getDefault().findIncludes(null,
				MatchRule.PREFIX, SearchEngine.createSearchScope(sourceModule),
				monitor);

		if (includes == null) {
			return;
		}

		List<Node> nodesToBuild = new LinkedList<Node>();
		for (IField include : includes) {
			String filePath = ((IncludeField) include).getFilePath();
			ISourceModule testFile = findSourceModule(sourceModule, filePath);
			if (testFile != null && !processedFiles.contains(testFile)) {
				processedFiles.add(testFile);

				if (cachedTrees != null) {
					// use cached nodes from other trees:
					Node child = cachedTrees.get(testFile);
					if (child != null) {
						root.addChild(child);
						continue;
					}
				}
				Node child = new Node(testFile);
				nodesToBuild.add(child);
				root.addChild(child);

				if (cachedTrees != null) {
					// cache this tree node:
					cachedTrees.put(testFile, child);
				}
			}
		}

		for (Node child : nodesToBuild) {
			internalBuildReferencedFilesTree(child, processedFiles,
					cachedTrees, monitor);
		}
	}

