	/**
	 * Constructs evaluated type for PHP class or interface that was declared
	 * under some namespace
	 */
	public PHPNamespaceConstantType(String namespace, String typeName) {
		if (namespace == null || typeName == null) {
			throw new IllegalArgumentException();
		}

		// make the namespace fully qualified
		if (namespace.length() > 0 && namespace.charAt(0) != NamespaceReference.NAMESPACE_SEPARATOR) {
			namespace = NamespaceReference.NAMESPACE_SEPARATOR + namespace;
		}

		this.namespace = namespace;
		this.constantName = new StringBuilder(namespace).append(NamespaceReference.NAMESPACE_SEPARATOR).append(typeName)
				.toString();
	}

