	private IType[] lookForMatchingTypes(PHPDocTag[] tags,
			ISourceModule sourceModule, int offset, int end,
			IModelAccessCache cache) throws ModelException {
		if (tags == null) {
			return null;
		}
		for (PHPDocTag phpDocTag : tags) {
			if (phpDocTag.sourceStart() <= offset
					&& phpDocTag.sourceEnd() >= end) {
				SimpleReference[] references = phpDocTag.getReferences();
				if (references != null) {
					for (SimpleReference simpleReference : references) {
						if (simpleReference instanceof TypeReference) {
							TypeReference typeReference = (TypeReference) simpleReference;
							if (typeReference.sourceStart() <= offset
									&& typeReference.sourceEnd() >= end) {
								String name = typeReference.getName();

								// remove additional end elements like '[]'
								if (typeReference.sourceEnd() > end) {
									int startShift = offset
											- typeReference.sourceStart();
									name = typeReference.getName().substring(
											startShift,
											(end - offset) + startShift);
								}

								IType[] types = filterNS(PHPModelUtils
										.getTypes(name, sourceModule, offset,
												cache, null));
								return types;

							}
						}
					}
				}
			}
		}
		return null;
	}

