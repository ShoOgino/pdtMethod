	/**
	 * Create a string from the given UseStatement
	 */
	public static String createStringFromUseStatement(UseStatement statement, String indent,
			boolean addIndentedUsePrefixAndNewline) {
		String use = ""; //$NON-NLS-1$
		if (addIndentedUsePrefixAndNewline) {
			use = indent + "use "; //$NON-NLS-1$

			switch (statement.getStatementType()) {
			case UseStatement.T_NONE:
				break;
			case UseStatement.T_FUNCTION:
				use += "function "; //$NON-NLS-1$
				break;
			case UseStatement.T_CONST:
				use += "const "; //$NON-NLS-1$
				break;
			}
		}

		boolean first = true;
		for (UsePart part : statement.getParts()) {
			if (!first) {
				use += ", "; //$NON-NLS-1$
			}
			use += part.getNamespace().getFullyQualifiedName();
			if (part.getAlias() != null) {
				use += " as " + part.getAlias().getName(); //$NON-NLS-1$
			}
			first = false;
		}

		if (addIndentedUsePrefixAndNewline) {
			return use + ";\n"; //$NON-NLS-1$
		}
		return use;
	}

