	/**
	 * Changes permissions to the specified file.
	 * 
	 * @param String
	 *            file path
	 * @param int
	 *            permissions mode (use bitwise <code>|</code> to designate
	 *            different modes).
	 * @return boolean <code>true</code> if succeeded changing permissions,
	 *         <code>false</code> otherwise.
	 */
	public static boolean chmod(String file, int mode) {
		if (System.getProperty("os.name").startsWith("Windows")) { //$NON-NLS-1$ //$NON-NLS-2$
			throw new IllegalAccessError(Messages.UnixChmodUtil_0);
		}

		boolean status = true;
		Runtime runtime = Runtime.getRuntime();
		try {
			Process p = runtime.exec(new String[] { "chmod", Integer.toString(mode, 8), file }); //$NON-NLS-1$
			status = (p.waitFor() == 0);
		} catch (Exception e) {
			status = false;
		}

		return status;
	}

