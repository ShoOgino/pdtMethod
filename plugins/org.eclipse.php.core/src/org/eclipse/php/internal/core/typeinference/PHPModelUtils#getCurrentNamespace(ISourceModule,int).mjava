	/**
	 * Returns the current namespace by the specified file and offset
	 * 
	 * @param sourceModule
	 *            The file where current namespace is requested
	 * @param sourceModule
	 *            The offset where current namespace is requested
	 * @return namespace element, or <code>null</code> if the scope is global under
	 *         the specified cursor position
	 */
	@Nullable
	public static IType getCurrentNamespace(ISourceModule sourceModule, int offset) {
		try {
			IModelElement currentNs = sourceModule.getElementAt(offset);
			while (currentNs instanceof IField) {
				currentNs = sourceModule.getElementAt(((IField) currentNs).getSourceRange().getOffset() - 1);
			}
			while (currentNs != null) {
				if (currentNs instanceof IType && PHPFlags.isNamespace(((IType) currentNs).getFlags())) {
					return (IType) currentNs;
				}
				currentNs = currentNs.getParent();
			}
		} catch (ModelException e) {
			PHPCorePlugin.log(e);
		}
		return null;
	}

