	/**
	 * Returns all USE statements declared before the specified offset
	 * @param moduleDeclaration The AST root node
	 * @param offset Current position in the file (this is needed since we don't want to take USE statements placed below
	 * 		current position into account)
	 * @return USE statements list
	 */
	public static UseStatement[] getUseStatements(ModuleDeclaration moduleDeclaration, final int offset) {
		final List<UseStatement> result = new LinkedList<UseStatement>();
		try {
			moduleDeclaration.traverse(new ASTVisitor() {
				public boolean visit(Statement s) throws Exception {
					if (s instanceof UseStatement) {
						result.add((UseStatement) s);
					}
					return visitGeneral(s);
				}

				public boolean visitGeneral(ASTNode node) throws Exception {
					if (node.sourceStart() > offset) {
						return false;
					}
					return super.visitGeneral(node);
				}
			});
		} catch (Exception e) {
			Logger.logException(e);
		}
		return (UseStatement[]) result.toArray(new UseStatement[result.size()]);
	}

