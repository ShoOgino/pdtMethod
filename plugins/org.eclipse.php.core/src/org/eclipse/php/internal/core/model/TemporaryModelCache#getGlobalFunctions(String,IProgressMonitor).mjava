	/**
	 * Returns cached result of a function search, or invokes a new search query
	 * 
	 * @param functionName
	 *            The name of the global function
	 * @param monitor
	 *            Progress monitor
	 * @return a collection of functions according to a given name, or
	 *         <code>null</code> if not found
	 */
	public Collection<IMethod> getGlobalFunctions(String functionName,
			IProgressMonitor monitor) {

		functionName = functionName.toLowerCase();

		if (globalFunctionsCache == null) {
			globalFunctionsCache = new HashMap<String, Collection<IMethod>>();

			IScriptProject scriptProject = sourceModule.getScriptProject();
			IDLTKSearchScope scope = SearchEngine
					.createSearchScope(scriptProject);

			IMethod[] allFunctions = PhpModelAccess.getDefault().findMethods(
					null, MatchRule.PREFIX, Modifiers.AccGlobal, 0, scope,
					monitor);
			for (IMethod function : allFunctions) {
				String elementName = function.getElementName().toLowerCase();
				Collection<IMethod> funcList = globalFunctionsCache
						.get(elementName);
				if (funcList == null) {
					funcList = new LinkedList<IMethod>();
					globalFunctionsCache.put(elementName, funcList);
				}
				funcList.add(function);
			}
		}
		return filterElements(globalFunctionsCache.get(functionName), monitor);
	}

