	public boolean visit(NamespaceName namespaceName) {

		// Make the necessary changes to add or remove the '\' and 'namespace'
		// prefixes
		RewriteEvent event = getEvent(namespaceName, NamespaceName.GLOBAL_PROPERTY);
		if (event != null && event.getChangeKind() == RewriteEvent.REPLACED) {
			TextEditGroup editGroup = getEditGroup(event);
			if ((Boolean) event.getNewValue()) {
				// Add the '\' to the namespace name
				this.doTextInsert(namespaceName.getStart(), "\\", editGroup); //$NON-NLS-1$
			} else {
				// Remove the '\' from the namespace name
				this.doTextRemove(namespaceName.getStart(), 1, editGroup);
			}
		}
		event = getEvent(namespaceName, NamespaceName.CURRENT_PROPERTY);
		if (event != null && event.getChangeKind() == RewriteEvent.REPLACED) {
			TextEditGroup editGroup = getEditGroup(event);
			if ((Boolean) event.getNewValue()) {
				// Add the 'namespace' to the namespace name
				this.doTextInsert(namespaceName.getStart(), "namespace\\", //$NON-NLS-1$
						editGroup);
			} else {
				// Remove the 'namespace' from the namespace name
				this.doTextRemove(namespaceName.getStart(), 10, editGroup);
			}
		}

		int pos = namespaceName.getStart();
		if (namespaceName.isGlobal()) {
			pos += 1;
		}
		if (namespaceName.isCurrent()) {
			pos += 10;
		}

		if (isChanged(namespaceName, NamespaceName.ELEMENTS_PROPERTY)) {
			rewriteNodeList(namespaceName, NamespaceName.ELEMENTS_PROPERTY, pos, "", "\\"); //$NON-NLS-1$ //$NON-NLS-2$
		} else {
			voidVisit(namespaceName, NamespaceName.ELEMENTS_PROPERTY);
		}

		return false;
	}

