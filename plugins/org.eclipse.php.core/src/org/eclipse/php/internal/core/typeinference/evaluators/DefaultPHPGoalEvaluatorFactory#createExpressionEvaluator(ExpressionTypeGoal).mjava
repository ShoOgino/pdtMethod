	private GoalEvaluator createExpressionEvaluator(ExpressionTypeGoal exprGoal) {

		ASTNode expression = exprGoal.getExpression();
		Class<?> expressionClass = expression.getClass();

		if (expressionClass == ClassDeclaration.class) {
			return new PHPClassEvaluator(exprGoal, (ClassDeclaration) expression);
		}
		if (expressionClass == Assignment.class) {
			return new AssignmentEvaluator(exprGoal);
		}
		if (expressionClass == Scalar.class) {
			Scalar scalar = (Scalar) expression;
			return new ScalarEvaluator(exprGoal, scalar);
		}
		if (expressionClass == TypeReference.class || expressionClass == FullyQualifiedReference.class) {
			TypeReference type = (TypeReference) expression;
			return new TypeReferenceEvaluator(exprGoal, type);
		}
		if (expressionClass == PHPCallExpression.class || expressionClass == StaticMethodInvocation.class) {
			return new MethodCallTypeEvaluator(exprGoal);
		}
		if (expressionClass == ClassInstanceCreation.class) {
			return new InstanceCreationEvaluator(exprGoal);
		}
		if (expressionClass == InfixExpression.class) {
			return new InfixExpressionEvaluator(exprGoal);
		}
		if (expressionClass == PrefixExpression.class) {
			return new PrefixExpressionEvaluator(exprGoal);
		}
		if (expressionClass == PostfixExpression.class) {
			return new PostfixExpressionEvaluator(exprGoal);
		}
		if (expressionClass == UnaryOperation.class) {
			return new UnaryOperationEvaluator(exprGoal);
		}
		if (expressionClass == CastExpression.class) {
			return new CastEvaluator(exprGoal);
		}
		if (expressionClass == VariableReference.class) {
			return new VariableReferenceEvaluator(exprGoal);
		}
		if (expressionClass == BackTickExpression.class || expressionClass == Quote.class) {
			return new FixedAnswerEvaluator(exprGoal, new SimpleType(SimpleType.TYPE_STRING));
		}
		if (expressionClass == CloneExpression.class) {
			return new CloneEvaluator(exprGoal);
		}
		if (expressionClass == InstanceOfExpression.class) {
			return new FixedAnswerEvaluator(exprGoal, new SimpleType(SimpleType.TYPE_BOOLEAN));
		}
		if (expressionClass == ConditionalExpression.class) {
			return new ConditionalExpressionEvaluator(exprGoal);
		}
		if (expressionClass == ArrayCreation.class) {
			return new ArrayCreationEvaluator(exprGoal);
		}
		if (expressionClass == ArrayVariableReference.class) {
			return new ArrayVariableReferenceEvaluator(exprGoal);
		}
		if (expressionClass == FieldAccess.class || expressionClass == StaticFieldAccess.class) {
			return new FieldAccessEvaluator(exprGoal);
		}
		if (expressionClass == StaticConstantAccess.class) {
			return new StaticConstantAccessEvaluator(exprGoal);
		}
		if (expressionClass == FormalParameter.class || expressionClass == FormalParameterByReference.class) {
			return new FormalParameterEvaluator(exprGoal);
		}
		if (expressionClass == CatchClause.class) {
			return new CatchClauseEvaluator(exprGoal);
		}

		return null;
	}

