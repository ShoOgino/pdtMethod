	private static IMethod getMethodWrapper(UseTrait useTrait, IMethod method,
			IType type) {
		TraitAliasObject tao = useTrait.getAliasMap().get(
				method.getElementName());
		TraitPrecedenceObject tpo = useTrait.getPrecedenceMap().get(
				method.getElementName());
		String fullName = PHPModelUtils.getFullName(method.getDeclaringType());
		if (tao != null
				&& (tao.traitName == null || fullName.equals(tao.traitName))) {
			method = new MethodWrapper(method, tao.newMethodVisibility,
					tao.newMethodName, type);
			return method;
		}
		if (tpo != null) {
			if (!fullName.equals(tpo.traitName)) {
				return null;
			}
			// if (!fullName.equals(tpo.traitName)
			// && (tao == null || (fullName.equals(tao.traitName)
			// && tao.newMethodName != null && !fullName
			// .equals(tao.newMethodName)))) {
			// return null;
			// }
		} else {

		}
		return method;
	}

