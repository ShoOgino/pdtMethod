	/**
	 * Uninstall the preferences propagator.
	 */
	@Override
	protected synchronized void uninstall() {
		if (!isInstalled) {
			return;
		}
		InstanceScope.INSTANCE.getNode(nodeQualifier).removePreferenceChangeListener(propertyChangeListener);
		// remove the node listeners
		Iterator<IProject> projects = projectToNodeListener.keySet().iterator();
		try {
			while (projects.hasNext()) {
				IProject project = projects.next();
				ProjectScope scope = projectToScope.get(project);
				IEclipsePreferences node = scope.getNode(nodeQualifier);
				if (node != null) {
					((IEclipsePreferences) node.parent()).removeNodeChangeListener(projectToNodeListener.get(project));
				}
			}
		} catch (Exception e) {
		}
		// uninstall the project propagators
		Iterator<ProjectPreferencesPropagator> propagators = projectToPropagator.values().iterator();
		while (propagators.hasNext()) {
			propagators.next().uninstall();
		}

		preferenceChangeListeners = null;
		projectToScope = null;
		projectToPropagator = null;
		projectToNodeListener = null;
		super.uninstall();
	}

