	public int read(final byte[] dest, final int offs, final int len)
			throws IOException {
		if (offs < 0) {
			throw new IndexOutOfBoundsException("offs(" + offs + ") < 0."); //$NON-NLS-1$ //$NON-NLS-2$
		}
		if (len < 0) {
			throw new IndexOutOfBoundsException("len(" + len + ") < 0."); //$NON-NLS-1$ //$NON-NLS-2$
		}
		if (offs + len > dest.length) {
			throw new IndexOutOfBoundsException("offs(" + offs + ") + len(" //$NON-NLS-1$ //$NON-NLS-2$
					+ len + ") > dest.length(" + dest.length + ")."); //$NON-NLS-1$ //$NON-NLS-2$
		}
		if (this.in == null) {
			throw new IOException("stream closed"); //$NON-NLS-1$
		}

		final int hi = offs + len;
		int destOffs = offs;
		for (int b; (destOffs < hi) && ((b = read0()) >= 0);) {
			dest[destOffs++] = (byte) b;
		}

		return (destOffs == offs) ? -1 : (destOffs - offs);
	}

