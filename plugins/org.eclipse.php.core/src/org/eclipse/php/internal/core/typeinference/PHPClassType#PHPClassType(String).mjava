	/**
	 * Constructs evaluated type for PHP class or interface. The type name can
	 * contain namespace part (namespace name must be real, and not point to the
	 * alias or subnamespace under current namespace)
	 */
	public PHPClassType(String typeName) {
		if (typeName == null) {
			throw new IllegalArgumentException();
		}

		int i = typeName.lastIndexOf(NamespaceReference.NAMESPACE_SEPARATOR);
		// detect the namespace prefix:
		// global namespace case
		if (i == -1) {
			this.typeName = typeName;
		} else if (i == 0) {
			this.typeName = typeName.substring(1, typeName.length());
		} else if (i > 0) {
			// check is global namespace
			if (typeName.charAt(0) != NamespaceReference.NAMESPACE_SEPARATOR) {
				// make the type name fully qualified:
				typeName = new StringBuilder().append(
						NamespaceReference.NAMESPACE_SEPARATOR)
						.append(typeName).toString();
				i += 1;
			}
			this.namespace = typeName.substring(0, i);
			this.typeName = typeName;
		}
	}

