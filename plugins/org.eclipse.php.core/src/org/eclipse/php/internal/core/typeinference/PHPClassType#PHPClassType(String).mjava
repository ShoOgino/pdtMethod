	/**
	 * Constructs evaluated type for PHP class or interface that was declared under some namespace
	 */
	public PHPClassType(String typeName) {
		if (typeName == null) {
			throw new IllegalArgumentException();
		}
		// detect the namespace prefix:
		int i = typeName.lastIndexOf(NamespaceReference.NAMESPACE_SEPARATOR);
		if (i != -1) {
			if (typeName.charAt(0) != NamespaceReference.NAMESPACE_SEPARATOR) {
				// make the type name fully qualified:
				typeName = new StringBuilder().append(NamespaceReference.NAMESPACE_SEPARATOR).append(typeName).toString();
				i += 1;
			}
			this.namespace = typeName.substring(0, i);
		} else {
			this.typeName = typeName;
		}
	}

