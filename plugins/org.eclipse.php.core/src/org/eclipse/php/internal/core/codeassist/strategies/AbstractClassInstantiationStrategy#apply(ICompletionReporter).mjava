	@Override
	public void apply(ICompletionReporter reporter) throws BadLocationException {

		ICompletionContext context = getContext();
		AbstractCompletionContext concreteContext = (AbstractCompletionContext) context;

		ICompletionScope scope = getCompanion().getScope().findParent(Type.CLASS, Type.INTERFACE);
		if (scope != null) {
			enclosingClass = scope.getName();
		}

		ISourceRange replaceRange = getReplacementRangeForMember(concreteContext);
		String suffix = getSuffix(concreteContext);

		IType[] types = getTypes(concreteContext);
		for (IType type : types) {
			try {
				if (PHPFlags.isNamespace(type.getFlags())) {
					ISourceRange nsReplaceRange = getReplacementRange(concreteContext);
					int extraInfo = getExtraInfo();
					if (concreteContext.isAbsoluteName()) {
						extraInfo |= ProposalExtraInfo.ABSOLUTE_NAME;
					}
					reporter.reportType(type, NamespaceReference.NAMESPACE_DELIMITER, nsReplaceRange,
							extraInfo | ProposalExtraInfo.MEMBER_IN_NAMESPACE);
					continue;
				}
			} catch (ModelException e) {
				Logger.logException(e);
			}
			if (!concreteContext.getCompletionRequestor().isContextInformationMode()) {
				// here we use fake method,and do the real work in class
				// ParameterGuessingProposal
				IMethod ctorMethod = FakeConstructor.createFakeConstructor(null, type,
						enclosingClass != null && enclosingClass.equals(type.getElementName()));
				reporter.reportMethod(ctorMethod, suffix, replaceRange, ProposalExtraInfo.FULL_NAME);
			} else {
				// if this is context information mode,we use this,
				// because the number of types' length is very small
				IMethod[] ctors = FakeConstructor.getConstructors(type, type.getElementName().equals(enclosingClass));
				if (ctors != null && ctors.length == 2) {
					if (ctors[1] != null) {
						reporter.reportMethod(ctors[1], suffix, replaceRange, ProposalExtraInfo.FULL_NAME);
					} else if (ctors[0] == null) {
						reporter.reportType(type, suffix, replaceRange);
					}
				}
			}

		}
		addAlias(reporter, suffix);
	}

