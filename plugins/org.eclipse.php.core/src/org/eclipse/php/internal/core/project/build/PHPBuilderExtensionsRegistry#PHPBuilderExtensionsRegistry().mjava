	/**
	 * Constructor.
	 * Looks for all contributed PHP builder extensions and initializes them.
	 */
	private PHPBuilderExtensionsRegistry() {

		IConfigurationElement[] elements = Platform.getExtensionRegistry().getConfigurationElementsFor(PHPCorePlugin.ID, EXTENSION_NAME);

		Object defaultExtension = null;

		for (IConfigurationElement element : elements) {
			if (BUILDER_ELEMENT.equals(element.getName()) && DEFAULT_EXTENSION_ID.equals(element.getAttribute(ID_ATTRIBUTE))) {
				try {
					defaultExtension = element.createExecutableExtension(CLASS_ATTRIBUTE);
				} catch (CoreException e) {
					PHPCorePlugin.log(e);
				}
				break;
			}
		}

		if (defaultExtension == null) {
			PHPCorePlugin.log(new IllegalStateException("no default project builder extension")); //$NON-NLS-1$
			return;
		}

		extensions = new LinkedHashMap();
		extensions.put(DEFAULT_EXTENSION_ID, defaultExtension);

		for (int i = 0; i < elements.length; ++i) {
			IConfigurationElement element = elements[i];
			if (BUILDER_ELEMENT.equals(element.getName()) && !DEFAULT_EXTENSION_ID.equals(element.getAttribute(ID_ATTRIBUTE))) {
				try {
					extensions.put(element.getAttribute(ID_ATTRIBUTE), element.createExecutableExtension(CLASS_ATTRIBUTE));
				} catch (CoreException e) {
					PHPCorePlugin.log(e);
				}
			}
		}
	}

