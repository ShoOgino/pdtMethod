	/**
	 * Check if IType is a typed array in the methodContext:
	 * 
	 * <pre>
	 *   /*
	 *    *  @param SomeClass[] $elements
	 *    *\/
	 *    public function foo(array $elements);
	 * </pre>
	 * 
	 * 
	 * @param methodContext
	 * @param variableName
	 * @param type
	 * @return boolean
	 */
	private boolean isArrayType(MethodContext methodContext, String variableName, IType type) {

		PHPMethodDeclaration methodDeclaration = (PHPMethodDeclaration) methodContext.getMethodNode();

		PHPDocBlock[] docBlocks = new PHPDocBlock[0];
		for (Object object : methodDeclaration.getArguments()) {
			if (object instanceof FormalParameter) {
				FormalParameter formalParameter = (FormalParameter) object;
				if (formalParameter.getName().equals(variableName) && formalParameter.isVariadic()) {
					return true;
				}
			}
		}
		try {
			IModelElement element = methodContext.getSourceModule().getElementAt(methodDeclaration.getNameStart());
			if (element instanceof IMethod) {
				IMethod method = (IMethod) element;
				if (method.getDeclaringType() != null) {
					docBlocks = PHPModelUtils
							.getTypeHierarchyMethodDoc(method.getDeclaringType(),
									methodContext.getCache() != null ? methodContext.getCache()
											.getSuperTypeHierarchy(method.getDeclaringType(), null) : null,
							method.getElementName(), true, null);
				} else {
					docBlocks = new PHPDocBlock[] { methodDeclaration.getPHPDoc() };
				}
			} else {
				docBlocks = new PHPDocBlock[] { methodDeclaration.getPHPDoc() };
			}

		} catch (CoreException e) {
			Logger.logException(e);
		}

		if (docBlocks.length > 0) {
			for (int i = 0; i < docBlocks.length; i++) {
				if (docBlocks[i] == null) {
					continue;
				}
				PHPDocTag[] tags = docBlocks[i].getTags(TagKind.PARAM);
				for (int j = 0; j < tags.length; j++) {
					PHPDocTag tag = tags[j];
					if (tag.isValidParamTag() && tag.getVariableReference().getName().equals(variableName)) {
						for (TypeReference reference : tag.getTypeReferences()) {
							if (PHPEvaluationUtils.isArrayType(reference.getName())) {
								return true;
							}
						}
						break;
					}
				}
			}
		}

		return false;
	}

