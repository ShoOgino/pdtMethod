	private static void internalBuildReferencingFilesTree(Node root, Set<ISourceModule> processedFiles, IProgressMonitor monitor) {

		ISourceModule file = root.getFile();

		// Find all includes to the current source module in mixin:
		IModelElement[] includes = PHPMixinModel.getInstance().getInclude(file.getPath().lastSegment());
		for (IModelElement e : includes) {
			IncludeField include = (IncludeField) e;

			// Candidate that includes the original source module:
			ISourceModule referencingFile = include.getSourceModule();

			// Try to resolve include:
			ISourceModule testFile = findSourceModule(referencingFile, include.getFilePath());

			// If this is the correct include (that means that included file is the original file):
			if (file.equals(testFile) && !processedFiles.contains(referencingFile)) {
				processedFiles.add(referencingFile);
				root.addChild(new Node(referencingFile));
			}
		}

		Collection<Node> children = root.getChildren();
		if (children != null) {
			for (Node child : children) {
				internalBuildReferencingFilesTree(child, processedFiles, monitor);
			}
		}
	}

