	/**
	 * Returns all problems in this program
	 * 
	 * @param node
	 * @return
	 */
	public static ProblemDesc[] getProblems(Program node) {
		try {
			if (node.getSourceModule() == null) {
				return null;
			}

			IResource resource = node.getSourceModule().getUnderlyingResource();
			if (resource != null) {
				IMarker[] markers = resource.findMarkers(
						DefaultProblem.MARKER_TYPE_PROBLEM, true,
						IResource.DEPTH_ONE);
				ProblemDesc[] problems = new ProblemDesc[markers.length];
				for (int i = 0; i < markers.length; ++i) {
					problems[i] = new ProblemDesc(markers[i].getAttribute("id",
							0), markers[i].getAttribute(IMarker.CHAR_START, 0),
							markers[i].getAttribute(IMarker.CHAR_END, 0),
							markers[i].getAttribute(IMarker.SEVERITY, 0));
				}
				return problems;
			}
		} catch (CoreException e) {
		}
		return null;
	}

