	/**
	 * This method returns type declared unders specified namespace
	 * 
	 * @param namespace
	 *            Namespace name
	 * @param prefix
	 *            Type name or prefix
	 * @param exactName
	 *            Whether the type name is exact or it is prefix
	 * @param sourceModule
	 *            Source module where the type is referenced
	 * @param cache
	 *            Model access cache if available
	 * @param monitor
	 *            Progress monitor
	 * @return type declarated in the specified namespace, or null if there is
	 *         none
	 * @throws ModelException
	 */
	public static IType[] getNamespaceType(String namespace, String prefix,
			boolean exactName, ISourceModule sourceModule,
			IModelAccessCache cache, IProgressMonitor monitor)
			throws ModelException {

		IType[] namespaces = getNamespaces(sourceModule, namespace, cache,
				monitor);
		List<IType> result = new LinkedList<IType>();
		for (IType ns : namespaces) {
			result.addAll(Arrays.asList(CopyOfPHPModelUtils.getTypeType(ns, prefix,
					exactName)));
		}
		return (IType[]) result.toArray(new IType[result.size()]);
	}

