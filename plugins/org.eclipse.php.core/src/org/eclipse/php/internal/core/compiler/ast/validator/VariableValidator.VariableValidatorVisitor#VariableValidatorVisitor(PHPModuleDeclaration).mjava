		public VariableValidatorVisitor(PHPModuleDeclaration module) {
			pushScope(0, module.end());
			fileScope = true;
			List<VarComment> varComments = module.getVarComments();
			varCommentList = new ArrayList<VarComment>(module.getVarComments().size());
			varCommentList.addAll(varComments);
			Collections.sort(varCommentList, new Comparator<VarComment>() {

				public int compare(VarComment o1, VarComment o2) {
					return o2.sourceStart() - o1.sourceStart();
				}
			});

			docBlocks = new ArrayList<PHPDocBlock>(module.getPHPDocBlocks().size());
			docBlocks.addAll(module.getPHPDocBlocks());
			Collections.sort(docBlocks, new Comparator<PHPDocBlock>() {

				@Override
				public int compare(PHPDocBlock o1, PHPDocBlock o2) {
					return o2.sourceStart() - o1.sourceStart();
				}
			});

		}

