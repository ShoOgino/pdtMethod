	private int rewriteModifiers2(ASTNode node,
			ChildListPropertyDescriptor property, int pos) {
		// RewriteEvent event = getEvent(node, property);
		// if (event == null || event.getChangeKind() == RewriteEvent.UNCHANGED)
		// {
		// return doVisit(node, property, pos);
		// }
		// RewriteEvent[] children = event.getChildren();
		// boolean isAllInsert = isAllOfKind(children, RewriteEvent.INSERTED);
		// boolean isAllRemove = isAllOfKind(children, RewriteEvent.REMOVED);
		// if (isAllInsert || isAllRemove) {
		// // update pos
		// try {
		// pos = getScanner().getNextStartOffset(pos/*, false*/);
		// } catch (CoreException e) {
		// handleException(e);
		// }
		// }
		//
		// Prefix formatterPrefix;
		// if (property == SingleVariableDeclaration.MODIFIERS2_PROPERTY)
		// formatterPrefix = this.formatter.PARAM_ANNOTATION_SEPARATION;
		// else
		// formatterPrefix = this.formatter.ANNOTATION_SEPARATION;
		//
		//		int endPos = new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, "", " "); //$NON-NLS-1$ //$NON-NLS-2$
		//
		// try {
		// int nextPos = getScanner().getNextStartOffset(endPos/*, false*/);
		//
		// boolean lastUnchanged = children[children.length - 1].getChangeKind()
		// != RewriteEvent.UNCHANGED;
		//
		// if (isAllRemove) {
		// doTextRemove(endPos, nextPos - endPos,
		// getEditGroup(children[children.length - 1]));
		// return nextPos;
		// } else if (isAllInsert || (nextPos == endPos && lastUnchanged)) { //
		// see bug 165654
		// RewriteEvent lastChild = children[children.length - 1];
		// String separator;
		// if (lastChild.getNewValue() instanceof Annotation) {
		// separator = formatterPrefix.getPrefix(getIndent(pos));
		// } else {
		// separator = String.valueOf(' ');
		// }
		// doTextInsert(endPos, separator, getEditGroup(lastChild));
		// }
		// } catch (CoreException e) {
		// handleException(e);
		// }
		// return endPos;
		// TODO
		return 0;
	}

