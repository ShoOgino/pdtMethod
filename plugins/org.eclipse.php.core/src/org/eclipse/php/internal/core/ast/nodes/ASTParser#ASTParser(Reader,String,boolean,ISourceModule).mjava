	private ASTParser(Reader reader, String version, boolean useASPTags, ISourceModule sourceModule) throws IOException {

		this.sourceModule = sourceModule;
		if (version != VERSION_PHP4 && version != VERSION_PHP5) {
			throw new IllegalArgumentException("Invalid version in ASTParser");
		}
		this.ast = new AST(reader, version, useASPTags);
		this.ast.setDefaultNodeFlag(ASTNode.ORIGINAL);

		// set resolve binding property and the binding resolver 
		if (sourceModule != null) {
			this.ast.setFlag(AST.RESOLVED_BINDINGS);
			// try {
			this.ast.setBindingResolver(new DefaultBindingResolver(sourceModule, sourceModule.getOwner()));
			// } catch (ModelException e) {
			// throw new IOException("ModelException " + e.getMessage());
			// }
		}
	}

