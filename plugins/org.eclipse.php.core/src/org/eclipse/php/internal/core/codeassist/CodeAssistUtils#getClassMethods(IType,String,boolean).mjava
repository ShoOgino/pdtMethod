	/**
	 * This method finds all class methods that match the given prefix.
	 * @param type
	 * @param prefix
	 * @param exactName
	 * @return
	 */
	public static IMethod[] getClassMethods(IType type, String prefix, boolean exactName) {
		final Set<IMethod> methods = new TreeSet<IMethod>(new AlphabeticComparator());
		try {
			IMethod[] typeMethods = type.getMethods();
			for (IMethod typeMethod : typeMethods) {
				String methodName = typeMethod.getElementName();
				if (exactName) {
					if (methodName.equalsIgnoreCase(prefix)) {
						methods.add(typeMethod);
					}
				} else if (startsWithIgnoreCase(methodName, prefix)) {
					methods.add(typeMethod);
				}
			}
			
			methods.addAll(Arrays.asList(getSuperClassMethods(type, prefix, exactName)));
			
		} catch (Exception e) {
			if (DLTKCore.DEBUG_COMPLETION) {
				e.printStackTrace();
			}
		}
		return methods.toArray(new IMethod[methods.size()]);
	}

