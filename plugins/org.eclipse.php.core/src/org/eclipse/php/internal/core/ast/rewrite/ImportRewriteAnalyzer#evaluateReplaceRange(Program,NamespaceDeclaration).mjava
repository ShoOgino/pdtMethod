	private IRegion evaluateReplaceRange(Program root, NamespaceDeclaration namespace) {
		List<UseStatement> imports = root.getUseStatements(namespace);
		if (!imports.isEmpty()) {
			UseStatement first = imports.get(0);
			UseStatement last = imports.get(imports.size() - 1);

			int startPos = first.getStart();
			int endPos = root.getExtendedStartPosition(last) + root.getExtendedLength(last);
			int endLine = root.getLineNumber(endPos);
			if (endLine > 0) {
				int nextLinePos = getPostion(root, endLine + 1);
				if (nextLinePos >= 0) {
					int firstTypePos = getFirstTypeBeginPos(root, namespace);
					if (firstTypePos != -1 && firstTypePos < nextLinePos) {
						endPos = firstTypePos;
					} else {
						endPos = nextLinePos;
					}
				}
			}
			return new Region(startPos, endPos - startPos);
		} else {
			int start = getPackageStatementEndPos(root, namespace);
			return new Region(start, 0);
		}
	}

