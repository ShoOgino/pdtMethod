	private void runBuild() {
		WorkspaceJob cleanJob = new WorkspaceJob("Building PHP projects ...") {
			public IStatus runInWorkspace(IProgressMonitor monitor) throws CoreException {
				try {
					IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();
					monitor.beginTask("Building PHP projects ...", projects.length);

					for (int i = 0; i < projects.length; i++) {
						IProject project = projects[i];
						if (!project.isOpen()) {
							continue;
						}
						boolean hasNature;
						try {
							hasNature = project.hasNature(PHPNature.ID);
						} catch (CoreException e) {
							PHPCorePlugin.log(e);
							return null;
						}
						if (hasNature) {
							project.accept(new FullPhpProjectBuildVisitor(monitor));
							fireProjectModelChanged(project);
						}
						if (monitor.isCanceled()) {
							break;
						}
						monitor.worked(1);
					}
				} finally {
					monitor.done();
				}
				return Status.OK_STATUS;
			}
		};
		cleanJob.setRule(ResourcesPlugin.getWorkspace().getRuleFactory().buildRule());
		cleanJob.setUser(false);
		cleanJob.schedule();
	}

