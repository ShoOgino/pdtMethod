	/*
	 * Returns the nesting level of the expression. Since the Break and the Continue
	 * can provide an optional nesting level to break or continue, the expression
	 * attached to the statements hold this information. In case the (optional)
	 * expression is null, this method returns a default value of 1. Also note that
	 * the break argument accepts any expression, including a function result. But
	 * since this result is dynamically determined at runtime, we return a nesting
	 * level of 0 in this case. Zero nesting level will not mark any occurrence for
	 * the break or the continue.
	 * 
	 * @param expression
	 * 
	 * @return The nesting level determined from the expression (>=0).
	 */
	protected final int getNestingLevel(Expression expression) {
		if (expression == null) {
			return 1;
		}
		if (expression.getType() == ASTNode.SCALAR) {
			Scalar scalar = (Scalar) expression;
			try {
				return scalar.getScalarType() == Scalar.TYPE_INT ? Integer.parseInt(scalar.getStringValue()) : 0;
			} catch (NumberFormatException e) {
				Logger.logException(e);
			}
		}
		return 0;
	}

