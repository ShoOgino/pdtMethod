	public IGoal[] init() {
		PHPDocClassVariableGoal typedGoal = (PHPDocClassVariableGoal) goal;
		TypeContext context = (TypeContext) typedGoal.getContext();
		String variableName = typedGoal.getVariableName();

		IType[] types = PHPTypeInferenceUtils.getModelElements(context.getInstanceType(), context);
		Set<PHPDocBlock> docs = new HashSet<PHPDocBlock>();
		
		if (types != null) {
			for (IType type : types) {
				try {
					// we look in whole hiearchy
					ITypeHierarchy superHierarchy = type.newSupertypeHierarchy(null);
					IType[] superTypes = superHierarchy.getAllTypes();
					for (IType superType : superTypes) {
						IField typeField = PHPModelUtils.getTypeField(superType, variableName);
						PHPDocBlock docBlock = PHPModelUtils.getDocBlock(typeField);
						if (docBlock != null) {
							docs.add(docBlock);
						}
					}
				} catch (ModelException e) {
					if (DLTKCore.DEBUG) {
						e.printStackTrace();
					}
				}
			}
		}

		for (PHPDocBlock doc : docs) {
			for (PHPDocTag tag : doc.getTags()) {
				if (tag.getTagKind() == PHPDocTag.VAR) {
					SimpleReference[] references = tag.getReferences();
					for (SimpleReference ref : references) {
						PHPClassType type = PHPClassType.fromSimpleReference(ref);
						evaluated.add(type);
					}
				}
			}
		}

		return IGoal.NO_GOALS;
	}

