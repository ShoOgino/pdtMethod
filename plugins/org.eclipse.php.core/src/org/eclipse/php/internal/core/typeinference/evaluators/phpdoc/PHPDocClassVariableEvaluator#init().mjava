	@Override
	public IGoal[] init() {
		PHPDocClassVariableGoal typedGoal = (PHPDocClassVariableGoal) goal;
		TypeContext context = (TypeContext) typedGoal.getContext();
		String variableName = typedGoal.getVariableName();
		int offset = typedGoal.getOffset();

		IModelAccessCache cache = context.getCache();
		IType[] types = PHPTypeInferenceUtils.getModelElements(context.getInstanceType(), context, offset, cache);

		// remove array index from field name
		if (variableName.endsWith("]")) { //$NON-NLS-1$
			int index = variableName.indexOf("["); //$NON-NLS-1$
			if (index != -1) {
				variableName = variableName.substring(0, index);
			}
		}
		if (types == null) {
			return IGoal.NO_GOALS;
		}

		for (IType type : types) {
			try {
				// we look in whole hiearchy
				ITypeHierarchy superHierarchy;
				if (cache != null) {
					superHierarchy = cache.getSuperTypeHierarchy(type, null);
				} else {
					superHierarchy = type.newSupertypeHierarchy(null);
				}
				IType[] superTypes = superHierarchy.getAllTypes();
				for (IType superType : superTypes) {
					IField[] typeField = PHPModelUtils.getTypeField(superType, variableName, true);
					if (typeField.length > 0 && typeField[0].exists()) {
						addFieldType(typeField[0]);
					}
				}
			} catch (ModelException e) {
				Logger.logException(e);
			}
		}

		return IGoal.NO_GOALS;
	}

