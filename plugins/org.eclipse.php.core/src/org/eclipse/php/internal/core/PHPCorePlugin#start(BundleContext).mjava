	/**
	 * This method is called upon plug-in activation
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		IProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();
		for (IProject project : projects) {
			IProjectDescription oldDescription = project.getDescription();
			ICommand[] commands = oldDescription.getBuildSpec();
			boolean found = false;
			// check if the Script Builder is installed
			for (int i = 0; i < commands.length; ++i) {
				if (commands[i].getBuilderName().equals(builderID)) {
					found = true;
					break;
				}
			}
			// perform modifications only if the builder is not installed
			if (!found) {
				if (phpNature==null) {
					phpNature = new PHPNature();
				}
				// add the required builders and build paths as defined in the new PHP nature
				phpNature.setProject(project);
				phpNature.configure();

				IScriptProject scriptProject = DLTKCore.create(project);
				// merge the project build path with the old include path
				IBuildpathEntry[] existingPath = scriptProject.getRawBuildpath();
				ArrayList<IBuildpathEntry> newPath = new ArrayList<IBuildpathEntry>();
				newPath.addAll(Arrays.asList(existingPath));
				newPath.addAll(Arrays.asList(IncludePathToBuildpathImporter.convertIncludePathForProject(project)));
				scriptProject.setRawBuildpath(newPath.toArray(new IBuildpathEntry[newPath.size()]), new NullProgressMonitor());
			}
		}
	}

