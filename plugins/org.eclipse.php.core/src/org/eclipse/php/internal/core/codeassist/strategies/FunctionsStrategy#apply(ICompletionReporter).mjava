	@Override
	public void apply(ICompletionReporter reporter) throws BadLocationException {
		ICompletionContext context = getContext();

		AbstractCompletionContext abstractContext = (AbstractCompletionContext) context;
		CompletionRequestor requestor = abstractContext.getCompletionRequestor();

		String prefix = abstractContext.getPrefix().isEmpty() ? abstractContext.getPreviousWord()
				: abstractContext.getPrefix();
		if (StringUtils.isBlank(prefix) || prefix.startsWith("$")) { //$NON-NLS-1$
			return;
		}

		int extraInfo = getExtraInfo();
		if (abstractContext.isAbsoluteName()) {
			extraInfo |= ProposalExtraInfo.FULL_NAME;
			extraInfo |= ProposalExtraInfo.NO_INSERT_USE;
			extraInfo |= ProposalExtraInfo.ABSOLUTE;
		}

		if (abstractContext.isAbsolute()) {
			extraInfo |= ProposalExtraInfo.FULL_NAME;
			extraInfo |= ProposalExtraInfo.NO_INSERT_USE;
		}

		MatchRule matchRule = MatchRule.PREFIX;
		if (requestor.isContextInformationMode()) {
			matchRule = MatchRule.EXACT;
		}
		IDLTKSearchScope scope = createSearchScope();
		IMethod[] functions;
		String memberName = abstractContext.getMemberName();
		String namespaceName = abstractContext.getQualifier(true);
		functions = PHPModelAccess.getDefault().findFunctions(namespaceName, memberName, matchRule, 0, 0, scope, null);

		ISourceRange replacementRange = abstractContext.isAbsoluteName() || abstractContext.isAbsolute()
				? getReplacementRange(abstractContext)
				: getReplacementRangeForMember(abstractContext);
		String suffix = getSuffix(abstractContext);
		String namespace = abstractContext.getCurrentNamespace();
		for (IMethod method : functions) {
			reporter.reportMethod(method, suffix, replacementRange, extraInfo, getRelevance(namespace, method));
		}

		addAlias(reporter, suffix);
	}

