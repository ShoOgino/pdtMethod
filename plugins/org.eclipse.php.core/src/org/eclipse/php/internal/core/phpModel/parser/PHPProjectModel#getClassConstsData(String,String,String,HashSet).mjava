	private CodeData getClassConstsData(String fileName, String className, String constName, HashSet subClasses) {
		PHPClassData classData = getClass(fileName, className);
		if (classData == null) {
			return null;
		}
		CodeData[] consts = classData.getConsts();
		for (CodeData element : consts) {
			if (element.getName().equals(constName)) {
				return element;
			}
		}
		String superClass = classData.getSuperClassData().getName();
		if (superClass != null && !subClasses.contains(superClass)) {
			subClasses.add(className);
			fileName = classData.isUserCode() ? classData.getUserData().getFileName() : ""; //$NON-NLS-1$
			CodeData classConstsData = getClassConstsData(fileName, superClass, constName, subClasses);
			if (classConstsData != null) {
				return classConstsData;
			}
		}

		final PHPInterfaceNameData[] interfacesNamesData = classData.getInterfacesNamesData();
		for (PHPInterfaceNameData interfaceNameData : interfacesNamesData) {
			fileName = classData.isUserCode() ? classData.getUserData().getFileName() : ""; //$NON-NLS-1$
			final CodeData classConstsData = getClassConstsData(fileName, interfaceNameData.getName(), constName);
			if (classConstsData != null) {
				return classConstsData;
			}
		}

		return null;
	}

