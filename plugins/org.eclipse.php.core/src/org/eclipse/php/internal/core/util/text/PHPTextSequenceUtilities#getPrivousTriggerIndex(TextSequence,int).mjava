	public static int getPrivousTriggerIndex(TextSequence textSequence, int startPosition) {
		int rv = startPosition;
		int bracketsNum = 0;
		char inStringMode = 0;
		boolean inWhiteSpaceBeforeLiteral = false;
		boolean inLiteral = false;
		for (; rv > 0; rv--) {
			char currChar = textSequence.charAt(rv - 1);
			if (currChar == '\'' || currChar == '"') {
				inStringMode = inStringMode == 0 ? currChar : inStringMode == currChar ? 0 : inStringMode;
			}
			if (inStringMode != 0) {
				continue;
			}

			// The next block solves bug #205034:
			// store state for whitespace before literals and if another literal comes before it - return 'not found'
			if (Character.isLetterOrDigit(currChar) || currChar == '$') {
				if (inWhiteSpaceBeforeLiteral) {
					return -1;
				}
				inLiteral = true;
			} else {
				if (inLiteral && Character.isWhitespace(currChar)) {
					inWhiteSpaceBeforeLiteral = true;
				}
				if (!Character.isWhitespace(currChar)) {
					inWhiteSpaceBeforeLiteral = false;
				}
				inLiteral = false;
			}

			if (!Character.isLetterOrDigit(currChar) && currChar != '_' && currChar != '$' && !Character.isWhitespace(currChar)) {
				switch (currChar) {
					case '(':
					case '[':
					case '{':
						bracketsNum--;
						if (bracketsNum < 0) {
							return -1;
						}
						break;
					case ')':
					case ']':
					case '}':
						bracketsNum++;
						break;
					case ':':
						if (bracketsNum == 0 && rv >= 2) {
							if (textSequence.charAt(rv - 2) == ':') {
								return rv - 2;
							}
						}
						break;
					case '>':
						if (bracketsNum == 0 && rv >= 2) {
							if (textSequence.charAt(rv - 2) == '-') {
								return rv - 2;
							}
						}
						break;
					default:
						if (bracketsNum == 0) {
							return -1;
						}
				}
			}
		}
		return -1;
	}

