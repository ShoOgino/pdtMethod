		@Override
		public void resourceChanged(IResourceChangeEvent event) {
			IResourceDelta delta = event.getDelta();
			final List<IResource> added = new ArrayList<>();
			final List<IResource> removed = new ArrayList<>();
			try {
				delta.accept(new IResourceDeltaVisitor() {
					@Override
					public boolean visit(IResourceDelta delta) throws CoreException {
						IResource resource = delta.getResource();
						if (resource != null) {
							if (delta.getKind() == IResourceDelta.ADDED) {
								added.add(resource);
							} else if (delta.getKind() == IResourceDelta.REMOVED) {
								removed.add(resource);
							}
						}
						return true;
					}
				}, IResourceDelta.ADDED | IResourceDelta.REMOVED);
				if (!added.isEmpty()) {
					// Update in a separate job
					(new UpdaterJob()).perform(UpdaterJob.ADDITION, added);
				}
				if (!removed.isEmpty()) {
					// Update in a separate job
					(new UpdaterJob()).perform(UpdaterJob.REMOVAL, removed);
				}
			} catch (CoreException e) {
				Logger.logException(e);
			}

		}

