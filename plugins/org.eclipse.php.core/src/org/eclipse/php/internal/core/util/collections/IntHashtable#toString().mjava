	/**
	 * Returns a string representation of this <tt>Hashtable</tt> object
	 * in the form of a set of entries, enclosed in braces and separated
	 * by the ASCII characters "<tt>,&nbsp;</tt>" (comma and space). Each
	 * entry is rendered as the key, an equals sign <tt>=</tt>, and the
	 * associated element, where the <tt>toString</tt> method is used to
	 * convert the key and element to strings. <p>Overrides to
	 * <tt>toString</tt> method of <tt>Object</tt>.
	 *
	 * @return  a string representation of this hashtable.
	 */
	public synchronized String toString() {
		int max = size() - 1;
		StringBuffer buf = new StringBuffer();
		Iterator it = entrySet().iterator();

		buf.append("{");
		for (int i = 0; i <= max; i++) {
			Map.Entry e = (Map.Entry) (it.next());
			buf.append(e.getKey() + "=" + e.getValue());
			if (i < max)
				buf.append(", ");
		}
		buf.append("}");
		return buf.toString();
	}

