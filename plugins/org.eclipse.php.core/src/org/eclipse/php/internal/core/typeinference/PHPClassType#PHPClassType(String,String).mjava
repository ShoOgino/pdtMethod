	/**
	 * Constructs evaluated type for PHP class or interface that was declared
	 * under some namespace
	 */
	public PHPClassType(String namespace, String typeName) {
		if (namespace == null || typeName == null) {
			throw new IllegalArgumentException();
		}

		if (namespace.length() == 0 || namespace.equals(NamespaceReference.NAMESPACE_DELIMITER)) {
			global = true;
			this.namespace = ""; // $NON-NLS-1$
		} else if (namespace.charAt(0) == NamespaceReference.NAMESPACE_SEPARATOR) {
			this.namespace = namespace;
		} else {
			// make the namespace fully qualified
			this.namespace = new StringBuilder(NamespaceReference.NAMESPACE_DELIMITER).append(namespace).toString();
		}
		this.typeName = new StringBuilder(this.namespace).append(NamespaceReference.NAMESPACE_DELIMITER)
				.append(typeName).toString();
	}

