	protected void showClassList(String prefix, int offset, States state) {
		this.setSourceRange(offset - prefix.length(), offset);

		int relevanceClass = RELEVANCE_CLASS;

		switch (state) {
			case NEW:
				IType[] types = CodeAssistUtils.getOnlyClasses(sourceModule, prefix, requestor.isContextInformationMode());
				for (IType type : types) {
					try {
						if ((type.getFlags() & IPHPModifiers.Internal) == 0) {
							reportType(type, relevanceClass--, BRACKETS_SUFFIX);
						}
					} catch (ModelException e) {
						if (DLTKCore.DEBUG_COMPLETION) {
							e.printStackTrace();
						}
					}
				}
				if (CodeAssistUtils.startsWithIgnoreCase(SELF, prefix)) {
					if (!requestor.isContextInformationMode() || prefix.length() == SELF.length()) {
						// get the class data for "self". In case of null, the self function will not be added
						IType selfClassData = CodeAssistUtils.getSelfClassData(sourceModule, offset);
						if (selfClassData != null) {
							addSelfFunctionToProposals(selfClassData);
						}
					}
				}
				break;
			case INSTANCEOF:
				IModelElement[] typeElements = CodeAssistUtils.getGlobalClasses(sourceModule, prefix, requestor.isContextInformationMode());
				for (IModelElement typeElement : typeElements) {
					try {
						if ((((IType) typeElement).getFlags() & IPHPModifiers.Internal) == 0) {
							reportType((IType) typeElement, relevanceClass--, EMPTY);
						}
					} catch (ModelException e) {
						if (DLTKCore.DEBUG_COMPLETION) {
							e.printStackTrace();
						}
					}
				}
				if (CodeAssistUtils.startsWithIgnoreCase(SELF, prefix)) {
					if (!requestor.isContextInformationMode() || prefix.length() == SELF.length()) {
						// get the class data for "self". In case of null, the self function will not be added
						IType selfClassData = CodeAssistUtils.getSelfClassData(sourceModule, offset);
						if (selfClassData != null) {
							addSelfFunctionToProposals(selfClassData);
						}
					}
				}
				break;
			case CATCH:
				typeElements = CodeAssistUtils.getGlobalClasses(sourceModule, prefix, requestor.isContextInformationMode());
				for (IModelElement typeElement : typeElements) {
					try {
						if ((((IType) typeElement).getFlags() & IPHPModifiers.Internal) == 0) {
							reportType((IType) typeElement, relevanceClass--, EMPTY);
						}
					} catch (ModelException e) {
						if (DLTKCore.DEBUG_COMPLETION) {
							e.printStackTrace();
						}
					}
				}
				break;
			default:
				break;
		}
	}

