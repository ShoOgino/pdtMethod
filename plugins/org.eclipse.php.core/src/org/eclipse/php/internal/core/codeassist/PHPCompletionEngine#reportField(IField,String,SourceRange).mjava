	public void reportField(IField field, String suffix, SourceRange replaceRange) {
		if (processedElements.contains(field)) {
			return;
		}
		processedElements.add(field);

		int flags = 0;
		try {
			flags = field.getFlags();
		} catch (ModelException e) {
			if (DLTKCore.DEBUG_COMPLETION) {
				e.printStackTrace();
			}
		}
		int relevance = PHPFlags.isConstant(flags) ? nextConstantRelevance() : nextVariableRelevance();
		
		noProposal = false;
		
		if (!requestor.isIgnored(CompletionProposal.FIELD_REF)) {
			
			CompletionProposal proposal = createProposal(CompletionProposal.FIELD_REF, actualCompletionPosition);
			proposal.setName(field.getElementName().toCharArray());
			proposal.setCompletion((field.getElementName() + suffix).toCharArray());
			proposal.setModelElement(field);
			proposal.setFlags(flags);
			proposal.setRelevance(relevance);
			proposal.setReplaceRange(replaceRange.getOffset(), replaceRange.getOffset() + replaceRange.getLength());

			this.requestor.accept(proposal);
			
			if (DEBUG) {
				this.printDebug(proposal);
			}
		}
	}

