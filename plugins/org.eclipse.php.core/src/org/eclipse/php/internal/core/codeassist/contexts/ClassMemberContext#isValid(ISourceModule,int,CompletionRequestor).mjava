	public boolean isValid(ISourceModule sourceModule, int offset, CompletionRequestor requestor) {
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}

		TextSequence statementText = getStatementText();
		int totalLength = statementText.length();
		int endPosition = PHPTextSequenceUtilities.readBackwardSpaces(statementText, totalLength); // read whitespace
		elementStart = PHPTextSequenceUtilities.readIdentifierStartIndex(statementText, endPosition, true);

		elementStart = PHPTextSequenceUtilities.readBackwardSpaces(statementText, elementStart);
		if (elementStart <= 2) { // there's no trigger of length less than 2 characters
			return false;
		}

		String triggerText = statementText.subSequence(elementStart - 2, elementStart).toString();
		if (triggerText.equals("->")) {
			triggerType = Trigger.OBJECT;
		} else if (triggerText.equals("::")) {
			triggerType = Trigger.CLASS;
		} else {
			return false;
		}
		
		types = CodeAssistUtils.getTypesFor(sourceModule, statementText, elementStart, offset);
		return true;
	}

