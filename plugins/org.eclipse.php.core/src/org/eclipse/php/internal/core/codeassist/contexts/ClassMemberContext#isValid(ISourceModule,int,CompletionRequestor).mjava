	public boolean isValid(ISourceModule sourceModule, int offset,
			CompletionRequestor requestor) {
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}

		TextSequence statementText = getStatementText();
		int totalLength = statementText.length();
		elementStart = PHPTextSequenceUtilities.readBackwardSpaces(
				statementText, totalLength);
		elementStart = PHPTextSequenceUtilities.readIdentifierStartIndex(
				statementText, elementStart, true);
		elementStart = PHPTextSequenceUtilities.readBackwardSpaces(
				statementText, elementStart);
		if (elementStart <= 2) { // there's no trigger of length less than 2
									// characters
			return false;
		}

		String triggerText = statementText.subSequence(elementStart - 2,
				elementStart).toString();
		if (triggerText.equals("->")) {
			triggerType = Trigger.OBJECT;
		} else if (triggerText.equals("::")) {
			triggerType = Trigger.CLASS;
		} else {
			return false;
		}

		types = getCompanion().getLeftHandType(this);
		return true;
	}

