	/**
	 * This method searches for all methods in the project scope that match the given prefix.
	 * If the project doesn't exist, workspace scope is used.
	 * 
	 * @param sourceModule Current source module
	 * @param prefix Field name
	 * @param mask
	 */
	public static IModelElement[] getGlobalMethods(ISourceModule sourceModule, String prefix, int mask) {
		int nsIdx = prefix.lastIndexOf(NS_SEPARATOR);
		if (nsIdx != -1) {
			String nsName = prefix.substring(0, nsIdx);
			prefix = prefix.substring(nsIdx + 1);
			
			IType[] namespaces = getGlobalTypes(sourceModule, nsName, EXACT_NAME);
			List<IModelElement> methods = new LinkedList<IModelElement>();
			for (IType ns : namespaces) {
				try {
					if (PHPFlags.isNamespace(ns.getFlags())) {
						methods.addAll(Arrays.asList(getTypeMethods(ns, prefix, mask)));
					}
				} catch (ModelException e) {
					if (DLTKCore.DEBUG_COMPLETION) {
						e.printStackTrace();
					}
				}
			}
			return methods.toArray(new IModelElement[methods.size()]);
		}
		return getGlobalElements(sourceModule, prefix, IDLTKSearchConstants.METHOD, mask);
	}

