	@SuppressWarnings("unchecked")
	private boolean isVariableCompletion(int offset, String tagName, String varName, boolean haveSpacesAtEnd) {
		if (haveSpacesAtEnd) {
			return false;
		}
		if (!PHPDocTag.PARAM_NAME.equals(tagName)) {
			return false;
		}
		if (varName.startsWith(DOLLAR)) { //$NON-NLS-1$
			// find function arguments
			ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration((org.eclipse.dltk.core.ISourceModule) sourceModule.getModelElement(), null);
			
			Declaration declaration = ASTUtils.findDeclarationAfterPHPdoc(moduleDeclaration, offset);
			if (declaration instanceof MethodDeclaration) {

				List<String> variables = new LinkedList<String>();
				List<Argument> arguments = ((MethodDeclaration)declaration).getArguments();
				for (Argument arg : arguments) {
					variables.add(arg.getName());
				}
				
				int relevance = 424242;
				this.setSourceRange(offset - varName.length(), offset);
				reportVariables(variables.toArray(new String[variables.size()]), varName, relevance, false);
				return true;
			}
		}
		return false;
	}

