	public FieldsDeclaration(int start, int end, AST ast, int modifier, List variablesAndDefaults) {
		super(start, end, ast, modifier);
		assert variablesAndDefaults != null && variablesAndDefaults.size() > 0;

		int i = 0;
		for (Iterator iter = variablesAndDefaults.iterator(); iter.hasNext(); i++) {
			final Object next = iter.next();
			if (next instanceof SingleFieldDeclaration) {
				this.fields.add ((SingleFieldDeclaration) next);
			} else {
				ASTNode[] element = (ASTNode[]) next;
				SingleFieldDeclaration field = createField(ast, (Variable) element[0], (Expression) element[1]);
				this.fields.add(field);
			}
		}
	}

