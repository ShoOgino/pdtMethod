	/**
	 * Returns file global model elements by given prefix
	 */
	public static IModelElement[] getSourceModuleElements(ISourceModule sourceModule, String prefix, boolean exactName, int elementType) {
		List<IModelElement> elements = new LinkedList<IModelElement>();
		try {
			switch (elementType) {
				case IDLTKSearchConstants.TYPE:
					IType[] types = sourceModule.getTypes();
					for (IType type : types) {
						String typeName = type.getElementName();
						if (exactName) {
							if (typeName.equalsIgnoreCase(prefix)) {
								elements.add(type);
								break;
							}
						} else if (startsWithIgnoreCase(typeName, prefix)) {
							elements.add(type);
						}
					}
					break;
				case IDLTKSearchConstants.METHOD:
					IMethod[] methods = ((AbstractSourceModule)sourceModule).getMethods();
					for (IMethod method : methods) {
						String methodName = method.getElementName();
						if (exactName) {
							if (methodName.equalsIgnoreCase(prefix)) {
								elements.add(method);
								break;
							}
						} else if (startsWithIgnoreCase(methodName, prefix)) {
							elements.add(method);
						}
					}
					break;
				case IDLTKSearchConstants.FIELD:
					IField[] fields = sourceModule.getFields();
					for (IField field : fields) {
						String fieldName = field.getElementName();
						if (exactName) {
							if (fieldName.equals(prefix)) {
								elements.add(field);
								break;
							}
						} else if (fieldName.startsWith(prefix)) {
							elements.add(field);
						}
					}
					break;
			}
		} catch (ModelException e) {
			if (DLTKCore.DEBUG_COMPLETION) {
				e.printStackTrace();
			}
		}
		return elements.toArray(new IModelElement[elements.size()]);
	}

