	public IGoal[] subGoalDone(IGoal subgoal, Object result, GoalState state) {
		if (result instanceof AmbiguousType) {
			IEvaluatedType[] possibleTypes = ((AmbiguousType) result).getPossibleTypes();
			List<IEvaluatedType> types = new ArrayList<IEvaluatedType>();
			for (IEvaluatedType type : possibleTypes) {
				if (type instanceof MultiTypeType) {
					types.addAll(((MultiTypeType) type).getTypes());
				}
			}
			result = new AmbiguousType(types.toArray(new IEvaluatedType[types.size()]));
		} else if (result instanceof MultiTypeType) {
			MultiTypeType multiTypeType = (MultiTypeType) result;
			List<IEvaluatedType> types = multiTypeType.getTypes();
			if (types.size() == 1) {
				result = types.get(0);
			} else if (types.size() == 0) {
				result = PHPSimpleTypes.MIXED;
			} else {
				result = new AmbiguousType(types.toArray(new IEvaluatedType[types.size()]));
			}
		}
		this.result = (IEvaluatedType) result;
		return IGoal.NO_GOALS;
	}

