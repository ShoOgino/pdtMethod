	private static IModelElement[] getWorkspaceElements(String prefix, boolean exactName, int elementType) {
		SearchEngine searchEngine = new SearchEngine();
		IDLTKLanguageToolkit toolkit = PHPLanguageToolkit.getDefault();
		IDLTKSearchScope scope = SearchEngine.createWorkspaceScope(toolkit);
		
		int matchRule = exactName ? SearchPattern.R_EXACT_MATCH : SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_PREFIX_MATCH;

		SearchPattern pattern = SearchPattern.createPattern(prefix, elementType, IDLTKSearchConstants.DECLARATIONS, matchRule, toolkit);
				
		final List<IModelElement> elements = new LinkedList<IModelElement>();
		try {
			searchEngine.search(pattern, new SearchParticipant[] { SearchEngine.getDefaultSearchParticipant() }, scope, new SearchRequestor() {
				public void acceptSearchMatch(SearchMatch match) throws CoreException {
					IModelElement element = (IModelElement) match.getElement();
					if (element.getParent() instanceof ISourceModule) {
						elements.add(element);
					}
				}
			}, null);
		} catch (CoreException e) {
			Logger.logException(e);
		}
		return elements.toArray(new IModelElement[elements.size()]);
	}

