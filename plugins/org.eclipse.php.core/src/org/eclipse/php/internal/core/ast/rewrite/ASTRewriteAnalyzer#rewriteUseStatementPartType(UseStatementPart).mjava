	private void rewriteUseStatementPartType(UseStatementPart useStatementPart) {
		// Rewrite the statement part type
		RewriteEvent event = getEvent(useStatementPart, UseStatementPart.STATEMENT_TYPE_PROPERTY);
		if (event != null) {
			int kind = event.getChangeKind();
			switch (kind) {
			case RewriteEvent.REPLACED:
				if (!(useStatementPart.getParent() instanceof UseStatement)) {
					break;
				}
				UseStatement useStatement = ((UseStatement) useStatementPart.getParent());
				if (useStatement.getNamespace() == null) {
					break;
				}
				List<UseStatementPart> parts = useStatement.parts();
				int idx = parts.indexOf(useStatementPart);
				assert idx != -1;
				if (idx == -1) {
					break;
				}

				String insertString = ""; //$NON-NLS-1$
				int start;
				if (idx == 0) {
					insertString += "{"; //$NON-NLS-1$
					start = useStatement.getNamespace().getEnd();
				} else {
					insertString += ", "; //$NON-NLS-1$
					start = parts.get(idx - 1).getEnd();
				}
				if (useStatementPart.getStatementType() == UseStatement.T_FUNCTION) {
					insertString += "function "; //$NON-NLS-1$
				} else if (useStatementPart.getStatementType() == UseStatement.T_CONST) {
					insertString += "const "; //$NON-NLS-1$
				}
				int length = useStatementPart.getName().getStart() - start;
				doTextReplace(start, length, insertString, getEditGroup(event));
				break;
			}
		}
	}

