	@Override
	public IGoal[] init() {
		ExpressionTypeGoal typedGoal = (ExpressionTypeGoal) goal;
		ClassInstanceCreation expression = (ClassInstanceCreation) typedGoal.getExpression();
		if (expression.getAnonymousClassDeclaration() != null
				&& typedGoal.getContext() instanceof ISourceModuleContext) {
			result = new AnonymousClassInstanceType(((ISourceModuleContext) typedGoal.getContext()).getSourceModule(),
					expression.getAnonymousClassDeclaration());
			return IGoal.NO_GOALS;
		}
		Expression className = expression.getClassName();
		if ((className instanceof TypeReference)) {
			if (isSelf((TypeReference) className) && (goal.getContext() instanceof MethodContext)) {
				MethodContext methodContext = (MethodContext) goal.getContext();
				result = methodContext.getInstanceType();
				return IGoal.NO_GOALS;
			} else {
				return new IGoal[] { new ExpressionTypeGoal(goal.getContext(), className) };
			}
		}
		result = UnknownType.INSTANCE;
		return IGoal.NO_GOALS;
	}

