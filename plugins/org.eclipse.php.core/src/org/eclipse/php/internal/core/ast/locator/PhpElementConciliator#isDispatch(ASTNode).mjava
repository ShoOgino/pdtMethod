	/**
	 * Identifies a dispatch usage
	 * @param locateNode
	 */
	private static boolean isDispatch(ASTNode locateNode) {
		assert locateNode != null;

		ASTNode parent = null;
		// check if it is an identifier
		if (locateNode.getType() == ASTNode.IDENTIFIER && ((Identifier) locateNode).getParent() instanceof Variable) {
			parent = (Variable) ((Identifier) locateNode).getParent();
			parent = parent.getParent();

		} else if (locateNode.getType() == ASTNode.SINGLE_FIELD_DECLARATION) {
			parent = (SingleFieldDeclaration) locateNode;
		} else {
			return false;
		}

		// check if it is a method declaration
		if (parent.getType() == ASTNode.FUNCTION_DECLARATION) {
			// check if it is a method declaration
			if (parent.getParent() != null) {
				parent = parent.getParent();
				if (parent.getType() == ASTNode.METHOD_DECLARATION) {
					return true;
				}
			}
			return false;
		}

		if (parent.getType() == ASTNode.SINGLE_FIELD_DECLARATION) {

			// check for $this variable
			final SingleFieldDeclaration variable = (SingleFieldDeclaration) parent;

			//			if (!variable. || variable.equals(THIS)) {
			//				return false;
			//			}

			if (parent.getParent().getType() == ASTNode.FIELD_DECLARATION || parent.getParent().getType() == ASTNode.SINGLE_FIELD_DECLARATION) {
				return true;
			}
		}

		if (parent.getType() == ASTNode.CONSTANT_DECLARATION)
			return true;

		// check if it is a dispatch
		while (parent != null) {
			if (parent instanceof Dispatch || parent instanceof StaticDispatch) {
				return true;
			}
			parent = parent.getParent();
		}
		return false;
	}

