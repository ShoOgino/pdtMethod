    protected Expression constructStaticMember(TypeReference className, Expression dispatcher) {
    
		Expression result = null;
		if (dispatcher.getKind() == ASTNodeKinds.FIELD_ACCESS) {
			FieldAccess fieldAccess = (FieldAccess)dispatcher;
			Expression var = constructStaticMember(className, fieldAccess.getDispatcher());
			FieldAccess newFieldAccess = new FieldAccess(var.sourceStart(), fieldAccess.getField().sourceEnd() ,var, fieldAccess.getField());
			result = newFieldAccess;
		}
		else if (dispatcher.getKind() == ASTNodeKinds.REFLECTION_CALL_EXPRESSION) {
			ReflectionCallExpression methodInvocation = (ReflectionCallExpression)dispatcher;
			Expression var = constructStaticMember(className, methodInvocation.getReceiver());
			ReflectionCallExpression newMethodInvocation =  new ReflectionCallExpression(var.sourceStart(), methodInvocation.getName().sourceEnd() ,dispatcher, methodInvocation.getName(), methodInvocation.getArguments());
			result = newMethodInvocation;
		}
		else if (dispatcher.getKind() == ASTNodeKinds.METHOD_INVOCATION) {
			PHPCallExpression callExpression = (PHPCallExpression) dispatcher;
			Expression var = constructStaticMember(className, (Expression)callExpression.getReceiver());
			PHPCallExpression newCallExpression =  new PHPCallExpression(var.sourceStart(), callExpression.getCallName().sourceEnd() ,dispatcher, callExpression.getName(), callExpression.getArgs());
			result = newCallExpression;
		}
		else {
			result = new StaticFieldAccess(className.sourceStart(), dispatcher.sourceEnd(), className, dispatcher);
		}
		return result;
	}

