	/**
	 * Returns a single instance of a {@link PreferencesPropagator} according to the given
	 * nodeQualifier and the preferences store.
	 *
	 * @param nodeQualifier
	 * @return the ProjectPreferencesPropagator given a nodeQualifier and a preference store
	 */
	public static PreferencesPropagator getPreferencePropagator(String nodeQualifier, Preferences store){
		PreferencePropagatorFactory factory = getInstance();
		if (factory.propagatorsMap.containsKey(nodeQualifier)){
			return (PreferencesPropagator) factory.propagatorsMap.get(nodeQualifier);
		} else {
			PreferencesPropagator propagator = new PreferencesPropagator(nodeQualifier, store);
			factory.propagatorsMap.put(nodeQualifier, propagator);
			return propagator;
		}
	}

