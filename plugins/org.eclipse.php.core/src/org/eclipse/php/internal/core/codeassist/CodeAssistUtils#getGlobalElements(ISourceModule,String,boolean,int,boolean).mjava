	/**
	 * This method searches in the project scope for all elements of specified type that match the given prefix.
	 * If currentFileOnly parameter is <code>true</code>, the search scope will contain only the source module.
	 * If the project doesn't exist, workspace scope is used.
	 * 
	 * @param sourceModule Current source module
	 * @param prefix Element name or prefix
	 * @param exactName Whether the prefix is an exact name of the element
	 * @param elementType Element type from {@link IDLTKSearchConstants}
	 * @param currentFileOnly Whether to search elements in current file only
	 * @return
	 */
	private static IModelElement[] getGlobalElements(ISourceModule sourceModule, String prefix, boolean exactName, int elementType, boolean currentFileOnly) {
		
		IDLTKLanguageToolkit toolkit = PHPLanguageToolkit.getDefault();
		
		IDLTKSearchScope scope;
		if (currentFileOnly) {
			scope = SearchEngine.createSearchScope(sourceModule);
		} else {
			IScriptProject scriptProject = sourceModule.getScriptProject();
			if (scriptProject != null) {
				scope = SearchEngine.createSearchScope(scriptProject);
			} else {
				scope = SearchEngine.createWorkspaceScope(toolkit);
			}
		} 
		
		if (!currentFileOnly && prefix.startsWith("$")) { //$NON-NLS-1$
			// search variables using mixin model:
			IModelElement[] variables = PHPMixinModel.getInstance().getVariable(prefix + WILDCARD, null, null, scope);
			return variables == null ? EMPTY : variables;
		}
		
		return getGlobalElements(scope, prefix, exactName, elementType);
	}

