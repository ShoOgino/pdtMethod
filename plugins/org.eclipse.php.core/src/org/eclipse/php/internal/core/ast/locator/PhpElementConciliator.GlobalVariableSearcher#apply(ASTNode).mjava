		public void apply(ASTNode node) {

			// stops when found - that's the reason to use ApplyAll
			if (exists)
				return;

			if (node.getType() == ASTNode.CLASS_DECLARATION || node.getType() == ASTNode.FUNCTION_DECLARATION) {
				isGlobalScope = false;
				node.childrenAccept(this);
				isGlobalScope = true;
			} else if (node.getType() == ASTNode.IDENTIFIER) {
				Identifier identifier = (Identifier) node;
				if (identifier.getParent().getType() == ASTNode.VARIABLE) {
					Variable variable = (Variable) identifier.getParent();
					if (variable.isDollared() && isGlobalScope && name.equals(identifier.getName())) {
						exists = true;
					}
				}
			} else if (node.getType() == ASTNode.GLOBAL_STATEMENT) {
				GlobalStatement globalStatement = (GlobalStatement) node;
				final Variable[] variables = globalStatement.getVariables();
				for (int i = 0; i < variables.length; i++) {
					final Variable variable = variables[i];
					final Expression variableName = variable.getVariableName();
					if (variable.isDollared() && variableName.getType() == ASTNode.IDENTIFIER) {
						Identifier identifier = (Identifier) variableName;
						if (name.equals(identifier.getName())) {
							exists = true;
						}
					}
				}
			} else {
				node.childrenAccept(this);
			}
		}

