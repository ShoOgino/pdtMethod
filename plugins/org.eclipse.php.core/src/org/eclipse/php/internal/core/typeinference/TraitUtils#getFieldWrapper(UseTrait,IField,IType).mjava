	private static List<IField> getFieldWrapper(UseTrait useTrait,
			IField field, IType type) {
		List<IField> result = new ArrayList<IField>();
		String fieldName = field.getElementName();
		if (fieldName.startsWith("$")) { //$NON-NLS-1$
			fieldName = fieldName.substring(1);
		}
		TraitPrecedenceObject tpo = useTrait.getPrecedenceMap().get(fieldName);
		boolean shouldAddSelf = true;
		boolean changeVisibility = false;
		if (tpo != null) {
			shouldAddSelf = false;
		}
		List<TraitAliasObject> aliasList = useTrait.getAliasMap()
				.get(fieldName);
		String fullName = PHPModelUtils.getFullName(field.getDeclaringType());
		if (aliasList != null) {
			for (TraitAliasObject tao : aliasList) {
				if ((tao.traitName == null || fullName.equals(tao.traitName))) {
					IField alias = new FieldWrapper(field,
							tao.newMethodVisibility, tao.newMethodName, type);
					result.add(alias);
					if (fieldName.equals(tao.newMethodName)
							|| tao.newMethodName == null) {
						changeVisibility = true;
					}
				}
				if (tpo != null) {
					if (!fullName.equals(tpo.traitName)) {
						continue;
					} else {
						shouldAddSelf = true;
					}
				}
			}
		} else {
			if (tpo != null && fullName.equals(tpo.traitName)) {
				shouldAddSelf = true;
			}
		}

		if (shouldAddSelf && !changeVisibility) {
			result.add(field);
		}
		// TraitAliasObject tao = useTrait.getAliasMap().get(fieldName);
		return result;
	}

