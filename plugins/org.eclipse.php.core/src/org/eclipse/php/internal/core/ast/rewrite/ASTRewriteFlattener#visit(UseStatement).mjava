	@Override
	public boolean visit(UseStatement useStatement) {
		result.append("use "); //$NON-NLS-1$
		if (useStatement.getStatementType() == UseStatement.T_FUNCTION) {
			result.append("function "); //$NON-NLS-1$
		} else if (useStatement.getStatementType() == UseStatement.T_CONST) {
			result.append("const "); //$NON-NLS-1$
		}
		if (useStatement.getNamespace() != null) {
			useStatement.getNamespace().accept(this);
			result.append("\\{"); //$NON-NLS-1$
		}
		Iterator<UseStatementPart> it = useStatement.parts().iterator();
		while (it.hasNext()) {
			it.next().accept(this);
			if (it.hasNext()) {
				result.append(", "); //$NON-NLS-1$
			}
		}
		if (useStatement.getNamespace() != null) {
			result.append("}"); //$NON-NLS-1$
		}
		result.append(";\n"); //$NON-NLS-1$
		return false;
	}

