	/**
	 * Creates a PHPHeuristicScanner with a default partition type set to
	 * PHPPartitionTypes.PHP_SINGLE_LINE_COMMENT,
	 * PHPPartitionTypes.PHP_MULTI_LINE_COMMENT, PHPPartitionTypes.PHP_DOC,
	 * PHPPartitionTypes.PHP_QUOTED_STRING or PHPPartitionTypes.PHP_DEFAULT.
	 * Matching open/close symbol will only be looked for in the same partition
	 * type, so that for example a closing bracket in a commented line will not
	 * match an opening bracket in the code.
	 * 
	 * @param document
	 *            the document to scan
	 * @param offset
	 *            the offset in the document
	 * @return the PHPHeuristicScanner for the given document and offset
	 * @throws BadLocationException
	 */
	public static PHPHeuristicScanner createHeuristicScanner(IDocument document, int offset, boolean ignoreString)
			throws BadLocationException {
		// Create a scanner with default values
		PHPHeuristicScanner scanner = new PHPHeuristicScanner(document);
		// Calculate the partition in the given offset and classify it
		// accordingly
		ITypedRegion partition = scanner.getPartition(offset);
		// Update the default partition in the scanner
		scanner.fPartition = partition.getType();
		if (ignoreString && PHPPartitionTypes.PHP_QUOTED_STRING.equals(scanner.fPartition)) {
			scanner.fPartition = PHPPartitionTypes.PHP_DEFAULT;
		}
		if (!ignoreString && PHPPartitionTypes.PHP_QUOTED_STRING.equals(scanner.fPartition)) {
			scanner.fTextRegion = scanner.getTextRegion(offset);
		}
		return scanner;
	}

