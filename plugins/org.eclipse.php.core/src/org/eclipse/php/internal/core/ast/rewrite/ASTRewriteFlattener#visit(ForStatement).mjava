	@Override
	public boolean visit(ForStatement forStatement) {
		result.append("for ("); //$NON-NLS-1$

		Iterator<Expression> expressions = forStatement.initializers().iterator();
		if (expressions.hasNext()) {
			expressions.next().accept(this);
			while (expressions.hasNext()) {
				result.append(", "); //$NON-NLS-1$
				expressions.next().accept(this);
			}
		}

		result.append(" ; "); //$NON-NLS-1$
		expressions = forStatement.conditions().iterator();
		if (expressions.hasNext()) {
			expressions.next().accept(this);
			while (expressions.hasNext()) {
				result.append(", "); //$NON-NLS-1$
				expressions.next().accept(this);
			}
		}

		result.append(" ; "); //$NON-NLS-1$
		expressions = forStatement.updaters().iterator();
		if (expressions.hasNext()) {
			expressions.next().accept(this);
			while (expressions.hasNext()) {
				result.append(", "); //$NON-NLS-1$
				expressions.next().accept(this);
			}
		}
		result.append(" ) "); //$NON-NLS-1$
		Statement body = forStatement.getBody();
		if (body != null) {
			body.accept(this);
		}
		return false;
	}

