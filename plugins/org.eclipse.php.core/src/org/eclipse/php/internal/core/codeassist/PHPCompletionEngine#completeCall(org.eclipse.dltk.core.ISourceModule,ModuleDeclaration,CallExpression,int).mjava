	private void completeCall(org.eclipse.dltk.core.ISourceModule module, ModuleDeclaration moduleDeclaration, CallExpression node, int position) {
		ASTNode receiver = node.getReceiver();

		String content;
		try {
			content = module.getSource();
		} catch (ModelException e) {
			return;
		}

		int pos = (receiver != null) ? (receiver.sourceEnd() + 1) : (node.sourceStart());

		for (int t = 0; t < 2; t++) { // correct not more 2 chars
			if (pos < position && !isIdentifierChar(content.charAt(pos))) {
				// calls
				pos++;
			}
		}

		String starting = content.substring(pos, position).trim();

		if (receiver == null) {
			completeSimpleRef(module, moduleDeclaration, starting, position);
		}

		this.setSourceRange(position - starting.length(), position);

		if (receiver != null) {
			completeClassMethods(module, moduleDeclaration, receiver, starting);
		}
	}

