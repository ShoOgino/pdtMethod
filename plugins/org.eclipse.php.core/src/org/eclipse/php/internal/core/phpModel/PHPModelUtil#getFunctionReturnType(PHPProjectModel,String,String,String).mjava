	/**
	 * finding the return type of the function.
	 */
	public static String getFunctionReturnType(PHPProjectModel projectModel, String fileName, String className, String functionName) {
		if (className == null) {

			// checking if its a non-class function from within the file
			PHPFunctionData function = projectModel.getFunction(fileName, functionName);
			if (function != null)
				return function.getReturnType();

			// checking if its a non-class function from within the project
			CodeData[] functions = projectModel.getFunctions();
			for (CodeData projectFunction : functions) {
				if (projectFunction.getName().equals(functionName)) {
					if (projectFunction instanceof PHPFunctionData) {
						return ((PHPFunctionData) projectFunction).getReturnType();
					}
				}
			}
			return null;
		}
		String[] realClassNames = className.split(PHPDOC_CLASS_NAME_SEPARATOR);
		Set<String> functionReturnClassNames = new LinkedHashSet<String>();
		for (String realClassName : realClassNames) {
			realClassName = realClassName.trim();
			CodeData classFunction = projectModel.getClassFunctionData(fileName, realClassName, functionName);
			if (classFunction != null) {
				if (classFunction instanceof PHPFunctionData) {
					functionReturnClassNames.add(((PHPFunctionData) classFunction).getReturnType());
				}
				continue;
			}

			// checking if the function belongs to one of the class's ancestor
			PHPClassData classData = projectModel.getClass(fileName, realClassName);

			if (classData == null) {
				continue;
			}
			String functionReturnClassName = null;
			PHPClassData.PHPSuperClassNameData superClassNameData = classData.getSuperClassData();
			if (superClassNameData != null) {
				String superClassName = superClassNameData.getName();
				if (superClassName != null) {
					functionReturnClassName = getFunctionReturnType(projectModel, fileName, superClassName, functionName);
				}
			}
			if (functionReturnClassName != null) {
				functionReturnClassNames.add(functionReturnClassName);
			}
		}
		return StringUtils.implodeStrings(functionReturnClassNames, "|"); //$NON-NLS-1$
	}

