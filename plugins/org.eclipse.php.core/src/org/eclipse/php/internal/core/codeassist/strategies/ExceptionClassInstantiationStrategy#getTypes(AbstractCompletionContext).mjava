	protected IType[] getTypes(AbstractCompletionContext context)
			throws BadLocationException {
		IType exceptionType = getExceptionType();
		if (exceptionType == null)
			return super.getTypes(context);
		List<IType> result = new LinkedList<IType>();
		ITypeHierarchy typeHierarchy;
		ISourceModule sourceModule = context.getSourceModule();
		IScriptProject scriptProject = sourceModule.getScriptProject();
		try {
			if (scriptProject != null) {
				typeHierarchy = exceptionType.newTypeHierarchy(scriptProject,
						new NullProgressMonitor());
			} else {
				typeHierarchy = exceptionType
						.newTypeHierarchy(new NullProgressMonitor());
			}

			IType[] classes = typeHierarchy.getAllSubtypes(exceptionType);
			Set<IType> set = new HashSet<IType>();
			set.add(exceptionType);
			set.addAll(Arrays.asList(classes));
			String prefix = context.getPrefix();
			if (prefix.trim().length() != 0) {
				IType[] types = super.getTypes(context);
				for (int i = 0; i < types.length; i++) {
					IType type = types[i];
					if (set.contains(type)) {
						result.add(type);
					}
				}
			} else {
				result.addAll(set);
			}

		} catch (ModelException e) {
			return super.getTypes(context);
		}

		return (IType[]) result.toArray(new IType[result.size()]);
	}

