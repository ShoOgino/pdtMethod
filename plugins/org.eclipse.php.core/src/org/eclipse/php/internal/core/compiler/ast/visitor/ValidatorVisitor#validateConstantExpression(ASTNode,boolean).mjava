	private void validateConstantExpression(ASTNode astNode, boolean allowArray) {
		if (astNode == null || astNode instanceof Scalar || astNode instanceof ConstantReference) {
			return;
		}
		if (astNode instanceof Quote) {
			for (ASTNode expr : ((Quote) astNode).getExpressions()) {
				validateConstantExpression(expr, allowArray);
			}
		} else if (astNode instanceof UnaryOperation) {
			UnaryOperation op = (UnaryOperation) astNode;
			if (version.isLessThan(PHPVersion.PHP5_6) && op.getOperatorType() != UnaryOperation.OP_MINUS
					&& op.getOperatorType() != UnaryOperation.OP_PLUS) {
				reportProblem(astNode, Messages.InvalidConstantExpression,
						PHPProblemIdentifier.InvalidConstantExpression, ProblemSeverities.Error);
			} else {
				validateConstantExpression(op.getExpr(), allowArray);
			}
		} else if (astNode instanceof StaticConstantAccess) {
			StaticConstantAccess acc = (StaticConstantAccess) astNode;
			if (!(acc.getDispatcher() instanceof FullyQualifiedReference)) {
				reportProblem(acc.getDispatcher(), Messages.DynamicClassNotAllowed,
						PHPProblemIdentifier.InvalidConstantExpression, ProblemSeverities.Error);
			}
		} else if (version.isGreaterThan(PHPVersion.PHP5_5) && astNode instanceof InfixExpression) {
			InfixExpression expr = (InfixExpression) astNode;
			validateConstantExpression(expr.getLeft(), allowArray);
			validateConstantExpression(expr.getRight(), allowArray);
		} else if ((allowArray || version.isGreaterThan(PHPVersion.PHP5_5)) && astNode instanceof ArrayCreation) {
			((ArrayCreation) astNode).getElements().stream().forEach(n -> {
				validateConstantExpression(n.getKey(), allowArray);
				validateConstantExpression(n.getValue(), allowArray);
			});
		} else if (version.isGreaterThan(PHPVersion.PHP5_5) && astNode instanceof ReflectionArrayVariableReference) {
			ReflectionArrayVariableReference ref = (ReflectionArrayVariableReference) astNode;
			validateConstantExpression(ref.getExpression(), allowArray);
			validateConstantExpression(ref.getIndex(), allowArray);
		} else {
			reportProblem(astNode, Messages.InvalidConstantExpression, PHPProblemIdentifier.InvalidConstantExpression,
					ProblemSeverities.Error);
		}
	}

