	/**
	 * Scans the given string for a base type signature starting at the given index
	 * and returns the index of the last character.
	 * 
	 * <pre>
	 * BaseTypeSignature:
	 *     &lt;b&gt;B&lt;/b&gt; | &lt;b&gt;C&lt;/b&gt; | &lt;b&gt;D&lt;/b&gt; | &lt;b&gt;F&lt;/b&gt; | &lt;b&gt;I&lt;/b&gt;
	 *   | &lt;b&gt;J&lt;/b&gt; | &lt;b&gt;S&lt;/b&gt; | &lt;b&gt;V&lt;/b&gt; | &lt;b&gt;Z&lt;/b&gt;
	 * </pre>
	 * 
	 * Note that although the base type "V" is only allowed in method return types,
	 * there is no syntactic ambiguity. This method will accept them anywhere
	 * without complaint.
	 * 
	 * @param string
	 *                   the signature string
	 * @param start
	 *                   the 0-based character index of the first character
	 * @return the 0-based character index of the last character
	 * @exception IllegalArgumentException
	 *                                         if this is not a base type signature
	 */
	public static int scanBaseTypeSignature(char[] string, int start) {
		// need a minimum 1 char
		if (start >= string.length) {
			throw new IllegalArgumentException();
		}
		char c = string[start];
		if ("BCDFIJSVZ".indexOf(c) >= 0) { //$NON-NLS-1$
			return start;
		} else {
			throw new IllegalArgumentException();
		}
	}

