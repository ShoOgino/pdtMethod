	public void reportResource(IModelElement model, IPath relative,
			String suffix, SourceRange replaceRange) {
		if (processedElements.contains(model)
				|| processedPaths.contains(relative)) {
			return;
		}
		processedElements.add(model);
		processedPaths.add(relative);
		noProposal = false;

		CompletionProposal proposal = null;
		if (model.getElementType() == IModelElement.SCRIPT_FOLDER
				&& !requestor.isIgnored(CompletionProposal.PACKAGE_REF)) {
			proposal = createProposal(CompletionProposal.PACKAGE_REF,
					actualCompletionPosition);
		} else if (!requestor.isIgnored(CompletionProposal.KEYWORD)) {
			proposal = createProposal(CompletionProposal.KEYWORD,
					actualCompletionPosition);
		}

		proposal.setName(relative.toString());
		proposal.setCompletion((relative.toString() + suffix));
		proposal.setRelevance(nextKeywordRelevance());
		proposal.setReplaceRange(replaceRange.getOffset(), replaceRange
				.getOffset()
				+ replaceRange.getLength());
		proposal.setModelElement(model);

		this.requestor.accept(proposal);
		if (DEBUG) {
			this.printDebug(proposal);
		}
	}

