	/**
	 * Reads from the given offset until a token is reached and returns the offset
	 * after the previous token.
	 * 
	 * @param token
	 *            The token to be found.
	 * @param startOffset
	 *            The offset to start scanning from.
	 * @return Returns the end offset of the token previous to the given token.
	 * @exception CoreException
	 *                Thrown when the end of the file has been reached (code
	 *                END_OF_FILE) or a lexical error was detected while scanning
	 *                (code LEXICAL_ERROR)
	 */
	public int getPreviousTokenEndOffset(Symbol token, int startOffset) throws CoreException {
		setOffset(startOffset);
		int res = startOffset;
		Symbol curr = readNext();
		while (curr != null && curr.sym != token.sym) {
			res = getCurrentEndOffset();
			curr = readNext();
		}
		return res;
	}

