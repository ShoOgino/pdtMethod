	public boolean visit(LambdaFunctionDeclaration s) throws Exception {
		Map<String, String> parameters = createInitialParameters(s);
		parameters.put("isReference", Boolean.toString(s.isReference()));
		parameters.put("isStatic", Boolean.toString(s.isStatic()));
		xmlWriter.startTag("LambdaFunctionDeclaration", parameters);
		
		xmlWriter.startTag("Arguments", new HashMap<String, String>());
		for (FormalParameter p : s.getArguments()) {
			p.traverse(this);
		}
		xmlWriter.endTag("Arguments");
		
		Collection<? extends Expression> lexicalVars = s.getLexicalVars();
		if (lexicalVars != null) {
			xmlWriter.startTag("LexicalVars", new HashMap<String, String>());
			for (Expression var : lexicalVars) {
				var.traverse(this);
			}
			xmlWriter.endTag("LexicalVars");
		}
		
		s.getBody().traverse(this);
		
		return false;
	}

