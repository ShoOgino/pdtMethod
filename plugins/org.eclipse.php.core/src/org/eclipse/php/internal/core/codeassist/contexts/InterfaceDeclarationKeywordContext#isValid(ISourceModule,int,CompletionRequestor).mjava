	public boolean isValid(ISourceModule sourceModule, int offset,
			CompletionRequestor requestor) {
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}

		TextSequence statementText = getStatementText();
		statementText = statementText.subTextSequence(getTypeIdentifierEnd(),
				statementText.length());

		if (hasExtends()) {
			return true;
		}
		try {
			String previousWord = getPreviousWord();
			if (!"extends".equalsIgnoreCase(previousWord)
					&& !"interface".equalsIgnoreCase(previousWord)) {
				return true;
			}
		} catch (BadLocationException e) {
			PHPCorePlugin.log(e);
		}
		return false;
	}

