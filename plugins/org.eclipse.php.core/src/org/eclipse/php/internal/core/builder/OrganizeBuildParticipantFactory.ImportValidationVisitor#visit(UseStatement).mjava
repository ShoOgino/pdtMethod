		public boolean visit(UseStatement s) throws Exception {
			if (this.statements.length == 0) {
				return super.visit(s);
			}

			List<Position> excludePositions = DocumentUtils.getExcludeSortedAndFilteredPositions(excludeNodes);

			String total;
			if (this.currentNamespace != null && this.currentNamespace.isBracketed()) {
				total = DocumentUtils.stripUseStatements(statements, doc, this.currentNamespace.sourceStart(),
						this.currentNamespace.sourceEnd(), excludePositions);
			} else {
				total = DocumentUtils.stripUseStatements(statements, doc, excludePositions);
			}
			boolean multiPart = s.getParts().size() > 1;
			for (UsePart part : s.getParts()) {
				if (DocumentUtils.containsUseStatement(part, total, excludePositions)) {
					continue;
				}
				int sourceStart = multiPart ? part.getNamespace().sourceStart() : s.sourceStart();
				int sourceEnd = multiPart ? part.getNamespace().sourceEnd() : s.sourceEnd();
				int lineNumber = context.getLineTracker().getLineNumberOfOffset(sourceStart);

				DefaultProblem problem = new DefaultProblem(context.getFile().getName(),
						Messages.format(UNUSED_MESSAGE, part.getNamespace().getFullyQualifiedName()),
						PhpProblemIdentifier.USE_STATEMENTS, new String[0], ProblemSeverities.Warning, sourceStart,
						sourceEnd, lineNumber, -1);

				context.getProblemReporter().reportProblem(problem);
			}

			return super.visit(s);
		}

