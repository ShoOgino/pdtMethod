	protected IType[] getFunctionReturnType(String className, String functionName, int offset) {
		ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration((SourceModule) sourceModule, null);
		InstanceContext context = new InstanceContext((SourceModule) sourceModule, moduleDeclaration, new PHPClassType(className));
		if (context != null) {
			MethodReturnTypeGoal goal = new MethodReturnTypeGoal(context, functionName, new IEvaluatedType[0]);
			PHPTypeInferencer typeInferencer = new PHPTypeInferencer();
			IEvaluatedType type = typeInferencer.evaluateType(goal);
			IModelElement[] modelElements = PHPMixinModel.getInstance().getClass(type.getTypeName());
			return modelElementsToTypes(modelElements);
		}
		return null;
	}

