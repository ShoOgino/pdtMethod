	public void apply(ICompletionReporter reporter) throws BadLocationException {

		ICompletionContext context = getContext();
		AbstractCompletionContext abstractContext = (AbstractCompletionContext) context;
		if (abstractContext.getPrefixWithoutProcessing().trim().length() == 0) {
			return;
		}
		boolean isUseContext = context instanceof UseNameContext;
		SourceRange replacementRange = getReplacementRange(abstractContext);

		IType[] types = getTypes(abstractContext);
		// now we compute type suffix in PHPCompletionProposalCollector
		String suffix = "";//$NON-NLS-1$ 
		String nsSuffix = getNSSuffix(abstractContext);
		int extraInfo = getExtraInfo();
		if ((abstractContext.getOffset() - abstractContext.getPrefix().length()
				- 1 >= 0)
				&& (abstractContext.getDocument().getChar(
						abstractContext.getOffset()
								- abstractContext.getPrefix().length() - 1) == '\'' || abstractContext
						.getDocument().getChar(
								abstractContext.getOffset()
										- abstractContext.getPrefix().length()
										- 1) == '\"')) {
			extraInfo = extraInfo | ProposalExtraInfo.NO_INSERT_NAMESPACE;
		}
		if ("namespace".equals(abstractContext.getPreviousWord(1))
				|| isUseContext) {
			extraInfo = extraInfo | ProposalExtraInfo.NO_INSERT_NAMESPACE;
		}

		for (IType type : types) {
			try {
				int flags = type.getFlags();
				boolean isNamespace = PHPFlags.isNamespace(flags);
				if (!isNamespace && isUseContext) {
					reporter.reportType(type, isNamespace ? nsSuffix : suffix,
							replacementRange, extraInfo
									| ProposalExtraInfo.CLASS_IN_NAMESPACE);
				} else {
					reporter.reportType(type, isNamespace ? nsSuffix : suffix,
							replacementRange, extraInfo);
				}
				if (addClassInNamespace && isNamespace) {
					if (PHPFlags.isNamespace(flags)) {
						IType[] subTypes = type.getTypes();
						for (IType subType : subTypes) {
							int subFlags = type.getFlags();
							reporter.reportType(
									subType,
									PHPFlags.isNamespace(subFlags) ? nsSuffix
											: suffix,
									replacementRange,
									extraInfo
											| ProposalExtraInfo.CLASS_IN_NAMESPACE);
						}
					}
				}
			} catch (ModelException e) {
				PHPCorePlugin.log(e);
			}
		}
		addAlias(reporter, suffix);

	}

