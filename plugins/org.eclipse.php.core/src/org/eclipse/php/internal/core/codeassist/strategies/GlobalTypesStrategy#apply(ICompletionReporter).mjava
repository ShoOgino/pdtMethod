	@Override
	public void apply(ICompletionReporter reporter) throws BadLocationException {

		ICompletionContext context = getContext();
		AbstractCompletionContext abstractContext = (AbstractCompletionContext) context;
		if (abstractContext.getCompletionRequestor() instanceof IPHPCompletionRequestor) {
			IPHPCompletionRequestor phpCompletionRequestor = (IPHPCompletionRequestor) abstractContext
					.getCompletionRequestor();
			if (phpCompletionRequestor.filter(CompletionFlag.STOP_REPORT_TYPE)) {
				return;
			}
		}
		if (StringUtils.isBlank(abstractContext.getPrefixWithoutProcessing())) {
			return;
		}
		boolean isUseContext = context instanceof UseNameContext
				&& ((UseNameContext) context).getType() != UseNameContext.TYPES.TRAIT;
		ISourceRange replacementRange = getReplacementRange(abstractContext);

		IType[] types = getTypes(abstractContext);
		// now we compute type suffix in PHPCompletionProposalCollector
		String suffix = ""; //$NON-NLS-1$
		String nsSuffix = getNSSuffix(abstractContext);
		int extraInfo = getExtraInfo();
		int beforeReplacementStart = abstractContext.getReplacementStart() - 1;
		if (beforeReplacementStart >= 0 && (abstractContext.getDocument().getChar(beforeReplacementStart) == '\''
				|| abstractContext.getDocument().getChar(beforeReplacementStart) == '\"')) {
			extraInfo = extraInfo | ProposalExtraInfo.NO_INSERT_USE;
		}
		if ("namespace".equals(abstractContext.getPreviousWord(1)) //$NON-NLS-1$
				|| isUseContext) {
			extraInfo = extraInfo | ProposalExtraInfo.NO_INSERT_USE;
		}
		String nsPrefix = null;
		if (context instanceof GroupedNamespaceNameContext
				&& ((GroupedNamespaceNameContext) context).isCursorInsideGroupStatement()) {
			nsPrefix = ((GroupedNamespaceNameContext) context).getGroupPrefixBeforeOpeningCurly();
		}

		for (IType type : types) {
			try {
				int flags = type.getFlags();
				boolean isNamespace = PHPFlags.isNamespace(flags);
				if (!isNamespace && isUseContext) {
					reporter.reportType(type, isNamespace ? nsSuffix : suffix, replacementRange,
							extraInfo | ProposalExtraInfo.CLASS_IN_NAMESPACE);
				} else if (nsPrefix != null && isNamespace) {
					reporter.reportType(type, nsPrefix, nsSuffix, replacementRange,
							extraInfo | ProposalExtraInfo.NO_INSERT_USE, 0);
				} else {
					reporter.reportType(type, isNamespace ? nsSuffix : suffix, replacementRange, extraInfo);
				}
			} catch (ModelException e) {
				PHPCorePlugin.log(e);
			}
		}
		addAlias(reporter, suffix);

	}

