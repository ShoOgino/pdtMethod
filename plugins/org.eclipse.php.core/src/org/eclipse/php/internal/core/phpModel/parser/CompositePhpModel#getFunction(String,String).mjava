	public PHPFunctionData getFunction(String fileName, String functionName) {
		List functions = new ArrayList();
		for (int i = 0; i < models.length; i++) {
			PHPFunctionData exactFunction = models[i].getFunction(fileName, functionName);
			// if filename is matching - just return the function.
			if (exactFunction != null && exactFunction.getUserData() != null && exactFunction.getUserData().getFileName().equals(fileName)) {
				return exactFunction;
			}
			// else collect all the functions to apply filter
			CodeData[] modelFunctions = models[i].getFunction(functionName);
			if (modelFunctions != null && modelFunctions.length > 0) {
				functions.addAll(Arrays.asList(modelFunctions));
			}
		}
		switch (functions.size()) {
			case 0:
				return null;
			case 1:
				return (PHPFunctionData) functions.get(0);
		}
		if (filter != null) {
			for (Iterator i = functions.iterator(); i.hasNext();) {
				PHPFunctionData function = (PHPFunctionData) i.next();
				if (filter.select(this, function, fileName)) {
					return function;
				}
			}
		}
		return (PHPFunctionData) functions.get(0);
	}

