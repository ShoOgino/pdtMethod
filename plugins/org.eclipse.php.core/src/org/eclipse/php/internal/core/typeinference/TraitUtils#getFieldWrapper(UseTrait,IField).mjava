	private static IField getFieldWrapper(UseTrait useTrait, IField field) {
		// TraitAliasObject tao = useTrait.getAliasMap().get(
		// field.getElementName());
		// TraitPrecedenceObject tpo = useTrait.getPrecedenceMap().get(
		// field.getElementName());
		// if (tpo != null) {
		// String fullName = PHPModelUtils.getFullName(field
		// .getDeclaringType());
		// if (!fullName.equals(tpo.traitName) || tao == null
		// || tao.newMethodName == null) {
		// return null;
		// }
		// } else {
		//
		// }
		// if (tao != null) {
		// field = new FieldWrapper(field, tao.newMethodVisibility,
		// tao.newMethodName);
		// }
		// return field;
		String fieldName = field.getElementName();
		if (fieldName.startsWith("$")) {
			fieldName = fieldName.substring(1);
		}
		TraitAliasObject tao = useTrait.getAliasMap().get(fieldName);
		TraitPrecedenceObject tpo = useTrait.getPrecedenceMap().get(fieldName);
		String fullName = PHPModelUtils.getFullName(field.getDeclaringType());
		if (tao != null
				&& (tao.traitName == null || fullName.equals(tao.traitName))) {
			field = new FieldWrapper(field, tao.newMethodVisibility,
					tao.newMethodName);
			return field;
		}
		if (tpo != null) {
			if (!fullName.equals(tpo.traitName)) {
				return null;
			}
			// if (!fullName.equals(tpo.traitName)
			// && (tao == null || (fullName.equals(tao.traitName)
			// && tao.newMethodName != null && !fullName
			// .equals(tao.newMethodName)))) {
			// return null;
			// }
		} else {

		}
		return field;
	}

