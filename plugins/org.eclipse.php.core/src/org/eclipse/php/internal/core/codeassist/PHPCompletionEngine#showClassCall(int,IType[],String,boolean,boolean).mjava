	protected void showClassCall(int offset, IType[] className, String prefix, boolean isInstanceOf, boolean addVariableDollar) {
		if (className == null) {
			return;
		}

		this.setSourceRange(offset - prefix.length(), offset);
		
		int relevanceMethod = RELEVANCE_METHOD;

		for (IType type : className) {
			if (!prefix.startsWith(DOLLAR)) {
				IMethod[] methods = CodeAssistUtils.getClassMethods(type, prefix, false);
				for (IModelElement method : methods) {
					try {
						if ((((IMethod)method).getFlags() & IPHPModifiers.Internal) == 0) {
							reportMethod((IMethod) method, relevanceMethod--);
						}
					} catch (ModelException e) {
						Logger.logException(e);
					}
				}
			}

			IModelElement[] fields = CodeAssistUtils.getClassFields(type, prefix, false, true);
			int relevanceVar = RELEVANCE_VAR;
			int relevanceConst = RELEVANCE_CONST;
			for (IModelElement element : fields) {
				IField field = (IField) element;
				try {
					if ((field.getFlags() & Modifiers.AccConstant) != 0) {
						reportField(field, relevanceConst--, true);
					} else {
						reportField(field, relevanceVar--, true);
					}
				} catch (ModelException e) {
					Logger.logException(e);
				}
			}
		}
	}

