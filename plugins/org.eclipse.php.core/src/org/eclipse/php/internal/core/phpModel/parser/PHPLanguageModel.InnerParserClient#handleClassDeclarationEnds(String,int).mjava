		public void handleClassDeclarationEnds(String className, int endPosition) {
			if (classesList.size() > 0) {
				PHPCodeDataFactory.PHPClassDataImp classData = (PHPCodeDataFactory.PHPClassDataImp) classesList.get(classesList.size() - 1);
				if (classData.getName().equals(className)) {
					PHPClassConstData[] consts = new PHPClassConstData[classConstsList.size()];
					classConstsList.toArray(consts);
					Arrays.sort(consts);

					PHPClassVarData[] vars = new PHPClassVarData[classVarsList.size()];
					classVarsList.toArray(vars);
					Arrays.sort(vars);

					PHPFunctionData[] func = new PHPFunctionData[classFunctionsList.size()];
					classFunctionsList.toArray(func);
					Arrays.sort(func);

					for (int i = 0; i < consts.length; ++i) {
						((PHPCodeDataFactory.PHPClassConstDataImp) consts[i]).setContainer(classData);
					}
					for (PHPClassVarData element : vars) {
						((PHPCodeDataFactory.PHPClassVarDataImp) element).setContainer(classData);
					}
					for (PHPFunctionData element : func) {
						((PHPCodeDataFactory.PHPFunctionDataImp) element).setContainer(classData);
					}

					classData.setConsts(consts);
					classData.setFunctions(func);
					classData.setVars(vars);
				}
			}

			classConstsList.clear();
			classVarsList.clear();
			classFunctionsList.clear();

			this.className = "";
		}

