	private static PHPFunctionData deserializeFunctionData(DataInputStream inputStream) throws IOException {
		String name = readString(inputStream);
		int modifier = inputStream.readInt();
		PHPDocBlock docBlock = deserializeDocBlock(inputStream);
		UserData userData = deserializeUserData(inputStream);
		PHPFunctionData.PHPFunctionParameter[] parameter = deserializeFunctionsParameterArray(inputStream);
		String returnType = readString(inputStream);
		PHPFunctionData rv = PHPCodeDataFactory.createPHPFuctionData(name, modifier, docBlock, userData, parameter, returnType);
		for (PHPFunctionParameter element : parameter) {
			element.setContainer(rv);
		}
		return rv;
	}

