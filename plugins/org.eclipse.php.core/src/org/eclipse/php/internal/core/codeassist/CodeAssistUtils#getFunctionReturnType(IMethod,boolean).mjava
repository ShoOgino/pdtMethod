	public static IType[] getFunctionReturnType(IMethod method, boolean determineObjectFromOtherFile) {
		PHPTypeInferencer typeInferencer = new PHPTypeInferencer();
		
		IEvaluatedType classType = null;
		if (method.getDeclaringType() != null) {
			classType = new PHPClassType(method.getDeclaringType().getElementName());
		}
		org.eclipse.dltk.core.ISourceModule sourceModule = method.getSourceModule();
		ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(sourceModule, null);
		BasicContext sourceModuleContext = new BasicContext(sourceModule, moduleDeclaration);
		
		InstanceContext instanceContext = new InstanceContext(sourceModuleContext, classType);
		PHPDocMethodReturnTypeGoal phpDocGoal = new PHPDocMethodReturnTypeGoal(instanceContext, method.getElementName());
		IEvaluatedType evaluatedType = typeInferencer.evaluateTypePHPDoc(phpDocGoal, 3000);
		
		IModelElement[] modelElements = PHPTypeInferenceUtils.getModelElements(evaluatedType, sourceModuleContext, !determineObjectFromOtherFile);
		if (modelElements != null) {
			return modelElementsToTypes(modelElements);
		}
		
		MethodElementReturnTypeGoal methodGoal = new MethodElementReturnTypeGoal(method);
		evaluatedType = typeInferencer.evaluateType(methodGoal);
		modelElements = PHPTypeInferenceUtils.getModelElements(evaluatedType, sourceModuleContext, !determineObjectFromOtherFile);
		if (modelElements != null) {
			return modelElementsToTypes(modelElements);
		}
		return null;
	}

