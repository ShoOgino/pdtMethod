	private static void originalPlaceMatchingBlanks(
			final IStructuredDocument document, final StringBuffer result,
			final int lineNumber, final int forOffset, boolean enterKeyPressed,
			final int indentationBaseLineIndex, final IRegion lastNonEmptyLine,
			final String blanks) throws BadLocationException {
		int lastNonEmptyLineIndex;
		final int lastLineEndOffset = lastNonEmptyLine.getOffset()
				+ lastNonEmptyLine.getLength();
		int offset;
		if (forOffset < lastLineEndOffset) {
			offset = forOffset;
		} else {
			offset = lastLineEndOffset;
		}
		if (shouldIndent(document, offset, lineNumber)) {
			addIndent(document, result);
		} else {

			lastNonEmptyLineIndex = lineNumber;
			if (!enterKeyPressed && lastNonEmptyLineIndex > 0) {
				lastNonEmptyLineIndex--;
			}
			while (lastNonEmptyLineIndex > 0) {
				IRegion lineInfo = document
						.getLineInformation(lastNonEmptyLineIndex);
				String content = document.get(lineInfo.getOffset(),
						lineInfo.getLength());
				if (content.trim().length() > 0) {
					break;
				}
				lastNonEmptyLineIndex--;
			}
			if (!isEndOfStatement(document, offset, lastNonEmptyLineIndex)) {
				// this line is one of multi line statement
				if (indentationBaseLineIndex == lastNonEmptyLineIndex) {
					// this only deal with "$a = 'aaa'.|","|" is the
					// cursor
					// position when we press enter key
					placeStringIndentation(document, lastNonEmptyLineIndex,
							result);
				} else {
					// in multi line statement,when user press enter
					// key,
					// we use the same indentation of the last non-empty
					// line.
					result.setLength(result.length() - blanks.length());
					IRegion lineInfo = document
							.getLineInformation(lastNonEmptyLineIndex);
					result.append(FormatterUtils.getLineBlanks(document,
							lineInfo));
				}
			}

		}
	}

