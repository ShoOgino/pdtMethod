	/**
	 * This function returns statement text depending on the current offset. It
	 * searches backwards (starting from offset - 1) until it finds ';', '{' or
	 * '}'.
	 * 
	 * @param offset
	 *            The absolute offset in the document
	 * @param sdRegion
	 *            Structured document region of the offset
	 * @param removeComments
	 *            Flag determining whether to remove comments in the resulted
	 *            text sequence
	 * 
	 * @return text sequence of the statement, cannot be null
	 */
	public static TextSequence getStatement(int offset,
			IStructuredDocumentRegion sdRegion, boolean removeComments) {

		Region statementRegion = getStatementRegion(offset, sdRegion, true);

		TextSequence textSequence = TextSequenceUtilities.createTextSequence(
				sdRegion, statementRegion.getOffset(),
				offset - statementRegion.getOffset());

		if (removeComments) {
			textSequence = removeComments(textSequence);
		}

		// remove spaces from start.
		textSequence = textSequence.subTextSequence(
				readForwardSpaces(textSequence, 0), textSequence.length());
		return textSequence;
	}

