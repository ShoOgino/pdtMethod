	@Override
	public boolean visit(ModuleDeclaration s) throws Exception {
		if (s instanceof PHPModuleDeclaration) {
			// See also VariableReferenceEvaluator.init().
			varComments.addAll(((PHPModuleDeclaration) s).getVarComments());
			docBlocks.addAll(((PHPModuleDeclaration) s).getPHPDocBlocks());
			declarationScope = new ArrayDeque<Map<String, ISourceNode>>();
			typeDeclarations = new ArrayDeque<ISourceNode>();
			typeDeclarations.addLast(s);
			declarationScope.addLast(new HashMap<String, ISourceNode>());
		}
		boolean res = super.visit(s);
		INamespaceResolver resolver = (INamespaceResolver) context.get(NAMESPACE_RESOLVER);
		if (resolver == null) {
			resolver = PHPToolkitUtil.getNamespaceResolver(sourceModule.getScriptProject().getProject());
			context.set(NAMESPACE_RESOLVER, resolver);
		}
		expectedNamespace = resolver.resolveNamespace(sourceModule.getParent().getPath());
		expectedTypeName = PHPModelUtils.getTypeNameByFileName(sourceModule);
		return res;
	}

