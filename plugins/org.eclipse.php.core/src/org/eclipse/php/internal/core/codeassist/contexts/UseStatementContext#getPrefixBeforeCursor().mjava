	/**
	 * When isCursorInsideGroupStatement() is true, only the non-null prefix
	 * part after '{' is returned, otherwise same content as getPrefix() is
	 * returned. For example, this method would return <code>"\C\D"</code> with
	 * <code>"use X\Y\ { A, B, \C\D| };"</code> or with
	 * <code>"use \X\Y\ { A, B, \C\D| };"</code>.
	 * 
	 * @return
	 */
	@SuppressWarnings("null")
	@NonNull
	public String getPrefixBeforeCursor() {
		if (hasWhitespaceBeforeCursor()) {
			return ""; //$NON-NLS-1$
		}
		int statementLength = longestPrefixTextBeforeCursor.length();
		int prefixEnd = PHPTextSequenceUtilities.readBackwardSpaces(longestPrefixTextBeforeCursor, statementLength); // read
		// whitespace
		int prefixStart = PHPTextSequenceUtilities.readIdentifierStartIndex(getCompanion().getPHPVersion(),
				longestPrefixTextBeforeCursor, prefixEnd, true);
		return prefixStart < 0 ? "" : longestPrefixTextBeforeCursor.subSequence(prefixStart, prefixEnd).toString(); //$NON-NLS-1$
	}

