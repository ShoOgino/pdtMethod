	/**
	 * return the code data (class or function) that wrap the position.
	 *
	 * @param fileData The file data to search in.
	 * @param position The position in the document.
	 * @return return the code data (class or function) that wrap the position or null.
	 */
	public static CodeData getCodeData(PHPFileData fileData, int position) {
		if (position < 0 || fileData == null) {
			return null;
		}
		// check if the position is in one of the classes.
		PHPClassData[] classes = fileData.getClasses();
		PHPClassData classRv = null;
		PHPFunctionData functionRv = null;
		for (PHPClassData element : classes) {
			if (contains(element.getUserData(), position)) {
				if (classRv == null) {
					classRv = element;
				} else {
					// if the old class we found includes the new one then the
					// new one is more relevant
					if (contains(classRv.getUserData(), element.getUserData().getStartPosition())) {
						classRv = element;
						functionRv = null;
					} else {
						continue;
					}
				}
				// the position is in the class check if it is in one of its methods
				PHPFunctionData[] functions = element.getFunctions();
				for (PHPFunctionData element2 : functions) {
					if (contains(element2.getUserData(), position)) {
						if (functionRv == null) {
							functionRv = element2;
						} else {
							// if the old function we found includes the new one
							// then the new one is more relevant
							if (contains(functionRv.getUserData(), element2.getUserData().getStartPosition())) {
								functionRv = element2;
							}
						}
					}
				}
			}
		}

		// check if the position is in one of the functions.
		PHPFunctionData[] functions = fileData.getFunctions();
		for (PHPFunctionData element : functions) {
			if (contains(element.getUserData(), position)) {
				if (functionRv == null) {
					functionRv = element;
				} else {
					// if the old function we found includes the new one then
					// the new one is more relevant
					if (contains(functionRv.getUserData(), element.getUserData().getStartPosition())) {
						functionRv = element;
					}
				}
			}
		}
		if (functionRv != null) {
			return functionRv;
		}
		if (classRv != null) {
			return classRv;
		}
		return null;
	}

