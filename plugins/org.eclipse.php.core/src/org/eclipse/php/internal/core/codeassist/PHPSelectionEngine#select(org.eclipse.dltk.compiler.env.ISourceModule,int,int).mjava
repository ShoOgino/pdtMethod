	public IModelElement[] select(
			org.eclipse.dltk.compiler.env.ISourceModule sourceUnit, int offset,
			int end) {

		if (!PHPCorePlugin.toolkitInitialized) {
			return EMPTY;
		}

		if (end < offset) {
			end = offset + 1;
		}

		ISourceModule sourceModule = (ISourceModule) sourceUnit
				.getModelElement();
		phpVersion = ProjectOptions.getPhpVersion(sourceModule
				.getScriptProject().getProject());

		// First, try to resolve using AST (if we have parsed it well):
		try {
			IModelElement[] elements = internalASTResolve(sourceModule, offset,
					end);
			if (elements != null) {
				Collection<IModelElement> filtered = PHPModelUtils
						.filterElements(sourceModule, Arrays.asList(elements));
				return (IModelElement[]) filtered
						.toArray(new IModelElement[filtered.size()]);
			}
		} catch (Exception e) {
			PHPCorePlugin.log(e);
		}

		// Use the old way by playing with document & buffer:
		IStructuredDocument document = null;
		IStructuredModel structuredModel = null;
		try {
			IFile file = (IFile) sourceUnit.getModelElement().getResource();
			if (file != null) {
				if (file.exists()) {
					structuredModel = StructuredModelManager.getModelManager()
							.getExistingModelForRead(file);
					if (structuredModel != null) {
						document = structuredModel.getStructuredDocument();
					} else {
						document = StructuredModelManager.getModelManager()
								.createStructuredDocumentFor(file);
					}
				} else {
					document = StructuredModelManager.getModelManager()
							.createNewStructuredDocumentFor(file);
					document.set(sourceUnit.getSourceContents());
				}
			}
		} catch (Exception e) {
			PHPCorePlugin.log(e);
		} finally {
			if (structuredModel != null) {
				structuredModel.releaseFromRead();
			}
		}

		if (document != null) {
			IModelElement[] elements = internalResolve(document, sourceModule,
					offset, end);
			if (elements != null) {
				Collection<IModelElement> filtered = PHPModelUtils
						.filterElements(sourceModule, Arrays.asList(elements));
				return (IModelElement[]) filtered
						.toArray(new IModelElement[filtered.size()]);
			}
		}

		return EMPTY;
	}

