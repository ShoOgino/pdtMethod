	/**
	 * Returns the registered Java like extensions.
	 */
	public static char[][] getPHPLikeExtensions() {
		if (PHP_LIKE_EXTENSIONS == null) {
			// TODO (jerome) reenable once JDT UI supports other file extensions
			// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=71460)
			if (!ENABLE_PHP_LIKE_EXTENSIONS) {
				PHP_LIKE_EXTENSIONS = new char[][] { "php".toCharArray() }; //$NON-NLS-1$
			} else {
				IContentType javaContentType = Platform.getContentTypeManager().getContentType(PHPNature.ID);
				Set<String> fileExtensions = new HashSet<>();
				// content types derived from java content type should be
				// included
				// (https://bugs.eclipse.org/bugs/show_bug.cgi?id=121715)
				IContentType[] contentTypes = Platform.getContentTypeManager().getAllContentTypes();
				for (int i = 0, length = contentTypes.length; i < length; i++) {
					if (contentTypes[i].isKindOf(javaContentType)) { // note
						// that
						// javaContentType.isKindOf(javaContentType)
						// ==
						// true
						String[] fileExtension = contentTypes[i].getFileSpecs(IContentType.FILE_EXTENSION_SPEC);
						for (int j = 0, length2 = fileExtension.length; j < length2; j++) {
							fileExtensions.add(fileExtension[j]);
						}
					}
				}
				int length = fileExtensions.size();
				// note that file extensions contains "java" as it is defined in
				// JDT Core's plugin.xml
				char[][] extensions = new char[length][];
				extensions[0] = "php".toCharArray(); // ensure //$NON-NLS-1$
														// that "java" is
				// first
				int index = 1;
				Iterator<String> iterator = fileExtensions.iterator();
				while (iterator.hasNext()) {
					String fileExtension = iterator.next();
					if ("php".equals(fileExtension)) {
						continue;
					}
					extensions[index++] = fileExtension.toCharArray();
				}
				PHP_LIKE_EXTENSIONS = extensions;
			}
		}
		return PHP_LIKE_EXTENSIONS;
	}

