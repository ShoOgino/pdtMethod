		/**
		 * Searches for the given element in the context and reports if the
		 * element is known ({@link #RES_NAME_FOUND}), unknown (
		 * {@link #RES_NAME_UNKNOWN}) or if its name conflicts (
		 * {@link #RES_NAME_CONFLICT}) with an other element.
		 * 
		 * @param qualifier
		 *            The qualifier of the element, can be package or the
		 *            qualified name of a type
		 * @param name
		 *            The simple name of the element; either a type, method or
		 *            field name or * for on-demand imports.
		 * @param kind
		 *            The kind of the element. Can be either {@link #KIND_TYPE},
		 *            {@link #KIND_STATIC_CONSTANT} or
		 *            {@link #KIND_STATIC_METHOD}. Implementors should be
		 *            prepared for new, currently unspecified kinds and return
		 *            {@link #RES_NAME_UNKNOWN} by default.
		 * @return Returns the result of the lookup. Can be either
		 *         {@link #RES_NAME_FOUND}, {@link #RES_NAME_UNKNOWN} or
		 *         {@link #RES_NAME_CONFLICT}.
		 */
		public abstract int findInContext(NamespaceDeclaration namespace, String qualifier, String name, int kind);

