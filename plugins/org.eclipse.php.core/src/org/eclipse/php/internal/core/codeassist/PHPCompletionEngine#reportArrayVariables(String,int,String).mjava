	protected void reportArrayVariables(String arrayName, int offset, String prefix) {
		this.setSourceRange(offset - prefix.length(), offset);

		int relevanceVar = RELEVANCE_VAR;

		if (arrayName.equals("$_SERVER") || arrayName.equals("$HTTP_SERVER_VARS")) { //$NON-NLS-1$ //$NON-NLS-2$
			reportVariables(serverVaraibles, prefix, relevanceVar, true);
			return;
		}
		if (arrayName.equals("$_SESSION") || arrayName.equals("$HTTP_SESSION_VARS")) { //$NON-NLS-1$ //$NON-NLS-2$
			reportVariables(sessionVariables, prefix, relevanceVar, true);
			return;
		}
		if (arrayName.equals("$GLOBALS")) { //$NON-NLS-1$
			if (prefix.length() == 0) {
				prefix = DOLLAR;
			}
			IModelElement[] elements = CodeAssistUtils.getGlobalFields(sourceModule, prefix, requestor.isContextInformationMode());
			for (IModelElement element : elements) {
				IField field = (IField) element;
				reportField(field, relevanceVar--, true);
			}

			reportVariables(phpVariables, prefix, relevanceVar, true);
			return;
		}
	}

