	@Override
	public boolean isValid(@NonNull ISourceModule sourceModule, int offset, CompletionRequestor requestor) {
		PHPVersion phpVersion = ProjectOptions.getPHPVersion(sourceModule);
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}
		if (getTriggerType() != Trigger.CLASS) {
			return false;
		}

		// if method parameter context, return false
		FunctionParameterDefaultValueContext parameterDefaultValueContext = new FunctionParameterDefaultValueContext();
		parameterDefaultValueContext.init(getCompanion());
		if (parameterDefaultValueContext.isValid(sourceModule, offset, requestor)) {
			this.isFunctionParameterContext = true;
		}

		int elementStart = getElementStart();
		int lhsIndex = elementStart - "parent".length() //$NON-NLS-1$
				- getTriggerType().getName().length();
		if (lhsIndex >= 0) {
			TextSequence statementText = getStatementText();
			String parentText = statementText.subSequence(lhsIndex, elementStart - getTriggerType().getName().length())
					.toString();

			if (parentText.equals("parent") //$NON-NLS-1$
					|| (PHPVersion.PHP5_4.isLessThan(phpVersion) && parentText.equalsIgnoreCase("parent"))) { //$NON-NLS-1$
				isParent = isDirectParent = true;
			}
		}

		lhsIndex = elementStart - "self".length() //$NON-NLS-1$
				- getTriggerType().getName().length();
		if (lhsIndex >= 0) {
			TextSequence statementText = getStatementText();
			String parentText = statementText.subSequence(lhsIndex, elementStart - getTriggerType().getName().length())
					.toString();
			if (parentText.equals("self") //$NON-NLS-1$
					|| (PHPVersion.PHP5_4.isLessThan(phpVersion) && parentText.equalsIgnoreCase("self"))) { //$NON-NLS-1$
				isSelf = isDirectSelf = true;
			}
		}

		if (!isParent || !isSelf) {
			IType[] types = getLhsTypes();
			if (ArrayUtils.isNotEmpty(types)) {
				ModuleDeclaration moduleDeclaration = getCompanion().getModuleDeclaration();
				if (moduleDeclaration != null) {
					IContext context = ASTUtils.findContext(sourceModule, moduleDeclaration, offset);
					if (context instanceof MethodContext) {
						IEvaluatedType instanceType = ((MethodContext) context).getInstanceType();
						if (instanceType instanceof PHPClassType) {
							PHPClassType classType = (PHPClassType) instanceType;
							String typeName = classType.getTypeName();
							String namespace = classType.getNamespace();
							if (namespace != null && namespace.length() > 0) {
								int i = typeName.lastIndexOf(NamespaceReference.NAMESPACE_SEPARATOR);
								if (i != -1) {
									typeName = typeName.substring(i + 1);
								}
								if (namespace.charAt(0) == NamespaceReference.NAMESPACE_SEPARATOR) {
									namespace = namespace.substring(1);
								}
								IType currentNamespace = PHPModelUtils.getCurrentNamespace(types[0]);
								if (!isParent) {
									if (currentNamespace != null && types.length >= 2) {
										IType parentType = types[1];
										isParent = namespace.equals(currentNamespace.getElementName())
												&& typeName.equals(parentType.getElementName());
									}
								}
								if (!isSelf) {
									if (currentNamespace != null) {
										isSelf = namespace.equals(currentNamespace.getElementName())
												&& typeName.equals(types[0].getElementName());
									}
								}
							} else {
								if (!isParent) {
									if (types.length >= 2) {
										IType parentType = types[1];
										isParent = typeName.equals(parentType.getElementName());
									}
								}
								if (!isSelf) {
									isSelf = typeName.equals(types[0].getElementName());
								}
							}
						}
					}
				}
			}
		}

		return true;
	}

