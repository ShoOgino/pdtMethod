		@Override
		public void preferencesEventOccured(PreferencesPropagatorEvent event) {
			String tags = preferencesSupport.getProjectSpecificPreferencesValue(PHPCoreConstants.TASK_TAGS, null,
					getProject());
			String priorities = preferencesSupport.getProjectSpecificPreferencesValue(PHPCoreConstants.TASK_PRIORITIES,
					null, getProject());
			String caseSensitive = preferencesSupport
					.getProjectSpecificPreferencesValue(PHPCoreConstants.TASK_CASE_SENSITIVE, null, getProject());
			String newValue = (String) event.getNewValue();
			// if project settings are not fully updated (i.e. user newly
			// enabled project task tags settings), use workspace settings
			if (tags == null || priorities == null || caseSensitive == null || newValue == null) {
				tags = preferencesSupport.getWorkspacePreferencesValue(PHPCoreConstants.TASK_TAGS);
				priorities = preferencesSupport.getWorkspacePreferencesValue(PHPCoreConstants.TASK_PRIORITIES);
				caseSensitive = preferencesSupport.getWorkspacePreferencesValue(PHPCoreConstants.TASK_CASE_SENSITIVE);
				newValue = priorities;
			}
			if (StringUtils.occurrencesOf(tags, ',') == StringUtils.occurrencesOf(newValue, ',')) {
				TaskTag[] taskTags = getTagsAndPropertiesFrom(tags, newValue);
				TaskTagsEvent taskEvent = new TaskTagsEvent(TaskTagsProvider.this, getProject(), taskTags,
						PHPCoreConstants.ENABLED.equals(caseSensitive));
				notifyTaskPriorityChange(taskEvent);
			}
		}

