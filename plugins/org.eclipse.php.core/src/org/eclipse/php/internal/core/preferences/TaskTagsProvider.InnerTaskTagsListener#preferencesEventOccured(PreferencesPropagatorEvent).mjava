		public void preferencesEventOccured(PreferencesPropagatorEvent event) {
			String newValue = (String) event.getNewValue();
			if (newValue == null) {
				newValue = preferencesSupport
						.getWorkspacePreferencesValue(PHPCoreConstants.TASK_TAGS);
			}
			// Check that the other value are synchronized at this stage and
			// send an event only if they are.
			String priorities = preferencesSupport
					.getProjectSpecificPreferencesValue(
							PHPCoreConstants.TASK_PRIORITIES, null,
							getProject());
			if (priorities == null) {
				priorities = preferencesSupport
						.getWorkspacePreferencesValue(PHPCoreConstants.TASK_PRIORITIES);
			}
			if (StringUtils.occurrencesOf(priorities, ',') == StringUtils
					.occurrencesOf(newValue, ',')) {
				TaskTag[] taskTags = getTagsAndPropertiesFrom(newValue,
						priorities);
				IProject eventProject = (event.getSource() != null && event
						.getSource() instanceof IProject) ? (IProject) event
						.getSource() : null;
				TaskTagsEvent taskEvent = new TaskTagsEvent(
						TaskTagsProvider.this, eventProject, taskTags,
						getProjectTagsCaseSensitive(getProject()));
				notifyTaskTagChange(taskEvent);
			}
		}

