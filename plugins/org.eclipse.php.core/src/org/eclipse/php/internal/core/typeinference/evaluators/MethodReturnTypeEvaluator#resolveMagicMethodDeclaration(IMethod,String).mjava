	/**
	 * Resolve magic methods defined by the @method tag
	 */
	private void resolveMagicMethodDeclaration(IMethod method,
			String methodName) {
		final IModelElement parent = method.getParent();
		if (parent.getElementType() != IModelElement.TYPE) {
			return;
		}

		IType type = (IType) parent;
		final PHPDocBlock docBlock = PHPModelUtils.getDocBlock(type);
		if (docBlock == null) {
			return;
		}
		IType currentNamespace = PHPModelUtils.getCurrentNamespace(type);
		for (PHPDocTag tag : docBlock.getTags(PHPDocTag.METHOD)) {
			final Collection<String> typeNames = PHPEvaluationUtils
					.getTypeBinding(methodName, tag);
			for (String typeName : typeNames) {
				if (typeName.trim().isEmpty()) {
					continue;
				}
				IEvaluatedType evaluatedType = PHPEvaluationUtils
						.extractArrayType(typeName, currentNamespace,
								tag.sourceStart());
				if (evaluatedType != null) {
					evaluated.add(evaluatedType);
				} else {
					IEvaluatedType resolved = PHPSimpleTypes
							.fromString(typeName);
					if (resolved == null) {
						resolved = new PHPClassType(typeName);
					}
					evaluated.add(resolved);
				}
			}
		}
	}

