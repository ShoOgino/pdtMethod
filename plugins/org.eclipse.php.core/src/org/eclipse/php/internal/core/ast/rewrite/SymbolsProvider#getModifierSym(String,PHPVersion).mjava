	/**
	 * Returns the sym integer for the given modifier ('public', 'final',
	 * 'protected' etc.).
	 * 
	 * @param modifier
	 *            The modifier string
	 * @param phpVersion
	 *            The relevant PHP version.
	 * @return The sym id or the ERROR_SYMBOL.sym in case of an error.
	 */
	public static int getModifierSym(String modifier, PHPVersion phpVersion) {
		if (PHPVersion.PHP5_3 == phpVersion) {
			if (modifier.equals("public")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_PUBLIC;
			} else if (modifier.equals("private")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_PRIVATE;
			} else if (modifier.equals("protected")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_PROTECTED;
			} else if (modifier.equals("static")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_STATIC;
			} else if (modifier.equals("abstract")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_ABSTRACT;
			} else if (modifier.equals("final")) {
				return org.eclipse.php.internal.core.ast.scanner.php53.ParserConstants.T_FINAL;
			}
		} else if (PHPVersion.PHP5 == phpVersion) {
			if (modifier.equals("public")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_PUBLIC;
			} else if (modifier.equals("private")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_PRIVATE;
			} else if (modifier.equals("protected")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_PROTECTED;
			} else if (modifier.equals("static")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_STATIC;
			} else if (modifier.equals("abstract")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_ABSTRACT;
			} else if (modifier.equals("final")) {
				return org.eclipse.php.internal.core.ast.scanner.php5.ParserConstants.T_FINAL;
			}
		} else if (PHPVersion.PHP4 == phpVersion) {
			if (modifier.equals("static")) {
				return ParserConstants.T_STATIC;
			}
		}
		return ERROR_SYMBOL.sym;
	}

