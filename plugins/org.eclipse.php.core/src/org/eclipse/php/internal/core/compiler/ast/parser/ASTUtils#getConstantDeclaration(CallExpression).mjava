	/**
	 * Creates declaration of constant for the given call expression in case if
	 * it represents define() call expression.
	 * 
	 * @param callExpression
	 *            Call expression
	 * @return constant declaration if the given call expression represents
	 *         define() expression, otherwise <code>null</code>
	 */
	public static FieldDeclaration getConstantDeclaration(
			CallExpression callExpression) {
		String name = callExpression.getName();
		if ("define".equalsIgnoreCase(name)) { //$NON-NLS-1$
			CallArgumentsList args = callExpression.getArgs();
			if (args != null && args.getChilds() != null) {
				ASTNode argument = (ASTNode) args.getChilds().get(0);
				if (argument instanceof Scalar) {
					String constant = ASTUtils.stripQuotes(((Scalar) argument)
							.getValue());
					FieldDeclaration fieldDeclaration = new FieldDeclaration(
							constant, argument.sourceStart(), argument
									.sourceEnd(), callExpression.sourceStart(),
							callExpression.sourceEnd());
					fieldDeclaration.setModifier(Modifiers.AccGlobal
							| Modifiers.AccConstant | Modifiers.AccFinal);
					return fieldDeclaration;
				}
			}
		}
		return null;
	}

