	/**
	 * Returns whether this type is subtype compatible with the given type.
	 * 
	 * @param type the type to check compatibility against
	 * @return <code>true</code> if this type is subtype compatible with the
	 * given type, and <code>false</code> otherwise
	 */
	public boolean isSubTypeCompatible(ITypeBinding otherType) {
		if (otherType instanceof TypeBinding) {
			if (element instanceof IType) {
				try {
					IModelElement otherElement = ((TypeBinding) otherType).element;
					if (otherElement instanceof IType) {
						ITypeHierarchy supertypeHierarchy = ((IType) element).newSupertypeHierarchy(new NullProgressMonitor());
						return supertypeHierarchy.contains((IType) otherElement);
					}
				} catch (ModelException e) {
					Logger.logException(e);
				}
			}
		}
		return false;
	}

