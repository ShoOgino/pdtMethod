	private void initialize(Program root, NamespaceDeclaration namespace, String[] importOrder,
			Map<NamespaceDeclaration, Boolean> restoreExistingImports) {
		this.packageEntries.put(namespace, new ArrayList<>(20));
		this.importsCreated.put(namespace, new ArrayList<>());
		this.flags.put(namespace, 0);

		this.replaceRange.put(namespace, evaluateReplaceRange(root, namespace));
		if (restoreExistingImports.get(namespace)) {
			addExistingImports(root, namespace);
		} else {
			// Currently does not support organize function and constant imports
			// yet, so do not remove them for now
			addExistingFunctionAndConstantImports(root, namespace);
		}

		PackageEntry[] order = new PackageEntry[importOrder.length];
		for (int i = 0; i < order.length; i++) {
			String curr = importOrder[i];
			order[i] = new PackageEntry(curr, curr); // normal import group
		}

		addPreferenceOrderHolders(this.packageEntries.get(namespace), order);
	}

