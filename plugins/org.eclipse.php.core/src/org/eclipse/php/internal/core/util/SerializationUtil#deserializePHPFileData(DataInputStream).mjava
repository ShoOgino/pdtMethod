	private static PHPFileData deserializePHPFileData(DataInputStream inputStream) throws IOException {
		String fileName = readString(inputStream);
		currentFileName = fileName;
		UserData userData = deserializeUserData(inputStream);
		PHPClassData[] classes = deserializeClassDataArray(inputStream);
		PHPFunctionData[] functions = deserializeFunctionDataArray(inputStream);
		PHPVariablesTypeManager variablesTypeManager = deserializeVariableTypeManager(inputStream);
		PHPIncludeFileData[] includeFiles = deserializeIncludeDataArray(inputStream);
		PHPConstantData[] constants = deserializeConstantDataArray(inputStream);
		IPHPMarker[] markers = deserializeMarkersDataArray(inputStream);
		PHPBlock[] phpBlocks = deserializeBlockArray(inputStream);
		PHPDocBlock docBlock = deserializeDocBlock(inputStream);
		long lastModified = inputStream.readLong();
		PHPFileData data = PHPCodeDataFactory.createPHPFileData(fileName, userData, classes, functions, variablesTypeManager, includeFiles, constants, markers, phpBlocks, docBlock, lastModified);
		for (PHPClassData element : classes) {
			element.setContainer(data);
		}
		for (PHPFunctionData element : functions) {
			element.setContainer(data);
		}
		for (PHPIncludeFileData element : includeFiles) {
			element.setContainer(data);
		}
		for (PHPConstantData element : constants) {
			element.setContainer(data);
		}

		return data;
	}

