	/**
	 * Finds the class files for the given java file and returns them.
	 * <p>
	 * This is a hook for subclasses which want to implement a different strategy
	 * for finding the class files. The default strategy is to query the class files
	 * for the source file name attribute. If this attribute is missing then all
	 * class files in the corresponding output folder are exported.
	 * </p>
	 * <p>
	 * A CoreException can be thrown if an error occurs during this operation. The
	 * <code>CoreException</code> will not stop the export process but adds the
	 * status object to the status of the export runnable.
	 * </p>
	 * 
	 * @param javaFile
	 *            a .java file
	 * @return an array with class files or <code>null</code> to used the default
	 *         strategy
	 * @throws CoreException
	 *             if find failed, e.g. I/O error or resource out of sync
	 * @see IJarExportRunnable#getStatus()
	 */
	public IFile[] findClassfilesFor(IFile javaFile) throws CoreException {
		return null;
	}

