	protected IType[] getFunctionReturnType(IType type, String functionName) {
		try {
			IMethod[] classMethod = PHPModelUtils.getClassMethod(type, functionName, null);
			if (classMethod.length > 0) {
				MethodElementReturnTypeGoal goal = new MethodElementReturnTypeGoal(classMethod[0]);
				PHPTypeInferencer typeInferencer = new PHPTypeInferencer();
				IEvaluatedType evaluatedType = typeInferencer.evaluateType(goal);
				IModelElement[] modelElements = PHPMixinModel.getInstance().getClass(evaluatedType.getTypeName());
				return modelElementsToTypes(modelElements);
			}
		} catch (CoreException e) {
			Logger.logException(e);
		}
		return null;
	}

