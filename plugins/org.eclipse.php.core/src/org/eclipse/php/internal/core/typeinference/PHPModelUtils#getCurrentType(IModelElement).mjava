	/**
	 * Returns the current class or interface by the specified file and offset
	 * 
	 * @param sourceModule
	 *            The file where current namespace is requested
	 * @param offset
	 *            The offset where current namespace is requested
	 * @return type element, or <code>null</code> if the scope not a class or
	 *         interface scope
	 */
	@Nullable
	public static IType getCurrentType(IModelElement element) {
		try {
			while (element != null) {
				if (element instanceof IType) {
					if (!PHPFlags.isNamespace(((IType) element).getFlags())) {
						return (IType) element;
					}
					break;
				}
				element = element.getParent();
			}
		} catch (ModelException e) {
			PHPCorePlugin.log(e);
		}
		return null;
	}

