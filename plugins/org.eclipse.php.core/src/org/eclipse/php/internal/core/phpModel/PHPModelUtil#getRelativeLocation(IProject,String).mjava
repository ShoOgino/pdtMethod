	public static String getRelativeLocation(IProject project, String location) {
		PHPProjectModel model = PHPWorkspaceModelManager.getInstance().getModelForProject(project);
		if (model == null) {
			return location;
		}
		PHPFileData fileData = model.getFileData(location);
		if (fileData != null) {
			IResource resource = getResource(fileData);
			if (resource != null && resource.exists()) { // file is in a project
				IProject fileProject = resource.getProject();
				if (fileProject.isAccessible()) {
					return new Path(location).removeFirstSegments(1).toString();
				}
			} else { // file is in an include path
				IPhpModel[] models = model.getModels();
				for (int i = 0; i < models.length; ++i) {
					if (models[i].getFileData(location) == fileData) {
						if (models[i] instanceof PHPIncludePathModelManager) {
							PHPIncludePathModelManager manager = (PHPIncludePathModelManager) models[i];
							IPhpModel[] includeModels = manager.listModels();
							for (int j = 0; j < includeModels.length; ++j) {
								String root = ((PHPIncludePathModel) includeModels[j]).getID();
								IPath path = IncludePathVariableManager.instance().getIncludePathVariable(root);
								if (includeModels[j].getFileData(location) == fileData) {
									return new Path(location).setDevice("").removeFirstSegments(path.segmentCount()).toString();
								}
							}
						}
					}
				}
			}
		}
		return location;
	}

