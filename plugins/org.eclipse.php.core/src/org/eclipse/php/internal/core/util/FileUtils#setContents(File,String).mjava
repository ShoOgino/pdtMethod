	  /**
	  * Change the contents of text file in its entirety, overwriting any
	  * existing text.
	  *
	  * This style of implementation throws all exceptions to the caller.
	  *
	  * @param file is an existing file which can be written to.
	  * @throws IllegalArgumentException if param does not comply.
	  * @throws FileNotFoundException if the file does not exist.
	  * @throws IOException if problem encountered during write.
	  */
	  static public void setContents(File file, String contents)
	                                 throws FileNotFoundException, IOException {
	    if (file == null) {
	      throw new IllegalArgumentException(CoreMessages.getString("FileUtils_2"));
	    }
	    if (!file.exists()) {
	      throw new FileNotFoundException (CoreMessages.getString("FileUtils_3") + file);
	    }
	    if (!file.isFile()) {
	      throw new IllegalArgumentException(CoreMessages.getString("FileUtils_4") + file);
	    }
	    if (!file.canWrite()) {
	      throw new IllegalArgumentException(CoreMessages.getString("FileUtils_5") + file);
	    }

	    Writer output = null;
	    try {
	      //FileWriter always assumes default encoding is OK!
	      output = new BufferedWriter( new FileWriter(file) );
	      output.write( contents );
	    }
	    finally {
	      if (output != null) output.close();
	    }
	  }

