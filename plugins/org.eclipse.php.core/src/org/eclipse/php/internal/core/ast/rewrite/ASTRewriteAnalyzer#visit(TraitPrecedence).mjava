	public boolean visit(TraitPrecedence node) {
		if (!hasChildrenChanges(node)) {
			return doVisitUnchangedChildren(node);
		}
		rewriteRequiredNode(node, TraitPrecedence.METHOD_REFERENCE);
		rewriteNodeList(node, TraitPrecedence.TRAIT_REFERENCE_LIST,
				node.getStart(), "", ", ");
		return false;
	}

