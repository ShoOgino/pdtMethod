	public String getOperator() {
		switch (getOperatorType()) {
			case OP_IS_IDENTICAL:
				return "==="; //$NON-NLS-1$
			case OP_IS_NOT_IDENTICAL:
				return "!=="; //$NON-NLS-1$
			case OP_IS_EQUAL:
				return "=="; //$NON-NLS-1$
			case OP_IS_NOT_EQUAL:
				return "!="; //$NON-NLS-1$
			case OP_RGREATER:
				return "<"; //$NON-NLS-1$
			case OP_IS_SMALLER_OR_EQUAL:
				return "<="; //$NON-NLS-1$
			case OP_LGREATER:
				return ">"; //$NON-NLS-1$
			case OP_IS_GREATER_OR_EQUAL:
				return ">="; //$NON-NLS-1$
			case OP_BOOL_OR:
				return "||"; //$NON-NLS-1$
			case OP_BOOL_AND:
				return "&&"; //$NON-NLS-1$
			case OP_STRING_OR:
				return "or"; //$NON-NLS-1$
			case OP_STRING_AND:
				return "and"; //$NON-NLS-1$
			case OP_STRING_XOR:
				return "xor"; //$NON-NLS-1$
			case OP_OR:
				return "|"; //$NON-NLS-1$
			case OP_AND:
				return "&"; //$NON-NLS-1$
			case OP_XOR:
				return "^"; //$NON-NLS-1$
			case OP_CONCAT:
				return "."; //$NON-NLS-1$
			case OP_PLUS:
				return "+"; //$NON-NLS-1$
			case OP_MINUS:
				return "-"; //$NON-NLS-1$
			case OP_MUL:
				return "*"; //$NON-NLS-1$
			case OP_DIV:
				return "/"; //$NON-NLS-1$
			case OP_MOD:
				return "%"; //$NON-NLS-1$
			case OP_SL:
				return "<<"; //$NON-NLS-1$
			case OP_SR:
				return ">>"; //$NON-NLS-1$
			default:
				throw new IllegalArgumentException();
		}
	}

