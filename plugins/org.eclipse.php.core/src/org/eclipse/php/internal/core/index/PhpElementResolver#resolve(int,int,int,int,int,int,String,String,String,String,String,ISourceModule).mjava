	public IModelElement resolve(int elementType, int flags, int offset,
			int length, int nameOffset, int nameLength, String elementName,
			String metadata, String doc, String qualifier, String parent,
			ISourceModule sourceModule) {

		ModelElement parentElement = (ModelElement) sourceModule;
		if (qualifier != null) {
			// namespace:
			parentElement = new IndexType(parentElement, qualifier,
					Modifiers.AccNameSpace, 0, 0, 0, 0, null, doc);
		}
		if (parent != null) {
			parentElement = new SourceType(parentElement, parent);
		}

		switch (elementType) {
		case IModelElement.TYPE:
			String[] superClassNames = null;
			if (metadata != null) {
				superClassNames = SEPARATOR_PATTERN.split(metadata);
			}
			return new IndexType(parentElement, elementName, flags, offset,
					length, nameOffset, nameLength, superClassNames, doc);

		case IModelElement.METHOD:
			String[] parameters;
			if (metadata != null) {
				parameters = SEPARATOR_PATTERN.split(metadata);
			} else {
				parameters = EMPTY;
			}
			return new IndexMethod(parentElement, elementName, flags, offset,
					length, nameOffset, nameLength, parameters, doc);

		case IModelElement.FIELD:
			return new IndexField(parentElement, elementName, flags, offset,
					length, nameOffset, nameLength, doc);

		case IModelElement.IMPORT_DECLARATION:
			// XXX: replace with import declaration element
			return new IncludeField(parentElement, metadata);

		default:
			Logger.log(Logger.WARNING, PhpElementResolver.class.getName()
					+ ": Unsupported element type (" + elementType + ")"); //$NON-NLS-1$ //$NON-NLS-2$
		}
		return null;
	}

