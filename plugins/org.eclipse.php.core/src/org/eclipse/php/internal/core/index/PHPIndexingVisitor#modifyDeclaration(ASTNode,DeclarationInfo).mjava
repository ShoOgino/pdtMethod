	public void modifyDeclaration(ASTNode node, DeclarationInfo info) {
		for (PHPIndexingVisitorExtension visitor : extensions) {
			visitor.modifyDeclaration(node, info);
		}
		if (info.elementType != IModelElement.PACKAGE_DECLARATION) {
			if (info.parent == null) {
				info.parent = PHPCoreConstants.FILE_PARENT;
			}
			if (info.qualifier == null) {
				info.qualifier = PHPCoreConstants.GLOBAL_NAMESPACE;
			}
		}

		if (node != null && (info.flags & IPHPModifiers.AccReturn) == 0 && node instanceof MethodDeclaration) {
			MethodDeclaration m = (MethodDeclaration) node;
			if (m.getBody() != null) {
				ReturnDetector detector = new ReturnDetector();
				try {
					m.getBody().traverse(detector);
					if (detector.hasReturn()) {
						info.flags |= IPHPModifiers.AccReturn;
					}
				} catch (Exception e) {
					Logger.logException(e);
				}
			}
		}

		requestor.addDeclaration(info);
	}

