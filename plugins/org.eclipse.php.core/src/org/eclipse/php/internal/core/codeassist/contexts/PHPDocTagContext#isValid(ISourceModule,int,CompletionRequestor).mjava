	public boolean isValid(ISourceModule sourceModule, int offset,
			CompletionRequestor requestor) {
		if (!super.isValid(sourceModule, offset, requestor)) {
			return false;
		}
		setPatterns(sourceModule.getScriptProject().getProject());
		TextSequence statementText = getStatementText();

		int tagEnd = statementText.length(), tagStart;
		boolean found = false;
		do {
			tagEnd = PHPTextSequenceUtilities.readBackwardSpaces(statementText,
					tagEnd);
			tagStart = PHPTextSequenceUtilities.readIdentifierStartIndex(
					getPhpVersion(), getStatementText(), tagEnd, true);

			tagName = statementText.subSequence(tagStart, tagEnd).toString();

			if (tagStart > 0 && statementText.charAt(tagStart - 1) == '@') {
				found = true;
			} else if (isPHPTag(tagName)) {
				found = true;
			}

			tagEnd = tagStart - 1;
		} while (!found && tagStart > 0);

		return found;
	}

