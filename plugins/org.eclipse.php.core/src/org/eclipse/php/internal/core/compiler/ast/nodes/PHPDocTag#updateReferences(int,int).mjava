	private void updateReferences(int start, int end) {
		
		int valueStart = start + getTagKind(tagKind).length() + 1;
		
		if (tagKind == RETURN) {
			
			int wordStart = getNonWhitespaceIndex(value, 0);
			int wordEnd = getWhitespaceIndex(value, wordStart);
			if (wordStart < wordEnd) {
				
				String word = value.substring(wordStart, wordEnd);

				int classStart = getClassStartIndex(word, 0);
				int classEnd = getClassEndIndex(word, classStart);
				List<TypeReference> types = new LinkedList<TypeReference>();
				
				while (classStart < classEnd) {
					String className = word.substring(classStart, classEnd);
					types.add(new TypeReference(valueStart + wordStart + classStart, valueStart + wordStart + classEnd, className));
					
					classStart = getClassStartIndex(word, classEnd);
					classEnd = getClassEndIndex(word, classStart);
				}
				if (types.size() > 0) {
					references = types.toArray(new TypeReference[types.size()]);
				}
			}
			
		} else if (tagKind == VAR || tagKind == THROWS) {
			
			int wordStart = getNonWhitespaceIndex(value, 0);
			int wordEnd = getWhitespaceIndex(value, wordStart);
			if (wordStart < wordEnd) {
			
				references = new SimpleReference[1];
				int sourceStart = valueStart + wordStart;
				int sourceEnd = valueStart + wordEnd;
				references[0] = new TypeReference(sourceStart, sourceEnd, value.substring(wordStart, wordEnd));
			}
			
		} else if (tagKind == PARAM) {
			
			int firstWordStart = getNonWhitespaceIndex(value, 0);
			int firstWordEnd = getWhitespaceIndex(value, firstWordStart);
			if (firstWordStart < firstWordEnd) {
				
				int secondWordStart = getNonWhitespaceIndex(value, firstWordEnd);
				int secondWordEnd = getWhitespaceIndex(value, secondWordStart);
				if (secondWordStart < secondWordEnd) {

					String firstWord = value.substring(firstWordStart, firstWordEnd);
					String secondWord = value.substring(secondWordStart, secondWordEnd);
					if (firstWord.charAt(0) == '$') {
						references = new SimpleReference[2];
						references[0] = new VariableReference(valueStart + firstWordStart, valueStart + firstWordEnd, firstWord);
						references[1] = new TypeReference(valueStart + secondWordStart, valueStart + secondWordEnd, secondWord);
					} else if (secondWord.charAt(0) == '$') {
						references = new SimpleReference[2];
						references[0] = new VariableReference(valueStart + secondWordStart, valueStart + secondWordEnd, secondWord);
						references[1] = new TypeReference(valueStart + firstWordStart, valueStart + firstWordEnd, firstWord);
					}
				}
			}
		}
		if (references == null) {
			references = EMPTY;
		}
	}

