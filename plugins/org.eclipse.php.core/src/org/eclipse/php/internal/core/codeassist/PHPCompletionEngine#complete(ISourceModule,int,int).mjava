	public void complete(ISourceModule module, int position, int i) {

		relevanceKeyword = RELEVANCE_KEYWORD;
		relevanceMethod = RELEVANCE_METHOD;
		relevanceClass = RELEVANCE_CLASS;
		relevanceVar = RELEVANCE_VAR;
		relevanceConst = RELEVANCE_CONST;

		try {
			ICompletionContextResolver resolver = CompletionContextResolver.getActive();
			ICompletionStrategyFactory strategyFactory = CompletionStrategyFactory.getActive();

			ICompletionContext[] contexts = resolver.resolve((org.eclipse.dltk.core.ISourceModule) module.getModelElement(), position, requestor);
			Set<ICompletionStrategy> processedStrategies = new HashSet<ICompletionStrategy>();
			
			for (ICompletionContext context : contexts) {
				
				for (ICompletionStrategy strategy : strategyFactory.create(context)) {
					
					if (!processedStrategies.contains(strategy)) {
						strategy.apply(context, this);
						processedStrategies.add(strategy);
					}
				}
			}
		} catch (Exception e) {
			if (DLTKCore.DEBUG) {
				e.printStackTrace();
			}
		} finally {
			processedElements.clear();
		}
	}

