	/**
	 * This method returns field declared unders specified namespace
	 * 
	 * @param namespace
	 *            Namespace name
	 * @param prefix
	 *            Field name or prefix
	 * @param exactName
	 *            Whether the name is exact or it is prefix
	 * @param sourceModule
	 *            Source module where the field is referenced
	 * @param cache
	 *            Model access cache if available
	 * @param monitor
	 *            Progress monitor
	 * @return field declarated in the specified namespace, or null if there is
	 *         none
	 * @throws ModelException
	 */
	public static IField[] getNamespaceField(String namespace, String prefix, boolean exactName,
			ISourceModule sourceModule, IModelAccessCache cache, IProgressMonitor monitor) throws ModelException {

		IType[] namespaces = getNamespaces(sourceModule, namespace, cache, monitor);
		List<IField> result = new LinkedList<IField>();
		for (IType ns : namespaces) {
			result.addAll(Arrays.asList(PHPModelUtils.getTypeField(ns, prefix, exactName)));
		}
		return (IField[]) result.toArray(new IField[result.size()]);
	}

