	private void findConstOrFunctionWord(TextSequence statementText, int wordIdx, boolean isAfterOpeningCurly) {

		String[] groupStatements = isAfterOpeningCurly ? USE_GROUP_SEPARATOR.split(statementText.toString(), -1)
				: new String[] { statementText.toString() };
		String[] words = MagicMemberUtil.WHITESPACE_SEPERATOR.split(groupStatements[groupStatements.length - 1], -1);

		if (wordIdx >= words.length) {
			return;
		}

		// we should at least have one non-empty word after position wordIdx
		// or an empty word (which then means that cursor is not directly at the
		// end of the last non-empty word)
		if (wordIdx == words.length - 1) {
			return;
		}

		if (CONST_KEYWORD.equalsIgnoreCase(words[wordIdx])) {
			isUseConstStatement = true;
		} else if (FUNCTION_KEYWORD.equalsIgnoreCase(words[wordIdx])) {
			isUseFunctionStatement = true;
		}
	}

