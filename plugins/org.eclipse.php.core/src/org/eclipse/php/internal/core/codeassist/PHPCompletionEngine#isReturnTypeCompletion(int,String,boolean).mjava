	private boolean isReturnTypeCompletion(final int offset, String tagName, boolean haveSpacesAtEnd) {
		if (!haveSpacesAtEnd) {
			return false;
		}
		if (!PHPDocTag.RETURN_NAME.equals(tagName)) {
			return false;
		}
		
		// find function return types
		org.eclipse.dltk.core.ISourceModule module = (org.eclipse.dltk.core.ISourceModule) sourceModule.getModelElement();
		ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(module, null);
		
		Declaration declaration = ASTUtils.findDeclarationAfterPHPdoc(moduleDeclaration, offset);
		if (declaration instanceof MethodDeclaration) {
			IMethod method = (IMethod) PHPModelUtils.getModelElementByNode(module, moduleDeclaration, declaration);
			if (method != null) {
				IType[] returnTypes = CodeAssistUtils.getFunctionReturnType(method, true);
				if (returnTypes != null) {
					for (IType type : returnTypes) {
						reportType(type, RELEVANCE_FREE_SPACE, EMPTY);
					}
				}
			}
		}
		
		return false;
	}

