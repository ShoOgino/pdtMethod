	/**
	 * Converts the given method signature to a readable string. The method
	 * signature is expected to be dot-based.
	 * 
	 * @param methodSignature
	 *            the method signature to convert
	 * @param methodName
	 *            the name of the method to insert in the result, or
	 *            <code>null</code> if no method name is to be included
	 * @param parameterNames
	 *            the parameter names to insert in the result, or
	 *            <code>null</code> if no parameter names are to be included; if
	 *            supplied, the number of parameter names must match that of the
	 *            method signature
	 * @param fullyQualifyTypeNames
	 *            <code>true</code> if type names should be fully qualified, and
	 *            <code>false</code> to use only simple names
	 * @param includeReturnType
	 *            <code>true</code> if the return type is to be included
	 * @see #toCharArray(char[], char[], char[][], boolean, boolean)
	 * @return the string representation of the method signature
	 */
	public static String toString(String methodSignature, String methodName, String[] parameterNames,
			boolean fullyQualifyTypeNames, boolean includeReturnType) {
		return toString(methodSignature, methodName, parameterNames, fullyQualifyTypeNames, includeReturnType, false);
	}

