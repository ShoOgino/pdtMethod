	protected IEvaluatedType getType(SourceRange sourceRange) {
		if (!evaluatedTypesCache.containsKey(sourceRange)) {

			ContextFinder contextFinder = new ContextFinder(sourceRange);
			try {
				rootNode.traverse(contextFinder);
			} catch (Exception e) {
				Logger.logException(e);
				return null;
			}

			IContext context = contextFinder.getContext();
			ASTNode node= contextFinder.getNode();
			if (node == null) {
				throw new IllegalArgumentException("AST node can not be found for the given source range: " + sourceRange);
			}

			PHPTypeInferencer typeInferencer = new PHPTypeInferencer();
			evaluatedTypesCache.put(sourceRange, typeInferencer.evaluateType(new ExpressionTypeGoal(context, node), timeLimit));
		}
		return evaluatedTypesCache.get(sourceRange);
	}

