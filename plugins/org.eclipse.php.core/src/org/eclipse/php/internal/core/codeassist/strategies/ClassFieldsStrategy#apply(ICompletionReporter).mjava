	public void apply(ICompletionReporter reporter) throws BadLocationException {
		ICompletionContext context = getContext();
		if (!(context instanceof ClassMemberContext)) {
			return;
		}

		ClassMemberContext concreteContext = (ClassMemberContext) context;
		CompletionRequestor requestor = concreteContext
				.getCompletionRequestor();

		String prefix = concreteContext.getPrefix();
		SourceRange replaceRange = getReplacementRange(concreteContext);

		List<IField> result = new LinkedList<IField>();
		for (IType type : concreteContext.getLhsTypes()) {
			try {
				ITypeHierarchy hierarchy = getCompanion()
						.getSuperTypeHierarchy(type, null);
				IField[] fields = null;

				if (concreteContext instanceof ClassStaticMemberContext
						&& concreteContext.getTriggerType() == Trigger.CLASS
						&& ((ClassStaticMemberContext) concreteContext)
								.isParent()) {
					List<IField> superTypes = new ArrayList<IField>();
					for (IType currType : hierarchy.getAllSupertypes(type)) {
						superTypes.addAll(Arrays.asList(PHPModelUtils
								.getTypeField(currType, prefix,
										requestor.isContextInformationMode())));
					}

					fields = new IField[superTypes.size()];
					fields = superTypes.toArray(fields);
				} else {
					fields = PHPModelUtils.getTypeHierarchyField(type,
							hierarchy, prefix,
							requestor.isContextInformationMode(), null);
				}

				for (IField field : removeOverriddenElements(Arrays
						.asList(fields))) {
					if (!isFiltered(field, type, concreteContext)) {
						result.add(field);
					}
				}
			} catch (CoreException e) {
				PHPCorePlugin.log(e);
			}
		}
		for (IField field : result) {
			reporter.reportField(field, getSuffix(), replaceRange,
					concreteContext.getTriggerType() == Trigger.OBJECT);
		}
	}

