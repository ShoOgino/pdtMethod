	@Override
	public void apply(ICompletionReporter reporter) throws BadLocationException {
		ICompletionContext context = getContext();
		if (!(context instanceof IClassMemberContext) || !(context instanceof AbstractCompletionContext)) {
			return;
		}
		AbstractCompletionContext abstractContext = (AbstractCompletionContext) context;
		IClassMemberContext concreteContext = (IClassMemberContext) context;
		CompletionRequestor requestor = abstractContext.getCompletionRequestor();

		String prefix = abstractContext.getPrefix();
		ISourceRange replaceRange = getReplacementRange(concreteContext);

		List<IField> result = new LinkedList<>();
		for (IType type : concreteContext.getLhsTypes()) {
			try {
				ITypeHierarchy hierarchy = getCompanion().getSuperTypeHierarchy(type, null);
				IField[] fields = null;
				if (concreteContext instanceof ClassStaticMemberContext
						&& concreteContext.getTriggerType() == Trigger.CLASS
						&& ((ClassStaticMemberContext) concreteContext).isParent()) {
					List<IField> superTypes = new ArrayList<>();
					for (IType currType : hierarchy.getAllSupertypes(type)) {
						superTypes.addAll(Arrays.asList(
								PHPModelUtils.getTypeField(currType, prefix, requestor.isContextInformationMode())));
					}

					fields = superTypes.toArray(new IField[superTypes.size()]);
				} else {
					fields = PHPModelUtils.getTypeHierarchyField(type, hierarchy, prefix,
							requestor.isContextInformationMode(), null);
				}

				for (IField field : removeOverriddenElements(Arrays.asList(fields))) {
					if (!isFiltered(field, type, concreteContext)) {
						result.add(field);
					}
				}
			} catch (CoreException e) {
				PHPCorePlugin.log(e);
			}
		}
		if (concreteContext instanceof ClassStaticMemberContext && concreteContext.getTriggerType() == Trigger.CLASS
				&& PHPVersion.PHP5_4.isLessThan(getCompanion().getPHPVersion())
				&& (CLASS_KEYWORD.startsWith(prefix.toLowerCase()) || CLASS_KEYWORD.equals(prefix.toLowerCase()))) {
			try {
				ITextRegion phpToken = getCompanion().getPHPScriptRegion()
						.getPHPToken(getCompanion().getPHPToken().getStart() - 1);
				if (PHPRegionTypes.PHP_PAAMAYIM_NEKUDOTAYIM.equals(phpToken.getType())) {
					phpToken = getCompanion().getPHPToken(phpToken.getStart() - 1);
				}

				if (isStaticCall(phpToken.getType())) {
					result.add(new FakeField(new FakeType((ModelElement) getCompanion().getSourceModule(), STD_CLASS),
							CLASS_KEYWORD, Modifiers.AccConstant | Modifiers.AccPublic));
				}
			} catch (BadLocationException e) {
				Logger.logException(e);
			}
		}

		for (IField field : result) {
			reporter.reportField(field, getSuffix(), replaceRange, concreteContext.getTriggerType() == Trigger.OBJECT);
		}
	}

