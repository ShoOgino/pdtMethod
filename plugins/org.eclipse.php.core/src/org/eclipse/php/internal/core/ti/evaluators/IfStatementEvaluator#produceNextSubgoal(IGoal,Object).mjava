	private IGoal produceNextSubgoal(IGoal previousGoal, Object previousResult) {
		if (state == STATE_TRY_THEN) {
			ExpressionTypeGoal typedGoal = (ExpressionTypeGoal) goal;
			IfStatement expression = (IfStatement) typedGoal.getExpression();
			ASTNode clause = expression.getTrueStatement(); // then
			if (clause == null) {
				state = STATE_TRY_ELSE;
			} else {
				state = STATE_WAITING_THEN;
				return new ExpressionTypeGoal(goal.getContext(), clause);
			}
		}
		if (state == STATE_WAITING_THEN || state == STATE_WAITING_ELSE) {
			if (previousResult != null) {
				evaluatedTypes[index++] = (IEvaluatedType) previousResult;
			}
			state = (state == STATE_WAITING_THEN ? STATE_TRY_ELSE : STATE_DONE);
		} else {
			Assert.isTrue(previousGoal == null);
		}
		if (state == STATE_TRY_ELSE) {
			ExpressionTypeGoal typedGoal = (ExpressionTypeGoal) goal;
			IfStatement expression = (IfStatement) typedGoal.getExpression();
			ASTNode clause = expression.getFalseStatement(); // else
			if (clause == null) {
				state = STATE_DONE;
			} else {
				state = STATE_WAITING_ELSE;
				return new ExpressionTypeGoal(goal.getContext(), clause);
			}
		}
		return null;
	}

