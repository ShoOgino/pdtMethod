	public void apply(ICompletionContext context, ICompletionReporter reporter) throws BadLocationException {

		AbstractCompletionContext abstractContext = (AbstractCompletionContext) context;

		int offset = abstractContext.getOffset();
		ISourceModule sourceModule = abstractContext.getSourceModule();

		// find function return types
		ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(sourceModule, null);

		Declaration declaration = ASTUtils.findDeclarationAfterPHPdoc(moduleDeclaration, offset);
		if (declaration instanceof MethodDeclaration) {
			IMethod method = (IMethod) PHPModelUtils.getModelElementByNode(sourceModule, moduleDeclaration, declaration);
			if (method != null) {
				
				IType[] returnTypes = CodeAssistUtils.getFunctionReturnType(method, 0);
				if (returnTypes != null) {

					String className = abstractContext.getPrefix();
					SourceRange replaceRange = getReplacementRange(abstractContext);

					for (IType type : returnTypes) {
						try {
							if (CodeAssistUtils.startsWithIgnoreCase(type.getElementName(), className) && !PHPFlags.isInternal(type.getFlags())) {
								reporter.reportType(type, "", replaceRange);
							}
						} catch (ModelException e) {
							if (DLTKCore.DEBUG_COMPLETION) {
								e.printStackTrace();
							}
						}
					}
				}
			}
		}
	}

