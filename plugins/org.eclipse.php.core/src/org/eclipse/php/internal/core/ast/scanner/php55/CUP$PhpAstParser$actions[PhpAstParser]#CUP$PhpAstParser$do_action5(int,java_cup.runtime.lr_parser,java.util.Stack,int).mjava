  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$PhpAstParser$do_action5(
    int                        CUP$PhpAstParser$act_num,
    java_cup.runtime.lr_parser CUP$PhpAstParser$parser,
    java.util.Stack            CUP$PhpAstParser$stack,
    int                        CUP$PhpAstParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$PhpAstParser$result;

      /* select the action based on the action number */
      switch (CUP$PhpAstParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // base_variable_with_function_calls ::= array_function_dereference 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = var; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(114/*base_variable_with_function_calls*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // base_variable_with_function_calls ::= array_creation_dereference 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		ArrayCreation var = (ArrayCreation)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = var; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(114/*base_variable_with_function_calls*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // base_variable ::= reference_variable 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(110/*base_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // base_variable ::= simple_indirect_reference reference_variable 
            {
              VariableBase RESULT = null;
		int ref_countleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int ref_countright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Integer ref_count = (Integer)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	// the ref_count counts the number of reflection (DOLLAR sign) so now we should
	// accomulate the dolars into reflection variables
	VariableBase finalVar = var;
	for (int i=0; i<ref_count.intValue(); i++) {
		finalVar = new ReflectionVariable(ref_countright - i - 1, varright, parser.ast, finalVar);
	}
	RESULT = finalVar;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(110/*base_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // base_variable ::= static_member 
            {
              VariableBase RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase s = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = s;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(110/*base_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // reference_variable ::= reference_variable T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              Variable RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Variable varName = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(varNameleft, eright, parser.ast, varName, index, ArrayAccess.VARIABLE_ARRAY);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(55/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // reference_variable ::= reference_variable T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Variable RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Variable varName = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(varNameleft, eright, parser.ast, varName, index, ArrayAccess.VARIABLE_HASHTABLE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(55/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // reference_variable ::= compound_variable 
            {
              Variable RESULT = null;
		int comp_varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int comp_varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable comp_var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = comp_var; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(55/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // compound_variable ::= tracked_variable 
            {
              Variable RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = var; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(57/*compound_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // compound_variable ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Variable RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	ReflectionVariable var = new ReflectionVariable(sleft, eright, parser.ast, expr);
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(57/*compound_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // dim_offset ::= 
            {
              Expression RESULT = null;
		
	RESULT = null;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(58/*dim_offset*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // dim_offset ::= expr 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = expr;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(58/*dim_offset*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // object_property ::= object_dim_list 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(59/*object_property*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // object_property ::= variable_without_objects 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(59/*object_property*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // object_dim_list ::= object_dim_list T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(varleft, eright, parser.ast, var, index, ArrayAccess.VARIABLE_ARRAY);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(60/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // object_dim_list ::= object_dim_list T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(varleft, eright, parser.ast, var, index, ArrayAccess.VARIABLE_HASHTABLE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(60/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // object_dim_list ::= variable_name 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = var; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(60/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // variable_name ::= string_st 
            {
              VariableBase RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Variable(varNameleft, varNameright, parser.ast, varName);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(61/*variable_name*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // variable_name ::= T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              VariableBase RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ReflectionVariable(sleft, eright, parser.ast, expr);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(61/*variable_name*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // simple_indirect_reference ::= T_DOLLAR 
            {
              Integer RESULT = null;
		
	RESULT = new Integer(1);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(62/*simple_indirect_reference*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // simple_indirect_reference ::= simple_indirect_reference T_DOLLAR 
            {
              Integer RESULT = null;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Integer ref = (Integer)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		
	RESULT = new Integer(1 + ref.intValue());

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(62/*simple_indirect_reference*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // assignment_list ::= assignment_list T_COMMA assignment_list_element 
            {
              List RESULT = null;
		int listElementsleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int listElementsright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		List listElements = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int elementleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int elementright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase element = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	if (element != null) {
		listElements.add(element);
	} else {
		listElements.add(new Variable(elementleft, elementright, parser.ast, ""));
	}
	RESULT = listElements;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(63/*assignment_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // assignment_list ::= assignment_list_element 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List listElements = new LinkedList();
	if (var != null) {
		listElements.add(var);
	} else {
		listElements.add(new Variable(varleft, varright, parser.ast, ""));
	}
	RESULT = listElements;
	;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(63/*assignment_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // assignment_list_element ::= variable 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(64/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // assignment_list_element ::= list_variable 
            {
              VariableBase RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		ListVariable list = (ListVariable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(64/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // assignment_list_element ::= 
            {
              VariableBase RESULT = null;
		
	RESULT = null;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(64/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // array_pair_list ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList();

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(65/*array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // array_pair_list ::= non_empty_array_pair_list possible_comma 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(65/*array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW expr 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(new ArrayElement(keyleft, valueright, parser.ast, key, value));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(new ArrayElement(exprleft, exprright, parser.ast, expr));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW expr 
            {
              List RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(new ArrayElement(keyleft, valueright, parser.ast, key, value));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // non_empty_array_pair_list ::= expr 
            {
              List RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(new ArrayElement(exprleft, exprright, parser.ast, expr));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(new ArrayElement(keyleft, varright, parser.ast, key, new Reference(sleft, varright, parser.ast, var)));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA T_REFERENCE w_variable 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(new ArrayElement(sleft, varright, parser.ast, new Reference(sleft, varright, parser.ast, var)));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              List RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(new ArrayElement(keyleft, varright, parser.ast, key, new Reference(sleft, varright, parser.ast, var)));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // non_empty_array_pair_list ::= T_REFERENCE w_variable 
            {
              List RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(new ArrayElement(sleft, varright, parser.ast, new Reference(sleft, varright, parser.ast, var)));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(66/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // encaps_list ::= encaps_list encaps_var 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(var);
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(67/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int stringleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	list.add(new Scalar(stringleft, stringright, parser.ast, string, string == null ? Scalar.TYPE_UNKNOWN : Scalar.TYPE_STRING));
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(67/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // encaps_list ::= encaps_var 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(var);
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(67/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // encaps_list ::= T_ENCAPSED_AND_WHITESPACE encaps_var 
            {
              List RESULT = null;
		int stringleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(new Scalar(stringleft, stringright, parser.ast, string, string == null ? Scalar.TYPE_UNKNOWN : Scalar.TYPE_STRING));
	list.add(var);
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(67/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // encaps_var ::= tracked_variable 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // encaps_var ::= tracked_variable T_OPEN_RECT encaps_var_offset T_CLOSE_RECT 
            {
              VariableBase RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Variable varName = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(varNameleft, eright, parser.ast, varName, index, ArrayAccess.VARIABLE_ARRAY);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // encaps_var ::= tracked_variable T_OBJECT_OPERATOR string_st 
            {
              VariableBase RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int stringleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = parser.createDispatch(var, new Variable(stringleft, stringright, parser.ast, string));

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES expr T_CURLY_CLOSE 
            {
              VariableBase RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ReflectionVariable(sleft, eright, parser.ast, expr);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME T_OPEN_RECT expr T_CLOSE_RECT T_CURLY_CLOSE 
            {
              VariableBase RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-4)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ArrayAccess(sleft, eright, parser.ast,
		new Variable(varNameleft, varNameright, parser.ast, varName), index, ArrayAccess.VARIABLE_ARRAY);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // encaps_var ::= T_CURLY_OPEN_WITH_DOLAR variable T_CURLY_CLOSE 
            {
              VariableBase RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Object s = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new ReflectionVariable(sleft, eright, parser.ast, var);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(69/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // encaps_var_offset ::= string_st 
            {
              Expression RESULT = null;
		int stringleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Identifier(stringleft, stringright, parser.ast, string);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(70/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // encaps_var_offset ::= T_NUM_STRING 
            {
              Expression RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String num = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Scalar(numleft,numright, parser.ast, num, Scalar.TYPE_REAL);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(70/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // encaps_var_offset ::= tracked_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Variable var = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = var;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(70/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // internal_functions_in_yacc ::= T_ISSET T_OPEN_PARENTHESE isset_variables T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int varListleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		List varList = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new FunctionInvocation(sleft, eright, parser.ast,
		new FunctionName(sleft, sright, parser.ast,
			new Identifier(sleft, sright, parser.ast, "isset")), varList);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // internal_functions_in_yacc ::= T_EMPTY T_OPEN_PARENTHESE variable T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	LinkedList varList = new LinkedList();
	varList.add(var);
	RESULT = new FunctionInvocation(sleft, eright, parser.ast,
		new FunctionName(sleft, sright, parser.ast, new Identifier(sleft, sright, parser.ast, "empty")), varList);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // internal_functions_in_yacc ::= T_INCLUDE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Include(includeleft, exprright, parser.ast, expr, Include.IT_INCLUDE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // internal_functions_in_yacc ::= T_INCLUDE_ONCE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Include(includeleft, exprright, parser.ast, expr, Include.IT_INCLUDE_ONCE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // internal_functions_in_yacc ::= T_EVAL T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int sleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int sright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		String s = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	LinkedList exprList = new LinkedList();
	exprList.add(expr);
	RESULT = new FunctionInvocation(sleft, eright, parser.ast,
		new FunctionName(sleft, sright, parser.ast, new Identifier(sleft, sright, parser.ast, "eval")), exprList);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // internal_functions_in_yacc ::= T_REQUIRE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Include(includeleft, exprright, parser.ast, expr, Include.IT_REQUIRE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // internal_functions_in_yacc ::= T_REQUIRE_ONCE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Include(includeleft, exprright, parser.ast, expr, Include.IT_REQUIRE_ONCE);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(71/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // isset_variables ::= variable 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(var);
	RESULT = list;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(105/*isset_variables*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // isset_variables ::= isset_variables T_COMMA variable 
            {
              List RESULT = null;
		int varListleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		List varList = (List)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase var = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	varList.add(var);
	RESULT = varList;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(105/*isset_variables*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // class_constant ::= class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              StaticConstantAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new StaticConstantAccess(classNameleft, varNameright, parser.ast, className,
		new Identifier(varNameleft, varNameright, parser.ast, varName));

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(108/*class_constant*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // class_constant ::= class_name T_PAAMAYIM_NEKUDOTAYIM T_CLASS 
            {
              StaticConstantAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object varName = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new StaticConstantAccess(classNameleft, varNameright, parser.ast, className,
		new Identifier(varNameleft, varNameright, parser.ast, "class"));

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(108/*class_constant*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // class_constant ::= variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              StaticConstantAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Variable className = (Variable)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new StaticConstantAccess(classNameleft, varNameright, parser.ast, className,
		new Identifier(varNameleft, varNameright, parser.ast, varName));

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(108/*class_constant*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // tracked_variable ::= T_VARIABLE 
            {
              Variable RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new Variable(varNameleft, varNameright, parser.ast, varName);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(106/*tracked_variable*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // string_st ::= T_STRING 
            {
              String RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = value; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(72/*string_st*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // string_st ::= T_DEFINE 
            {
              String RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		 RESULT = value; 
              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(72/*string_st*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // yield_arg ::= variable 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		VariableBase expr = (VariableBase)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = expr;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(140/*yield_arg*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // yield_arg ::= expr_without_variable 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = expr;

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(140/*yield_arg*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // yield_expr ::= T_YIELD 
            {
              YieldExpression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new YieldExpression(tokenleft, tokenright, parser.ast);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(141/*yield_expr*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // yield_expr ::= T_YIELD yield_arg 
            {
              YieldExpression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new YieldExpression(tokenleft, exprright, parser.ast, expr);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(141/*yield_expr*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // yield_expr ::= T_YIELD yield_arg T_DOUBLE_ARROW yield_arg 
            {
              YieldExpression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).value;
		
	RESULT = new YieldExpression(tokenleft, exprright, parser.ast, key, expr);

              CUP$PhpAstParser$result = new java_cup.runtime.Symbol(141/*yield_expr*/, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$PhpAstParser$stack.elementAt(CUP$PhpAstParser$top-0)).right, RESULT);
            }
          return CUP$PhpAstParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }

