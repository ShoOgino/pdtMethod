	/**
	 * Recursivly call the format node on every node in the model
	 * 
	 * @param node
	 *            - to fotmat
	 * @param formatContraints
	 */
	private void formatNode(IDOMNode node,
			IStructuredFormatContraints formatContraints) {

		// if it is php node - format
		if (node instanceof ElementImplForPhp
				&& ((ElementImplForPhp) node).isPhpTag()) {
			IStructuredDocumentRegion sdRegionStart = node
					.getStartStructuredDocumentRegion();
			// IStructuredDocumentRegion sdRegionEnd =
			// node.getLastStructuredDocumentRegion();
			// sdRegionEnd = sdRegionEnd == null ? sdRegionStart : sdRegionEnd;
			format(sdRegionStart);
		}

		if (node instanceof AttrImplForPhp) {
			// calculate lines
			IStructuredDocument document = node.getStructuredDocument();
			int lineIndex = document.getLineOfOffset(node.getStartOffset());
			int endLineIndex = document.getLineOfOffset(node.getEndOffset());

			// format each line
			for (; lineIndex <= endLineIndex; lineIndex++) {
				formatLine(document, lineIndex);
			}
		}

		if (node.hasChildNodes()) { // container
			IDOMNode child = (IDOMNode) node.getFirstChild();
			while (child != null) {
				formatNode(child, formatContraints);
				child = (IDOMNode) child.getNextSibling();
			}
		}
	}

