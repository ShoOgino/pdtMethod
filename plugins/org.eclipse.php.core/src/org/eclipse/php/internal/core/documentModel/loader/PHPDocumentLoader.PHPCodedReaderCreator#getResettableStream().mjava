		private InputStream getResettableStream() throws CoreException, IOException {

			InputStream resettableStream = null;

			if (fIFile != null) {
				InputStream inputStream = null;
				try {
					// note we always get contents, even if out of synch
					inputStream = fIFile.getContents(true);
				}
				catch (CoreException e) {
					// SHOULD actually check for existence of
					// fIStorage, but
					// for now will just assume core exception
					// means it
					// doesn't exist on file system, yet.
					// and we'll log, just in case its a noteable error
					Logger.logException(e);
					inputStream = new NullInputStream();
				}
				resettableStream = new BufferedInputStream(inputStream, CodedIO.MAX_BUF_SIZE);
			}
			else {
				if (fInputStream != null) {
					if (fInputStream.markSupported()) {
						resettableStream = fInputStream;
						// try {
						resettableStream.reset();
						// }
						// catch (IOException e) {
						// // assumed just hasn't been marked yet, so ignore
						// }
					}
					else {
						resettableStream = new BufferedInputStream(fInputStream, CodedIO.MAX_BUF_SIZE);
					}
				}
			}

			if (resettableStream == null) {
				resettableStream = new NullInputStream();
			}

			// mark this once, stream at "zero" position
			resettableStream.mark(MAX_MARK_SIZE);
			return resettableStream;
		}

