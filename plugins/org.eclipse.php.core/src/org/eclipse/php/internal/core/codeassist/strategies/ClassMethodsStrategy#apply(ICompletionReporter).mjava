	public void apply(ICompletionReporter reporter) throws BadLocationException {
		ICompletionContext context = getContext();
		if (!(context instanceof ClassMemberContext)) {
			return;
		}

		ClassMemberContext concreteContext = (ClassMemberContext) context;
		CompletionRequestor requestor = concreteContext
				.getCompletionRequestor();

		String prefix = concreteContext.getPrefix();
		SourceRange replaceRange = getReplacementRange(concreteContext);
		boolean isParentCall = isParentCall(concreteContext);
		String suffix = getSuffix(concreteContext);

		PHPVersion phpVersion = concreteContext.getPhpVersion();
		Set<String> magicMethods = new HashSet<String>();
		magicMethods.addAll(Arrays.asList(PHPMagicMethods
				.getMethods(phpVersion)));

		boolean exactName = requestor.isContextInformationMode();

		Set<IMethod> result = new TreeSet<IMethod>(
				new CodeAssistUtils.AlphabeticComparator());
		for (IType type : concreteContext.getLhsTypes()) {
			try {
				ITypeHierarchy hierarchy = getCompanion()
						.getSuperTypeHierarchy(type, null);

				IMethod[] methods = isParentCall ? PHPModelUtils
						.getSuperTypeHierarchyMethod(type, hierarchy, prefix,
								exactName, null) : PHPModelUtils
						.getTypeHierarchyMethod(type, hierarchy, prefix,
								exactName, null);

				for (IMethod method : removeOverriddenElements(Arrays
						.asList(methods))) {

					if (!magicMethods.contains(method.getElementName())
							&& !isFiltered(method, concreteContext)) {
						result.add(method);
					}
				}
			} catch (CoreException e) {
				PHPCorePlugin.log(e);
			}
		}
		for (IMethod method : result) {
			reporter.reportMethod((IMethod) method, suffix, replaceRange);
		}
	}

