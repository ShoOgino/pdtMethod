	public IGoal[] init() {
		IContext context = goal.getContext();

		try {
			if (context instanceof MethodContext) {
				MethodContext methodContex = (MethodContext) context;
				MethodDeclaration methodDecl = methodContex.getMethodNode();
				VariableDeclarationSearcher varDecSearcher = new VariableDeclarationSearcher();
				methodDecl.traverse(varDecSearcher);

				List<ASTNode> declarations = varDecSearcher.getDeclarations();
				IGoal[] subGoals = new IGoal[declarations.size()];
				int i = 0;
				for (ASTNode declaration : declarations) {
					subGoals[i++] = new ExpressionTypeGoal(context, declaration);
				}
				return subGoals;

			} else if (context instanceof BasicContext) {
				BasicContext basicContex = (BasicContext) context;
				ModuleDeclaration moduleDecl = basicContex.getRootNode();
				VariableDeclarationSearcher varDecSearcher = new VariableDeclarationSearcher();
				moduleDecl.traverse(varDecSearcher);

				List<ASTNode> declarations = varDecSearcher.getDeclarations();
				IGoal[] subGoals = new IGoal[declarations.size()];
				int i = 0;
				for (ASTNode declaration : declarations) {
					subGoals[i++] = new ExpressionTypeGoal(context, declaration);
				}
				return subGoals;
			}
		} catch (Exception e) {
			Logger.logException(e);
		}

		return IGoal.NO_GOALS;
	}

