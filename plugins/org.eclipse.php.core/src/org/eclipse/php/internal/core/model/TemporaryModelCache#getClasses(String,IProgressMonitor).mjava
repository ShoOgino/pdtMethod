	/**
	 * Searches for classes by name
	 * 
	 * @param name
	 *            Class name
	 * @param monitor
	 *            Progress monitor
	 * @return classes collection if found, otherwise <code>null</code>
	 * @throws ModelException
	 */
	public Collection<IType> getClasses(String name, IProgressMonitor monitor)
			throws ModelException {
		Collection<IType> allTypes = getTypes(name, monitor);
		if (allTypes == null) {
			return null;
		}
		Collection<IType> result = new LinkedList<IType>();
		for (IType type : allTypes) {
			if (PHPFlags.isClass(type.getFlags())) {
				result.add(type);
			}
		}
		return result;
	}

