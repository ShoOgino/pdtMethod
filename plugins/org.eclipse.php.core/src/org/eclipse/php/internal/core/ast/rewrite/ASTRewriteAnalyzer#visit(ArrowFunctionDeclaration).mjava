	@Override
	public boolean visit(ArrowFunctionDeclaration arrowFunctionDeclaration) {
		if (!hasChildrenChanges(arrowFunctionDeclaration)) {
			return doVisitUnchangedChildren(arrowFunctionDeclaration);
		}

		// Is static
		RewriteEvent eventStatic = getEvent(arrowFunctionDeclaration, ArrowFunctionDeclaration.IS_STATIC);
		if (eventStatic != null && eventStatic.getChangeKind() == RewriteEvent.REPLACED) {
			boolean isStatic = (Boolean) eventStatic.getNewValue();

			try {
				TextEditGroup editGroup = getEditGroup(eventStatic);
				// we need to remove everything before the word 'fn'.
				int startDeletionFrom = arrowFunctionDeclaration.getStart();
				int startOffset = getFnStartPosition(startDeletionFrom);
				doTextRemove(startDeletionFrom, startOffset - startDeletionFrom, editGroup);

				if (isStatic) {
					// we need to insert the 'static' keyword
					doTextInsert(startDeletionFrom, "static ", editGroup); //$NON-NLS-1$
				}
			} catch (CoreException e) {
				handleException(e);
			}
		}

		// Reference
		RewriteEvent eventReference = getEvent(arrowFunctionDeclaration,
				ArrowFunctionDeclaration.IS_REFERENCE_PROPERTY);
		if (eventReference != null && eventReference.getChangeKind() == RewriteEvent.REPLACED) {
			boolean isReference = (Boolean) eventReference.getNewValue();

			try {
				TextEditGroup editGroup = getEditGroup(eventReference);
				// we need to remove everything between the word 'fn' to
				// the start of the fn
				// name and then place a blank or an &.
				int startDeletionFrom = getFnStartPosition(arrowFunctionDeclaration.getStart()) + 2; // 2
				// is the 'fn' keyword length
				int startOffset = getLeftParenthesesStartPosition(startDeletionFrom);
				doTextRemove(startDeletionFrom, startOffset - startDeletionFrom, editGroup);
				if (isReference) {
					// we need to insert the &
					doTextInsert(startDeletionFrom, " & ", editGroup); //$NON-NLS-1$
				} else {
					doTextInsert(startDeletionFrom, " ", editGroup); //$NON-NLS-1$
				}
			} catch (CoreException e) {
				handleException(e);
			}
		}

		// Parameters
		if (isChanged(arrowFunctionDeclaration, ArrowFunctionDeclaration.FORMAL_PARAMETERS_PROPERTY)) {
			try {
				int startDeletionFrom = getFnStartPosition(arrowFunctionDeclaration.getStart()) + 2; // 2
				// is the 'fn' keyword length
				int startOffset = getLeftParenthesesStartPosition(startDeletionFrom);
				rewriteNodeList(arrowFunctionDeclaration, ArrowFunctionDeclaration.FORMAL_PARAMETERS_PROPERTY,
						startOffset, "", ", "); //$NON-NLS-1$ //$NON-NLS-2$
			} catch (CoreException e) {
				handleException(e);
			}
		} else {
			voidVisit(arrowFunctionDeclaration, ArrowFunctionDeclaration.FORMAL_PARAMETERS_PROPERTY);
		}

		if (isChanged(arrowFunctionDeclaration, ArrowFunctionDeclaration.RETURN_TYPE_PROPERTY)) {
			try {
				int startDeletionFrom = getFnStartPosition(arrowFunctionDeclaration.getStart()) + 2; // 2
				// is the 'fn' keyword length
				int startOffset = getRightParenthesesStartPosition(startDeletionFrom) + 1;
				rewriteNode(arrowFunctionDeclaration, ArrowFunctionDeclaration.RETURN_TYPE_PROPERTY, startOffset,
						new Prefix() {

							@Override
							public String getPrefix(int indent) {
								return ": "; //$NON-NLS-1$
							}
						});
			} catch (CoreException e) {
				handleException(e);
			}
		}

		try {
			int startDeletionFrom = getFnStartPosition(arrowFunctionDeclaration.getStart()) + 2; // 2
			// is the 'fn' keyword length
			int startOffset = getRightParenthesesStartPosition(startDeletionFrom) + 1;
			doVisit(arrowFunctionDeclaration, ArrowFunctionDeclaration.RETURN_TYPE_PROPERTY, startOffset);
		} catch (CoreException e) {
			handleException(e);
		}

		// Body
		rewriteRequiredNode(arrowFunctionDeclaration, ArrowFunctionDeclaration.BODY_PROPERTY);

		return false;
	}

