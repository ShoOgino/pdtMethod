	/**
	 * @param locateNode
	 * @return true if the given path indicates a function
	 */
	private static boolean isFunction(ASTNode locateNode) {
		assert locateNode != null;
		ASTNode parent = null;
		Identifier targetIdentifier = null;

		if (locateNode.getType() == ASTNode.FUNCTION_DECLARATION) {
			parent = ((FunctionDeclaration) locateNode);
			targetIdentifier = ((FunctionDeclaration) locateNode).getFunctionName();
		} else if (locateNode.getType() == ASTNode.IDENTIFIER && !"define".equals(((Identifier) locateNode).getName())) {
			targetIdentifier = (Identifier) locateNode;
			parent = targetIdentifier.getParent();
		} else {
			return false;
		}

		// check if it is a function
		if (parent.getType() != ASTNode.FUNCTION_DECLARATION && parent.getType() != ASTNode.FUNCTION_NAME || parent.getParent().getType() == ASTNode.METHOD_DECLARATION) {
			return false;
		}

		// check if it is a method
		final int type = parent.getParent().getType();
		if (type == ASTNode.FUNCTION_INVOCATION) {
			final int parentParentType = parent.getParent().getParent().getType();
			if (parentParentType == ASTNode.METHOD_DECLARATION || parentParentType == ASTNode.STATIC_METHOD_INVOCATION) {
				return false;
			}
		} else if (type == ASTNode.METHOD_DECLARATION) {
			return false;
		}

		return true;
	}

