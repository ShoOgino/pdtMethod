	public PHPConstantData getConstant(String fileName, String constantName) {
		List constants = new ArrayList();
		for (int i = 0; i < models.length; i++) {
			PHPConstantData exactConstant = models[i].getConstant(fileName, constantName);
			// if filename is matching - just return the function.
			if (exactConstant != null && exactConstant.getUserData() != null && exactConstant.getUserData().getFileName().equals(fileName)) {
				return exactConstant;
			}
			// else collect all the functions to apply filter
			CodeData[] modelConstants = models[i].getConstant(constantName);
			if (modelConstants != null && modelConstants.length > 0) {
				constants.addAll(Arrays.asList(modelConstants));
			}
		}
		switch (constants.size()) {
			case 0:
				return null;
			case 1:
				return (PHPConstantData) constants.get(0);
		}
		if (filter != null) {
			for (Iterator i = constants.iterator(); i.hasNext();) {
				PHPConstantData constant = (PHPConstantData) i.next();
				if (filter.select(this, constant, fileName)) {
					return constant;
				}
			}
		}
		return (PHPConstantData) constants.get(0);
	}

