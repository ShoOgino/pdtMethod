	/**
	 * @return the resolved type of the given expression, null if can't evaluate
	 */
	@Override
	ITypeBinding resolveExpressionType(Expression expression) {
		if (expression == null) {
			throw new IllegalArgumentException("Can not resolve null expression");
		}
		
		IModelElement element;
		try {
			element = this.sourceModule.getElementAt(expression.getEnd());
		} catch (ModelException e) {
			// will throw an error, in next command
			element = null;
		}
		if (element == null) {
			throw new IllegalStateException("Resolving operation problem");
		}
		
		final String handleIdentifier = element.getHandleIdentifier();
		IBinding binding = this.bindingTables.bindingKeysToBindings.get(handleIdentifier);
		
		if (binding != null) {
			return (ITypeBinding) binding;
		}

		IEvaluatedType type = this.bindingUtil.getType(expression.getStart(), expression.getEnd());
		binding = new TypeBinding(type);
		
		this.bindingTables.bindingKeysToBindings.put(handleIdentifier, binding);
		return (ITypeBinding) binding;
	}

