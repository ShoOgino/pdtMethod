	@Override
	public List<IType> getTraitList(boolean isMethod, String classMemberName, boolean includeSuper) {
		List<IType> result = new LinkedList<>();
		if (ArrayUtils.isEmpty(elements)) {
			return result;
		}
		for (IModelElement type : elements) {
			IType trait = getTrait((IType) type, isMethod, classMemberName);
			if (trait != null) {
				result.add(trait);
			}
		}
		if (includeSuper) {

			for (IModelElement element : elements) {
				IType type = (IType) element;
				try {
					if (ArrayUtils.isEmpty(type.getSuperClasses()) || PHPFlags.isTrait(type.getFlags())) {
						return result;
					}

					ITypeHierarchy supertypeHierarchy = hierarchy.get(type);
					if (supertypeHierarchy == null) {
						supertypeHierarchy = type.newSupertypeHierarchy(new NullProgressMonitor());
						hierarchy.put(type, supertypeHierarchy);
					}
					IType trait = getTrait(type, isMethod, classMemberName);
					if (trait != null) {
						result.add(trait);
					}
				} catch (ModelException e) {
					if (DLTKCore.DEBUG) {
						e.printStackTrace();
					}
				}
			}
		}
		return result;
	}

