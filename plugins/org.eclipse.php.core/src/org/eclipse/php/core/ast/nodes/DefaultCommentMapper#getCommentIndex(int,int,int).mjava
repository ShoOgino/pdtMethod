	/*
	 * Get the index of comment which contains given position. If there's no
	 * matching comment, then return depends on exact parameter: = 0: return -1 < 0:
	 * return index of the comment before the given position > 0: return index of
	 * the comment after the given position
	 */
	private int getCommentIndex(int start, int position, int exact) {
		if (position == 0) {
			if (this.comments.length > 0 && this.comments[0].getStart() == 0) {
				return 0;
			}
			return -1;
		}
		int bottom = start, top = this.comments.length - 1;
		int i = 0, index = -1;
		Comment comment = null;
		while (bottom <= top) {
			i = bottom + (top - bottom) / 2;
			comment = this.comments[i];
			int commentStart = comment.getStart();
			if (position < commentStart) {
				top = i - 1;
			} else if (position >= (commentStart + comment.getLength())) {
				bottom = i + 1;
			} else {
				index = i;
				break;
			}
		}
		if (index < 0 && exact != 0) {
			comment = this.comments[i];
			if (position < comment.getStart()) {
				return exact < 0 ? i - 1 : i;
			} else {
				return exact < 0 ? i : i + 1;
			}
		}
		return index;
	}

