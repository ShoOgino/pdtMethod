	/**
	 * Sets or clears the "else" part of this if statement.
	 * <p>
	 * Note that there is a subtle difference between having no else part (as in
	 * <code>"if(true){}"</code>) and having an empty block (as in
	 * "if(true){}else{}") or null statement (as in "if(true){}else;").
	 * </p>
	 * <p>
	 * Special note: The Java language does not allow a local variable declaration
	 * to appear as the "else" part of an if statement (they may only appear within
	 * a block). However, the AST will allow a
	 * <code>VariableDeclarationStatement</code> as the elseStatement of a
	 * <code>IfStatement</code>. To get something that will compile, be sure to
	 * embed the <code>VariableDeclarationStatement</code> inside a
	 * <code>Block</code>.
	 * </p>
	 * 
	 * @param statement
	 *            the "else" statement node, or <code>null</code> if there is none
	 * @exception IllegalArgumentException
	 *                if:
	 *                <ul>
	 *                <li>the node belongs to a different AST</li>
	 *                <li>the node already has a parent</li>
	 *                <li>a cycle in would be created</li>
	 *                </ul>
	 */
	public void setFalseStatement(Statement statement) {
		ASTNode oldChild = this.falseStatement;
		preReplaceChild(oldChild, statement, FALSE_STATEMENT_PROPERTY);
		this.falseStatement = statement;
		postReplaceChild(oldChild, statement, FALSE_STATEMENT_PROPERTY);
	}

