	public CompletionCompanion(CompletionRequestor requestor, IModuleSource moduleSource, int offset) {
		this.offset = offset;
		this.sourceModule = (ISourceModule) moduleSource.getModelElement();
		this.phpVersion = ProjectOptions.getPHPVersion(getSourceModule().getScriptProject().getProject());
		try {
			this.document = determineDocument(sourceModule, requestor);
			if (this.document == null) {
				return;
			}
			structuredDocumentRegion = determineStructuredDocumentRegion(document, offset);
			if (structuredDocumentRegion == null) {
				return;
			}
			regionCollection = determineRegionCollection(document, structuredDocumentRegion, offset);
			if (regionCollection == null) {
				return;
			}
			phpScriptRegion = determinePHPRegion(document, regionCollection, offset);
			if (phpScriptRegion == null) {
				return;
			}
			partitionType = determinePartitionType(regionCollection, phpScriptRegion, offset);
			if (partitionType != null) {
				determineScope();
				determineNamespace();
			}
		} catch (ResourceAlreadyExists | IOException | CoreException | BadLocationException e) {
			Logger.logException(e);
		}
	}

