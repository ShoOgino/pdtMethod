	private void determineNamespace() throws BadLocationException {
		int pos = offset;
		if (pos >= document.getLength() - 1) {
			pos = document.getLength() - 1;
		}

		PHPHeuristicScanner scanner = new PHPHeuristicScanner(document,
				IStructuredPartitioning.DEFAULT_STRUCTURED_PARTITIONING, PHPPartitionTypes.PHP_DEFAULT);
		int token = PHPHeuristicScanner.UNBOUND;
		while (token != PHPHeuristicScanner.NOT_FOUND && pos > 0) {
			token = scanner.previousToken(pos, PHPHeuristicScanner.UNBOUND);
			pos = scanner.getPosition();
			if (token != PHPHeuristicScanner.NOT_FOUND) {
				ITextRegion textRegion = scanner.getTextRegion(pos);
				if (textRegion != null && textRegion.getType() == PHPRegionTypes.PHP_NAMESPACE) {
					int nameStart = scanner.findNonWhitespaceForward(pos, PHPHeuristicScanner.UNBOUND);
					if (!Character.isWhitespace(document.getChar(pos))) {
						continue;
					}
					int nameEnd = nameStart;
					int detectRange = PHPHeuristicScanner.NOT_FOUND;
					char part = document.getChar(nameEnd);
					if (part != PHPHeuristicScanner.LBRACE) {
						StringBuilder name = new StringBuilder();
						while (Character.isJavaIdentifierPart(part) || part == NamespaceReference.NAMESPACE_SEPARATOR) {
							name.append(part);
							nameEnd++;
							part = document.getChar(nameEnd);
						}
						currentNamespaceName = name.toString();
						if (Character.isWhitespace(part)) {
							nameEnd = scanner.findNonWhitespaceForward(nameEnd, PHPHeuristicScanner.UNBOUND);
							if (nameEnd != PHPHeuristicScanner.NOT_FOUND) {
								part = document.getChar(nameEnd);
							}
						}
						if (part == PHPHeuristicScanner.LBRACE) {
							detectRange = nameEnd;
						}
					} else {
						detectRange = nameStart;
					}
					if (detectRange != PHPHeuristicScanner.NOT_FOUND) {
						int close = scanner.findClosingPeer(detectRange, PHPHeuristicScanner.LBRACE,
								PHPHeuristicScanner.RBRACE);
						if (close != PHPHeuristicScanner.NOT_FOUND) {
							currentNamespaceRange = new SourceRange(textRegion.getStart(),
									close - textRegion.getStart());
						}
					}
					break;
				} else if (textRegion instanceof IPHPScriptRegion) {
					pos = textRegion.getStart() - 1;
				}
			}
		}
		if (currentNamespaceRange == null) {
			currentNamespaceRange = new SourceRange(0, document.getLength());
		}
	}

