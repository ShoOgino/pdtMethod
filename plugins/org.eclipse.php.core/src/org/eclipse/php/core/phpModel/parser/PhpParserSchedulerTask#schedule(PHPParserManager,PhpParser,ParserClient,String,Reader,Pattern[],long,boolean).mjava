	/**
	 * PRODUCER - Schedules a new operation for the parser stack
	 * @param phpParser
	 * @param client
	 * @param reader
	 * @param lastModified
	 */
	public synchronized void schedule(PHPParserManager parserManager, PhpParser phpParser, ParserClient client, String filename, Reader reader, Pattern[] tasksPatterns, long lastModified, boolean useAspTagsAsPhp) {

		synchronized (bufferSyncronizer) {
			
			// add it (saftly)
			// if the stack is full - wait() for an empty place 
			while (buffer.size() >= BUFFER_MAX_SIZE) {
				try {
					bufferSyncronizer.wait();
				} catch (InterruptedException e) {
					// process of scheduling was canceled
					// ignore operation
				}
			}

			// creates the new task properties
			final ParserExecuter parserProperties = new ParserExecuter(parserManager, phpParser, client, filename, reader, tasksPatterns, lastModified, useAspTagsAsPhp);

			// adds  the task to the head of the list
			buffer.addFirst(parserProperties);

			// now you can notify that the stack is not empty
			bufferSyncronizer.notifyAll();
			
		}
	}

