	private void recursiveParse(File folder, ParserClient client, PHPIncludePathModel model, PHPIncludePathModel cachedModel) {
		File[] children = folder.listFiles();

		for (int i = 0; i < children.length; i++) {
			if (children[i].isDirectory()) {
				recursiveParse(children[i], client, model, cachedModel);
			} else if (children[i].isFile()) {
				File file = children[i];
				if (isPhpFile(file.getName())) {
					String fileName = file.getPath();
					PHPFileData fileData = cachedModel.getFileData(fileName);
					// If the file is cached, update the model with the cached version.
					if (isValid(fileData, file)) {
						model.insert(fileData);
						cachedModel.delete(fileName);
					} else {
						// add the model to the list of need-to-cache models
						modelsToCache.put(model, model);
						parse(file, client);
					}
				}
			}
		}
	}

