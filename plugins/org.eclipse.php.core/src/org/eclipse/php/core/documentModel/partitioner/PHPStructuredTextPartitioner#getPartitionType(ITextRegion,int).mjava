	public String getPartitionType(ITextRegion region, int offset) {
		String result = null;

		if (region instanceof PHPContentRegion) {
			if (PhpLexer.isPHPMultiLineCommentState(region.getType())) {
				result = PHPPartitionTypes.PHP_MULTI_LINE_COMMENT;
			} else if (PhpLexer.isPHPLineCommentState(region.getType())) {
				result = PHPPartitionTypes.PHP_SINGLE_LINE_COMMENT;
			} else if (PhpLexer.isPHPDocState(region.getType())) {
				result = PHPPartitionTypes.PHP_DOC;
			} else if (PhpLexer.isPHPQuotesState(region.getType())) {
				result = PHPPartitionTypes.PHP_QUOTED_STRING;
			} else if (PHPRegionTypes.TASK.equals(region.getType())) {
				// return the previous region type
				IStructuredDocumentRegion docRegion = fStructuredDocument.getRegionAtCharacterOffset (offset);
				ITextRegion prevRegion = docRegion.getRegionAtCharacterOffset(docRegion.getStartOffset() + region.getStart() - 1);
				result = getPartitionType (prevRegion, offset);
			} else {
				result = PHPPartitionTypes.PHP_DEFAULT;
			}
		} else if (region.getType() == PHPRegionTypes.PHP_OPENTAG || region.getType() == PHPRegionTypes.PHP_CLOSETAG) {
			result = PHPPartitionTypes.PHP_DEFAULT;
		} else {
			result = super.getPartitionType(region, offset);
		}
		
		return result;
	}

