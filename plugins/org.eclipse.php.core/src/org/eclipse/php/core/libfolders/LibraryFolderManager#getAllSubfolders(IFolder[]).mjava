	/**
	 * Returns all subfolders (recursively) of the given folders.
	 * 
	 * <p>
	 * This method invokes {@link #getAllSubfolders(IFolder)} for each of the
	 * folders in the given array and merges the result.
	 * </p>
	 * 
	 * @param folders
	 *            an array of folders
	 * 
	 * @return an array of folders containing the folders of the given array and all
	 *         their subfolders
	 * 
	 * @throws CoreException
	 *             if any of the folders does not exist or is in a closed project
	 */
	public IFolder[] getAllSubfolders(IFolder[] folders) throws CoreException {
		Collection<IFolder> allSubfolders = new HashSet<>();

		for (IFolder folder : folders) {
			allSubfolders.addAll(Arrays.asList(getAllSubfolders(folder)));
		}

		return allSubfolders.toArray(new IFolder[allSubfolders.size()]);
	}

