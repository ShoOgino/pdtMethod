	/**
	 * Disables validation for the given folder in the WTP Validation Framework.
	 * 
	 * <p>
	 * This method cleans up the disabled state for all subfolders of the given
	 * folder. This is necessary to avoid nested declarations of library folders.
	 * Otherwise, if the user marks a library folder as a source folder and there
	 * are nested library folders then there will be still subfolders which remain
	 * library folders.
	 * </p>
	 * 
	 * @param folder
	 *            a folder to disable validation for
	 * 
	 * @throws CoreException
	 *             if any of the folders does not exist or is in a closed project
	 */
	public void disableValidation(IFolder folder) throws CoreException {
		ValidationFramework vf = ValidationFramework.getDefault();

		// clean up the state of all subfolders
		for (IFolder subfolder : getAllSubfolders(folder)) {
			vf.enableValidation(subfolder);
		}

		if (!isInLibraryFolder(folder)) {
			// disable the given folder only if no parent folder is a library
			// folder yet
			vf.disableValidation(folder);
		}
	}

