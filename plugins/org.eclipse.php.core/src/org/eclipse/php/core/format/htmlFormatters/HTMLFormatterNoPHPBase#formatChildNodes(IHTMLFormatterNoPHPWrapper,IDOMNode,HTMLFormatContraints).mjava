	/**
	 */
	public static void formatChildNodes(IHTMLFormatterNoPHPWrapper f, IDOMNode node, HTMLFormatContraints contraints) {
		if (node == null)
			return;
		if (!node.hasChildNodes())
			return;

		// concat adjacent texts
		node.normalize();

		// disable sibling indent during formatting all the children
		boolean indent = false;
		if (contraints != null) {
			indent = contraints.getFormatWithSiblingIndent();
			contraints.setFormatWithSiblingIndent(false);
		}

		boolean insertBreak = true;
		IDOMNode child = (IDOMNode) node.getFirstChild();
		while (child != null) {
			if (child.getParentNode() != node)
				break;
			IDOMNode next = (IDOMNode) child.getNextSibling();

			if (isPHPNode(child)) {
				child = next;
				continue;
			}
			if (child instanceof TextImpl) {
				TextImpl text = (TextImpl) child;
				// If the text is empty but after it there is a PHP then we don't want to 
				// indent either.

				//empty: if there is only one sdRegion and is text is empty
				if (text.getFirstStructuredDocumentRegion() == text.getLastStructuredDocumentRegion()) {
					String textStr = text.getFirstStructuredDocumentRegion().getText().trim();
					if (textStr.equals("")) {
						if (isPHPNode(next)) {
							child = next;
							continue;
						}
					}
				}
			}

			if (insertBreak && f.runCanInsertBreakBefore(child)) {
				f.runInsertBreakBefore(child, contraints);
			}

			IStructuredFormatter formatter = HTMLFormatterNoPHPFactory.getInstance().createFormatter(child, f.getFormatPreferences());
			if (formatter != null) {
				if (formatter instanceof IHTMLFormatterNoPHPWrapper) {
					IHTMLFormatterNoPHPWrapper htmlFormatter = (IHTMLFormatterNoPHPWrapper) formatter;
					htmlFormatter.runFormatNode(child, contraints);
				} else {
					formatter.format(child);
				}
			}

			if (f.runCanInsertBreakAfter(child)) {
				f.runInsertBreakAfter(child, contraints);
				insertBreak = false; // not to insert twice
			} else {
				insertBreak = true;
			}

			child = next;
		}

		if (contraints != null)
			contraints.setFormatWithSiblingIndent(indent);
	}

