	public void store(final Writer output, final int mode) {
		final PrintWriter pr = new PrintWriter(output);

		final Iterator i = values().iterator();
		Ini.Section s;
		for (; i.hasNext();)
		//        for(Ini.Section s : values())
		{
			s = (Ini.Section) i.next();
			String sectionName = s.getName();

			if (!sectionName.equals(IniParser.DEFAULT_SECTION_NAME)) {
				pr.print(IniParser.SECTION_BEGIN);
				if ((mode & IGNORE_ESCAPE) == 0)
					sectionName = Convert.escape(sectionName);
				pr.print(sectionName);
				pr.println(IniParser.SECTION_END);
			}

			final Iterator j = s.entrySet().iterator();
			Map.Entry e;
			for (; j.hasNext();)
			//            for(Map.Entry<String,String> e : s.entrySet())
			{
				e = (Map.Entry) j.next();
				String key = (String) e.getKey();
				List values = (List) e.getValue();
				String value;
				for (Iterator k = values.iterator(); k.hasNext();) {
					value = (String) k.next();
					if ((mode & IGNORE_ESCAPE) == 0) {
						key = Convert.escape(key);
						value = Convert.escape(value);
					}
					if ((mode & FORCE_QUOTES) > 0)
						value = "\"" + value + "\""; //$NON-NLS-1$ //$NON-NLS-2$
					pr.print(key);
					pr.print(OPERATOR);
					pr.print(value);
					pr.println();
				}
			}

			pr.println();
		}
		pr.flush();
	}

