	protected synchronized void setProperty(final String property, Object value, final Class/*<?>*/clazz) throws PropertyVetoException {
		try {
			final boolean pc = _pcSupport != null && _pcSupport.hasListeners(property);
			final boolean vc = _vcSupport != null && _vcSupport.hasListeners(property);
			final Object old = pc || vc ? getProperty(property, clazz) : null;

			if (vc)
				fireVetoableChange(property, old, value);

			if (clazz.equals(String.class) && !(value instanceof String))
				value = value.toString();

			setPropertySpi(property, value, clazz);

			if (pc)
				firePropertyChange(property, old, value);
		} catch (final PropertyVetoException x) {
			throw x;
		} catch (final Exception x) {
			;
		}
	}

