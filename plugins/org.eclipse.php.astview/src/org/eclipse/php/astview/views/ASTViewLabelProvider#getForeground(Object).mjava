	@Override
	public Color getForeground(Object element) {
		if ((element instanceof Error)) {
			return fRed;
		}
		if ((element instanceof ExceptionAttribute) && ((ExceptionAttribute) element).getException() != null) {
			return fRed;
		}
		
		if (element instanceof ASTNode) {
			ASTNode node= (ASTNode) element;
			if ((node.getFlags() & ASTNode.MALFORMED) != 0) {
				return fRed;
			}
			return fDarkGray;
		} else if (element instanceof Binding) {
			Binding binding= (Binding) element;
			if (!binding.isRelevant()) {
				return fDarkGray;
			}
			return fBlue;
		} else if (element instanceof NodeProperty) {
			return null; // normal color
		} else if (element instanceof BindingProperty) {
			BindingProperty binding= (BindingProperty) element;
			if (!binding.isRelevant()) {
				return fDarkGray;
			}
			return fBlue;
		} else if (element instanceof PhpElement) {
			PhpElement javaElement= (PhpElement) element;
			if (javaElement.getPhpElement() == null || ! javaElement.getPhpElement().exists()) {
				return fRed;
			}
			return fDarkGreen;
		}
		return fDarkRed; // all extra properties
	}

