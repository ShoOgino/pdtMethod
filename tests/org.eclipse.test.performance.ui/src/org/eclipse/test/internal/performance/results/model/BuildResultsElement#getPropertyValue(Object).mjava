/* (non-Javadoc)
 * @see org.eclipse.ui.views.properties.IPropertySource#getPropertyValue(java.lang.Object)
 */
public Object getPropertyValue(Object propKey) {
	BuildResults buildResults = getBuildResults();
	if (buildResults != null) {
		ConfigResults configResults = (ConfigResults) buildResults.getParent();
		BuildResults baselineResults = configResults.getBaselineBuildResults(buildResults.getName());
	    if (propKey.equals(P_ID_BUILD_DATE))
	        return buildResults.getDate();
	    if (propKey.equals(P_ID_BUILD_COMMENT))
	        return buildResults.getComment();
	    if (propKey.equals(P_ID_BUILD_SUMMARY_KIND)) {
	    	int summaryKind = buildResults.getSummaryKind();
			if (summaryKind == 1) {
	    		return "global";
	    	}
	    	if (summaryKind >= 0) {
	    		return "component";
	    	}
	    	return "none";
	    }
	    if (propKey.equals(P_ID_BUILD_IS_BASELINE))
	        return new Boolean(buildResults.isBaseline());
	    if (propKey.equals(P_ID_BUILD_FAILURE))
	        return buildResults.getFailure();
	    if (baselineResults != null) {
		    if (propKey.equals(P_ID_BUILD_BASELINE)) {
		        return baselineResults.getName();
		    }
			double buildValue = buildResults.getValue();
			double baselineValue = baselineResults.getValue();
			double delta = (baselineValue - buildValue) / baselineValue;
			if (Double.isNaN(delta)) {
			    if (propKey.equals(P_ID_BUILD_DELTA) || propKey.equals(P_ID_BUILD_ERROR)) {
			        return new Double(Double.NaN);
			    }
			} else  if (propKey.equals(P_ID_BUILD_DELTA)) {
				return new Double(delta);
		    } else {
				long baselineCount = baselineResults.getCount();
				long currentCount = buildResults.getCount();
				if (baselineCount > 1 && currentCount > 1) {
					if (propKey.equals(P_ID_BUILD_TTEST)) {
						double ttestValue = Util.computeTTest(baselineResults, buildResults);
						int degreeOfFreedom = (int) (baselineResults.getCount()+buildResults.getCount()-2);
						if (ttestValue >= 0 && StatisticsUtil.getStudentsT(degreeOfFreedom, StatisticsUtil.T90) >= ttestValue) {
							return new Double(ttestValue);
						}
					}
				    if (propKey.equals(P_ID_BUILD_ERROR)) {
						double baselineError = baselineResults.getError();
						double currentError = buildResults.getError();
						double error = Double.isNaN(baselineError)
								? currentError / baselineValue
								: Math.sqrt(baselineError*baselineError + currentError*currentError) / baselineValue;
				        return new Double(error);
				    }
				} else {
				    if (propKey.equals(P_ID_BUILD_ERROR))
				        return new Double(-1);
				}
			}
	    }
	}
	if (propKey.equals(P_ID_STATUS_ERROR)) {
		if ((getStatus() & BIG_DELTA) != 0) {
			return "The delta on this test is over the 10% threshold, hence may indicate a possible regression.";
		}
	}
	return super.getPropertyValue(propKey);
}

