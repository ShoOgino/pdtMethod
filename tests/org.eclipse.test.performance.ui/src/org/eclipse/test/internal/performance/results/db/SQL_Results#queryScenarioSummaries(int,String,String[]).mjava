/**
 * Query all summaries from database for a given scenario,
 * configuration and builds.
 *
 * @param config The name of the concerned configuration
 * @param scenarioID The id of the scenario
 * @param builds The list of builds to get summaries. When <code>null</code>
 * 	summaries for all DB builds will be read.
 *
 * @return Set of the query result
 * @throws SQLException
 */
@SuppressWarnings("null")
ResultSet queryScenarioSummaries(int scenarioID, String config, String[] builds) throws SQLException {
	int length = builds==null ? 0 : builds.length;
	String buildPattern;
	switch (length) {
		case 0:
			buildPattern = "%"; //$NON-NLS-1$
			break;
		case 1:
			buildPattern = builds[0];
			break;
		default:
			StringBuffer buffer = new StringBuffer();
			loop: for (int idx=0; idx < builds[0].length(); idx++) {
				char ch = builds[0].charAt(idx);
				for (int i=1; i<length; i++) {
					if (idx == builds[i].length()) {
						break loop;
					}
					if (builds[i].charAt(idx) != ch) {
						buffer.append('_');
						continue loop;
					}
				}
				buffer.append(ch);
			}
			buffer.append("%"); //$NON-NLS-1$
			buildPattern = buffer.toString();
			break;
	}
	if (this.queryScenarioSummaries == null) {
		this.queryScenarioSummaries= this.fConnection.prepareStatement("select KEYVALPAIRS , IS_GLOBAL, COMMENT_ID, DIM_ID from VARIATION, SUMMARYENTRY where " + //$NON-NLS-1$
			"KEYVALPAIRS like ? and " + //$NON-NLS-1$
			"VARIATION_ID = VARIATION.ID and " + //$NON-NLS-1$
			"SCENARIO_ID = ? and " + //$NON-NLS-1$
			"(DIM_ID = "+InternalDimensions.ELAPSED_PROCESS.getId()+" or DIM_ID = 0)" + //$NON-NLS-1$ //$NON-NLS-2$
			" order by VARIATION_ID, DIM_ID"); //$NON-NLS-1$
	}
	this.queryScenarioSummaries.setString(1, "|build="+buildPattern+"||config="+ config + "||jvm=sun|"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	this.queryScenarioSummaries.setInt(2, scenarioID);
	return this.queryScenarioSummaries.executeQuery();
}

