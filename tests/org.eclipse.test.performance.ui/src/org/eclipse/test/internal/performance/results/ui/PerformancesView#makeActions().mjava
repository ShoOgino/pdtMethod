/*
 * Make common actions to performance views.
 */
void makeActions() {

	// Change data dir action
	this.changeDataDir = new Action("&Read...") {
		@Override
		public void run() {
			changeDataDir();
		}
	};
	this.changeDataDir.setToolTipText("Change the directory of the local data files");
//	this.changeDataDir.setImageDescriptor(ResultsElement.FOLDER_IMAGE_DESCRIPTOR);

	// Filter baselines action
	this.filterBaselineBuilds = new Action("&Baselines", IAction.AS_CHECK_BOX) {
		@Override
		public void run() {
			if (isChecked()) {
				PerformancesView.this.viewFilters.add(FILTER_BASELINE_BUILDS);
			} else {
				PerformancesView.this.viewFilters.remove(FILTER_BASELINE_BUILDS);
			}
			updateFilters();
        }
	};
	this.filterBaselineBuilds.setToolTipText("Filter baseline builds");

	// Filter baselines action
	this.filterNightlyBuilds = new Action("&Nightly", IAction.AS_CHECK_BOX) {
		@Override
		public void run() {
			filterNightlyBuilds(isChecked(), true/*update preference*/);
		}
	};
	this.filterNightlyBuilds.setToolTipText("Filter nightly builds");

	// Filter non-important builds action
	this.filterOldBuilds = new Action("&Old Builds", IAction.AS_CHECK_BOX) {
		@Override
		public void run() {
			filterOldBuilds(isChecked(), true/*update preference*/);
		}
	};
	this.filterOldBuilds.setChecked(false);
	this.filterOldBuilds.setToolTipText("Filter old builds (i.e. before last milestone) but keep all previous milestones)");
}

