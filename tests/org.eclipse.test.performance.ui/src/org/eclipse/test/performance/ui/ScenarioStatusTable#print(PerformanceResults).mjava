/**
 * Prints the HTML representation of scenario status table into the given stream.
 */
public void print(PerformanceResults performanceResults) {

	String baselineName = performanceResults.getBaselineName();
	List<?> scenarios = performanceResults.getComponentScenarios(this.component);
	int size = scenarios.size();

	// Print titles
	printTitle();
	this.stream.print("<table border=\"1\">\n");
	this.stream.print("<tr>\n");
	this.stream.print("<td><h4>All ");
	this.stream.print(computeSize(scenarios));
	this.stream.print(" scenarios</h4></td>\n");
	printColumnsTitle(size, performanceResults);

	// Print one line per scenario results
	this.jsIdCount = 0;
	for (int i=0; i<size; i++) {
		ScenarioResults scenarioResults = (ScenarioResults) scenarios.get(i);
		if (!scenarioResults.isValid()) continue;
		this.stream.print("<tr>\n");
		this.stream.print("<td>");
		boolean hasSummary = scenarioResults.hasSummary();
		if (hasSummary) this.stream.print("<b>");
		String scenarioBaseline = scenarioResults.getBaselineBuildName();
		boolean hasBaseline = baselineName.equals(scenarioBaseline);
		if (!hasBaseline) {
			this.stream.print("*");
			this.stream.print(scenarioResults.getShortName());
			this.stream.print(" <small>(vs.&nbsp;");
			this.stream.print(scenarioBaseline);
			this.stream.print(")</small>");
		} else {
			this.stream.print(scenarioResults.getShortName());
		}
		if (hasSummary) this.stream.print("</b>");
		this.stream.print("\n");
		String[] configs = performanceResults.getConfigNames(true/*sort*/);
		int length = configs.length;
		for (int j=0; j<length; j++) {
			printConfigStats(scenarioResults, configs[j]);
		}
	}
	this.stream.print("</table>\n");
}

