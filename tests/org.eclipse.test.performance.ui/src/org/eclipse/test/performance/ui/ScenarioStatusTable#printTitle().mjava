/*
 * Print the status table explanationtitle.
 */
private void printTitle() {
	this.stream.print("<br><h4>Scenario Status</h4>\n");
	this.stream.print("The following table gives a complete but compact view of performance results for the component.<br>\n");
	this.stream.print("Each line of the table shows the results for one scenario on all machines.<br><br>\n");
	this.stream.print("The name of the scenario is in <b>bold</b> when its results are also displayed in the fingerprints<br>\n");
	this.stream.print("and starts with an '*' when the scenario has no results in the last baseline run.<br><br>\n");
	this.stream.print("Here are information displayed for each test (ie. in each cell):\n");
	this.stream.print("<ul>\n");
	this.stream.print("<li>an icon showing whether the test fails or passes and whether it's reliable or not.<br>\n");
	this.stream.print("The legend for this icon is:\n");
	this.stream.print("<ul>\n");
	this.stream.print("<li>Green (<img src=\"");
	this.stream.print(Utils.OK_IMAGE);
	this.stream.print("\">): mark a <b>successful result</b>, which means this test has neither significant performance regression nor significant standard error</li>");
	this.stream.print("<li>Red (<img src=\"");
	this.stream.print(Utils.FAIL_IMAGE);
	this.stream.print("\">): mark a <b>failing result</b>, which means this test shows a significant performance regression (more than 10%)</li>\n");
	this.stream.print("<li>Gray (<img src=\"");
	this.stream.print(Utils.FAIL_IMAGE_EXPLAINED);
	this.stream.print("\">): mark a <b>failing result</b> (see above) with a comment explaining this degradation.</li>\n");
	this.stream.print("<li>Yellow (<img src=\"");
	this.stream.print(Utils.FAIL_IMAGE_WARN);
	this.stream.print("\"> or <img src=\"");
	this.stream.print(Utils.OK_IMAGE_WARN);
	this.stream.print("\">): mark a <b>failing or successful result</b> with a significant standard error (more than ");
	this.stream.print(Utils.STANDARD_ERROR_THRESHOLD_STRING);
	this.stream.print(")</li>\n");
	this.stream.print("<li>Black (<img src=\"");
	this.stream.print(Utils.UNKNOWN_IMAGE);
	this.stream.print("\">): mark an <b>undefined result</b>, which means that deviation on this test is not a number (<code>NaN</code>) or is infinite (happens when the reference value is equals to 0!)</li>");
	this.stream.print("<li>\"n/a\": mark a test for with <b>no</b> performance results</li>\n");
	this.stream.print("</ul></li>\n");
	this.stream.print("<li>the value of the deviation from the baseline as a percentage (ie. formula is: <code>(build_test_time - baseline_test_time) / baseline_test_time</code>)</li>\n");
	this.stream.print("<li>the value of the standard error of this deviation as a percentage (ie. formula is: <code>sqrt(build_test_stddev^2 / N + baseline_test_stddev^2 / N) / baseline_test_time</code>)<br>\n");
	this.stream.print("When test only has one measure, the standard error cannot be computed and is replaced with a '<font color=\"#CCCC00\">[n/a]</font>'.</li>\n");
	this.stream.print("</ul>\n");
	this.stream.print("<u>Hints</u>:<ul>\n");
	this.stream.print("<li>fly over image of failing tests to see the complete error message</li>\n");
	this.stream.print("<li>to look at the complete and detailed test results, click on its image</li>\n");
	this.stream.print("</ul>\n");
}

