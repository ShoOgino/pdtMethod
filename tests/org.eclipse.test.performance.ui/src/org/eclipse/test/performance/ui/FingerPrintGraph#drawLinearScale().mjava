void drawLinearScale() {

	// Draw scale background
	drawScaleBackground();

	// Draw scale grid lines
	int gridValue = 100;
	int n = (int) (this.maxValue / gridValue);
	while (n > 10) {
		switch (gridValue) {
			case 100:
				gridValue = 200;
				break;
			case 200:
				gridValue = 500;
				break;
			case 500:
				gridValue = 1000;
				break;
			default:
				gridValue += 1000;
				break;
		}
		n = (int) (this.maxValue / gridValue);
	}
	int gridWidth = (int) (this.graphWidth * gridValue / this.maxValue);
	int x = MARGIN;
	long value = 0; // TODO use minValue instead
	while (x < this.graphWidth) {

		// draw line
		this.gc.setForeground(GRAY);
		if (x > 0) {
			this.gc.setLineStyle(SWT.LINE_DOT);
			this.gc.drawLine(x, MARGIN, x, this.graphHeight + TGAP);
		}

		// draw value
		this.gc.setForeground(BLACK);
		String val= Util.timeString(value);
		Point point= this.gc.stringExtent(val);
		this.gc.drawString(val, x - point.x / 2, this.graphHeight + TGAP, true);

		// compute next grid position
		x += gridWidth;
		value += gridValue; // value is expressed in seconds
	}
	this.gc.setLineStyle(SWT.LINE_SOLID);
	this.gc.drawLine(0, this.graphHeight, this.graphWidth, this.graphHeight);
}

