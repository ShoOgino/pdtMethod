	private void initialize() throws SQLException {
		Statement stmt= null;
		try {
			stmt= fConnection.createStatement();
			stmt.executeUpdate("create table VARIATION (" + //$NON-NLS-1$
					"ID int unique not null GENERATED ALWAYS AS IDENTITY," + //$NON-NLS-1$
					"KEYVALPAIRS varchar(10000) not null " + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table SCENARIO (" + //$NON-NLS-1$
					"ID int unique not null GENERATED ALWAYS AS IDENTITY," + //$NON-NLS-1$
					"NAME varchar(256) not null," + //$NON-NLS-1$
					"SHORT_NAME varchar(40)" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table SAMPLE (" + //$NON-NLS-1$
					"ID int not null GENERATED ALWAYS AS IDENTITY," + //$NON-NLS-1$
					"VARIATION_ID int not null," + //$NON-NLS-1$
					"SCENARIO_ID int not null," + //$NON-NLS-1$
					"STARTTIME timestamp" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table DATAPOINT (" + //$NON-NLS-1$
					"ID int not null GENERATED ALWAYS AS IDENTITY," + //$NON-NLS-1$
					"SAMPLE_ID int not null," + //$NON-NLS-1$
					"SEQ int," + //$NON-NLS-1$
					"STEP int" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table SCALAR (" + //$NON-NLS-1$
					"DATAPOINT_ID int not null," + //$NON-NLS-1$
					"DIM_ID int not null," + //$NON-NLS-1$
					"VALUE bigint" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table SUMMARYENTRY (" + //$NON-NLS-1$
					"VARIATION_ID int not null," + //$NON-NLS-1$
					"SCENARIO_ID int not null," + //$NON-NLS-1$
					"DIM_ID int not null," + //$NON-NLS-1$
					"IS_GLOBAL smallint not null," + //$NON-NLS-1$
					"COMMENT_ID int not null" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table FAILURE (" + //$NON-NLS-1$
					"VARIATION_ID int not null," + //$NON-NLS-1$
					"SCENARIO_ID int not null," + //$NON-NLS-1$
					"MESSAGE varchar(1000) not null" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			stmt.executeUpdate("create table COMMENT (" + //$NON-NLS-1$
					"ID int unique not null GENERATED ALWAYS AS IDENTITY," + //$NON-NLS-1$
					"KIND int not null," + //$NON-NLS-1$
					"TEXT varchar(400) not null" + //$NON-NLS-1$
					")" //$NON-NLS-1$
			);
			
			// Primary/unique
			stmt.executeUpdate("alter table VARIATION add constraint VA_KVP primary key (KEYVALPAIRS)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table SCENARIO add constraint SC_NAME primary key (NAME)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table SAMPLE add constraint SA_ID primary key (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table DATAPOINT add constraint DP_ID primary key (ID)"); //$NON-NLS-1$

			// Foreign
			stmt.executeUpdate("alter table SAMPLE add constraint SAMPLE_CONSTRAINT " + //$NON-NLS-1$
					"foreign key (VARIATION_ID) references VARIATION (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table SAMPLE add constraint SAMPLE_CONSTRAINT2 " + //$NON-NLS-1$
					"foreign key (SCENARIO_ID) references SCENARIO (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table DATAPOINT add constraint DP_CONSTRAINT " + //$NON-NLS-1$
					"foreign key (SAMPLE_ID) references SAMPLE (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table SCALAR add constraint SCALAR_CONSTRAINT " + //$NON-NLS-1$
					"foreign key (DATAPOINT_ID) references DATAPOINT (ID)"); //$NON-NLS-1$

			stmt.executeUpdate("alter table SUMMARYENTRY add constraint FP_CONSTRAINT " + //$NON-NLS-1$
					"foreign key (VARIATION_ID) references VARIATION (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table SUMMARYENTRY add constraint FP_CONSTRAINT2 " + //$NON-NLS-1$
					"foreign key (SCENARIO_ID) references SCENARIO (ID)"); //$NON-NLS-1$

			stmt.executeUpdate("alter table FAILURE add constraint FA_CONSTRAINT " + //$NON-NLS-1$
					"foreign key (VARIATION_ID) references VARIATION (ID)"); //$NON-NLS-1$
			stmt.executeUpdate("alter table FAILURE add constraint FA_CONSTRAINT2 " + //$NON-NLS-1$
					"foreign key (SCENARIO_ID) references SCENARIO (ID)"); //$NON-NLS-1$

			fConnection.commit();

		} finally {
			if (stmt != null)
				stmt.close();
		}
	}

