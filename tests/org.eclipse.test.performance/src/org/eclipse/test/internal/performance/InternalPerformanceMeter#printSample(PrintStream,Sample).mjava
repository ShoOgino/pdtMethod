	private void printSample(PrintStream ps, Sample sample) {
		ps.print("Scenario '" + getScenarioName() + "' "); //$NON-NLS-1$ //$NON-NLS-2$
		DataPoint[] dataPoints= sample.getDataPoints();
		if (dataPoints.length > 0) {
			StatisticsSession s= new StatisticsSession(dataPoints);
			Dim[] dimensions= dataPoints[0].getDimensions();
			Arrays.sort(dimensions, new DimensionComparator());
			if (dimensions.length > 0) {
				List<Dim> badDimensions= new ArrayList<>();
				long n= s.getCount(dimensions[0]);
				MessageFormat format= new MessageFormat("({0,number,percent} in [{1}, {2}])"); //$NON-NLS-1$

				String spaces= "                                                                                                       "; //$NON-NLS-1$

				ps.println("(average over " + n + " samples):"); //$NON-NLS-1$ //$NON-NLS-2$
				for (int i= 0; i < dimensions.length; i++) {
					Dim dimension= dimensions[i];
					double mean= s.getAverage(dimension);

					String nameString= "  " + dimension.getName() + ":"; //$NON-NLS-1$ //$NON-NLS-2$
					String meanString= dimension.getDisplayValue(mean);
					int align= firstNonDigit(meanString);
					int endIndex = 30 - align - nameString.length();
					if (endIndex > 0) meanString= spaces.substring(0, endIndex) + meanString;

					align= nameString.length() + meanString.length();

					Percentile percentile= StatisticsUtil.T95;
					double[] confidenceInterval= s.getConfidenceInterval(dimension, percentile);

					StringBuffer printBuffer;
					if (n <= 2) {
						printBuffer = new StringBuffer(" (no confidence)"); //$NON-NLS-1$
					} else {
						printBuffer = new StringBuffer();
						int ns = align;
						while (ns++ < 40) printBuffer.append(' ');
						printBuffer.append(format.format(new Object[] {new Double(percentile.inside()), dimension.getDisplayValue(confidenceInterval[0]), dimension.getDisplayValue(confidenceInterval[1])}));
					}

					align+= printBuffer.length();
					try {
						while (align++ < 70) printBuffer.append(' ');
						printBuffer.append(checkSampleSize(s, sample, dimension));
					} catch (CoreException x) {
						badDimensions.add(dimension);
						continue;
					}

					ps.print(nameString);
					ps.print(meanString);
					ps.println(printBuffer);
				}
				
				if (!badDimensions.isEmpty()) {
					ps.print("  Dimensions with unusable statistical properties: "); //$NON-NLS-1$
					for (Iterator<Dim> iter= badDimensions.iterator(); iter.hasNext();) {
						Dim dimension= iter.next();
						ps.print(dimension.getName());
						if (iter.hasNext())
							ps.print(", "); //$NON-NLS-1$
					}
					ps.println();
				}
			}
		}
		ps.println();
	}

