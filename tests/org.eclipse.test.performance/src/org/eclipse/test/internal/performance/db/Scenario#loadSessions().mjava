    private void loadSessions() {
        if (fSessions != null)
            return;
        
        loadSeriesNames();
        
        long start;
        Variations v= (Variations) fSharedState.fVariations.clone();
        if (DEBUG) start= System.currentTimeMillis();
        ArrayList<StatisticsSession> sessions= new ArrayList<>();
        ArrayList<String> names2= new ArrayList<>();
        Set<Dim> dims= new HashSet<>();
        for (int t= 0; t < fSeriesNames.length; t++) {
            v.put(fSharedState.fSeriesKey, fSeriesNames[t]);
            DataPoint[] dps= DB.queryDataPoints(v, fScenarioName, fSharedState.fQueryDimensions);
            if (DEBUG) System.err.println("  dps length: " + dps.length); //$NON-NLS-1$
            if (dps.length > 0) {
                dims.addAll(dps[0].getDimensions2());
                sessions.add(new StatisticsSession(dps));
                names2.add(fSeriesNames[t]);
            }
        }
        if (DEBUG) System.err.println("data: " + (System.currentTimeMillis()-start)); //$NON-NLS-1$

        fSessions= sessions.toArray(new StatisticsSession[sessions.size()]);
        fSeriesNames= names2.toArray(new String[sessions.size()]);
        
        fDimensions= dims.toArray(new Dim[dims.size()]);
        Arrays.sort(fDimensions,
        new Comparator<Object>() {
            	@Override
				public int compare(Object o1, Object o2) {
            	    Dim d1= (Dim)o1;
            	    Dim d2= (Dim)o2;
            	    return d1.getName().compareTo(d2.getName());
            	}
        	}
        );
    }

