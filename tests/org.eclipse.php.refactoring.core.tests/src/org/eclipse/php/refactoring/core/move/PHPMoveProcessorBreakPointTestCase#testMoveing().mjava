	@Test
	public void testMoveing() {
		PHPMoveProcessor processor = new PHPMoveProcessor(project1.getProject().getFolder("src"));

		RefactoringStatus status = processor.checkInitialConditions(new NullProgressMonitor());

		assertEquals(IStatus.OK, status.getSeverity());

		processor.setDestination(project1.getFolder("src1"));
		processor.setUpdateReferences(true);

		try {
			Change change = processor.createChange(new NullProgressMonitor());
			change.perform(new NullProgressMonitor());
		} catch (OperationCanceledException e) {
			fail(e.getMessage());
		} catch (CoreException e) {
			fail(e.getMessage());
		} catch (Exception e) {
			fail(e.getMessage());
		}

		try {
			Thread.sleep(3000);
		} catch (InterruptedException e1) {
		}

		IFile file = project1.getFile("src1/src/RunBreakPoint.php");
		try {
			IMarker[] markers = file.findMarkers("org.eclipse.php.debug.core.PHPConditionalBreakpointMarker", false,
					IResource.DEPTH_ONE);
			assertNotNull(markers);
			assertTrue(markers.length > 0);

			final IBreakpointManager breakpointManager = DebugPlugin.getDefault().getBreakpointManager();
			IBreakpoint bp = breakpointManager.getBreakpoint(markers[0]);

			assertTrue(bp instanceof PHPConditionalBreakpoint);
			assertEquals(1, ((PHPConditionalBreakpoint) bp).getLineNumber());

		} catch (CoreException e) {
			fail(e.getMessage());
		}

	}

