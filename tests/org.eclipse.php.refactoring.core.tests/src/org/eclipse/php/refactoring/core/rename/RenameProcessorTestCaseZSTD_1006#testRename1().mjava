	@Test
	public void testRename1() throws Exception {

		IFolder folder = TestUtils.createFolder(project1, "src");
		IFile file1 = TestUtils.createFile(folder, "testzstd_1006_1.php", "<?php class MyClass{} $a=new MyClass();?>");

		IFile file2 = TestUtils.createFile(folder, "testzstd_1006_2.php",
				"<?php include 'testzstd_1006_1.php'; class NewClass{protected function foo(){$a = new MyClass();}}?>");

		TestUtils.waitForIndexer();

		Program program = createProgram(file2);

		assertNotNull(program);

		int start = 90;
		ASTNode selectedNode = locateNode(program, start, 0);
		assertNotNull(selectedNode);

		RenameClassProcessor processor = new RenameClassProcessor(file1, selectedNode);

		processor.setNewElementName("MyClass1");
		processor.setUpdateTextualMatches(true);

		checkInitCondition(processor);

		performChange(processor);

		try {
			String content = FileUtils.getContents(file1);
			assertEquals("<?php class MyClass1{} $a=new MyClass1();?>", content);

			content = FileUtils.getContents(file2);
			assertEquals(
					"<?php include 'testzstd_1006_1.php'; class NewClass{protected function foo(){$a = new MyClass1();}}?>",
					content);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

