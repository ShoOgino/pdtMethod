	public List<TestCase> createTest() {
		List<TestCase> tests = new ArrayList<TestCase>();
		try {
			initFiles();
		} catch (Exception e1) {
			return tests;
		}

		for (final String fileName : filesMap.keySet()) {
			final PdttFileExt testFile = filesMap.get(fileName);
			tests.add(new PHPMoveProcessorTest(fileName) {
				@Override
				protected void runTest() throws Throwable {
					IFile file = project.findFile(testFile.getTestFiles().get(0).getName());

					Program program = createProgram(file);
					assertNotNull(program);
					PHPMoveProcessor processor = new PHPMoveProcessor(file);

					processor.setUpdateReferences(Boolean.valueOf(testFile.getConfig().get("updateReference")));

					IContainer destination = null;

					String dest = testFile.getConfig().get("dest");
					if ("/".equals(dest)) {
						destination = project.getProject();
					} else {
						try {
							destination = project.createFolder(dest);
						} catch (CoreException e) {
							fail(e.getMessage());
						}
					}

					processor.setDestination(destination);

					checkInitCondition(processor);
					performChange(processor);
					checkTestResult(testFile);
				}

				@Override
				protected void tearDown() throws Exception {

				}
			});
		}

		return tests;
	}

