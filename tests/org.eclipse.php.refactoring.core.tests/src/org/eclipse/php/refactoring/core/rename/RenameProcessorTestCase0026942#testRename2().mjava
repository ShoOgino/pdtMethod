	@Test
	public void testRename2() {
		Program program = createProgram(file);

		assertNotNull(program);

		int start = 290;
		ASTNode selectedNode = locateNode(program, start, 0);
		assertNotNull(selectedNode);
		
		RenameClassMemberProcessor processor = new RenameClassMemberProcessor(file, selectedNode);
		processor.setNewElementName("isAllowed1");
		
		checkInitCondition(processor);
		
		performChange(processor);
		

		try {
			String content = FileUtils.getContents(file);
			assertEquals(
					"<?php class Visitor{ public function isAllowed1 ($pPermissionCode){return true;}} class NonVisitor{public function isAllowed ($pPermissionCode){return false;}} class EditPage{private $isAllowed = false;public function __construct (){$lVisitor = new Visitor();$this->isAllowed = $lVisitor->isAllowed1('EDIT_PAGE');}}class ViewPage{private $isAllowed = false;public function __construct (){$lVisitor = new NonVisitor();$this->isAllowed = $lVisitor->isAllowed('VIEW_PAGE');}}?>",
					content);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

