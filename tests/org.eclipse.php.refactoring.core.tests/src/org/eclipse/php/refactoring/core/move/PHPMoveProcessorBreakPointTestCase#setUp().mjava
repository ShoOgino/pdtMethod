	@Before
	public void setUp() throws Exception {
		System.setProperty("disableStartupRunner", "true");
		PHPCoreTests.waitForIndexer();
		PHPCoreTests.waitForAutoBuild();

		project1 = FileUtils.createProject("TestProject1");

		IFolder folder = project1.getFolder("src");

		if (!folder.exists()) {
			folder.create(true, true, new NullProgressMonitor());
		}
		IFile file = folder.getFile("RunBreakPoint.php");

		InputStream source = new ByteArrayInputStream("<?php class TestRenameClass{}?>".getBytes());

		if (!file.exists()) {
			file.create(source, true, new NullProgressMonitor());
		} else {
			file.setContents(source, IFile.FORCE, new NullProgressMonitor());
		}

		// IMarker marker = file
		// .createMarker("org.eclipse.php.debug.core.PHPConditionalBreakpointMarker");
		// marker.setAttribute("org.eclipse.wst.sse.ui.extensions.breakpoint.path",
		// file.getFullPath().toString());
		// System.out.println(marker.getAttribute("org.eclipse.wst.sse.ui.extensions.breakpoint.path"));

		final IBreakpointManager breakpointManager = DebugPlugin.getDefault().getBreakpointManager();

		Map<String, String> attributes = new HashMap<String, String>();
		attributes.put(IMarker.LOCATION, file.getFullPath().toString());
		attributes.put("org.eclipse.wst.sse.ui.extensions.breakpoint.path", file.getFullPath().toString());

		PHPConditionalBreakpoint bp = new PHPConditionalBreakpoint(file, 1, -1, -1, attributes);

		// bp.setMarker(marker);
		breakpointManager.addBreakpoint(bp);

		folder = project1.getFolder("src1");

		if (!folder.exists()) {
			folder.create(true, true, new NullProgressMonitor());
		}

		PHPCoreTests.waitForIndexer();
		PHPCoreTests.waitForAutoBuild();
	}

