	protected List<String> getSelection(String data) throws Exception {
		createFile(data);
		ISourceModule sourceModule = DLTKCore.createSourceModuleFrom(testFile);

		IDLTKSearchScope scope = SearchEngine.createSearchScope(sourceModule, getSearchFlags(false));
		ISearchEngine searchEngine = ModelAccess.getSearchEngine(scope.getLanguageToolkit());
		final List<String> paths = new ArrayList<>();
		if (searchEngine != null) {
			ISearchRequestor requestor = new ISearchRequestor() {
				@Override
				public void match(int elementType, int flags, int offset, int length, int nameOffset, int nameLength,
						String elementName, String metadata, String doc, String qualifier, String parent,
						ISourceModule sourceModule, boolean isReference) {
					paths.add(sourceModule.getPath().toString());
				}
			};

			searchEngine.search(IModelElement.FIELD, null, "$testField", 0, 0, 0, SearchFor.ALL_OCCURRENCES,
					MatchRule.EXACT, scope, requestor, new NullProgressMonitor());

		}
		return paths;
	}

