	@Override
	public void run(TestResult result) {
		final String className = getClass().getName();
		parentSuite = initializedSuites.get(className);
		if (parentSuite == null) {
			parentSuite = new Suite(getClass().getName());
			initializedSuites.put(getClass().getName(), parentSuite);
			// TODO (alex) tearDownSuite() not executed
			final AtomicBoolean errors = new AtomicBoolean();
			final TestListener listener = new TestListener() {
				@Override
				public void startTest(Test test) {
				}

				@Override
				public void endTest(Test test) {
				}

				@Override
				public void addFailure(Test test, AssertionFailedError t) {
					errors.set(true);
				}

				@Override
				public void addError(Test test, Throwable t) {
					errors.set(true);
				}
			};
			result.addListener(listener);
			result.runProtected(this, new Protectable() {
				@Override
				public void protect() throws Throwable {
					setUpSuite();
				}
			});
			result.removeListener(listener);
			if (errors.get()) {
				return;
			}
		} else if (parentSuite.currentTestCase != null) {
			parentSuite.initialize(this);
		}
		parentSuite.currentTestCase = this;
		super.run(result);
	}

