	public static void compareProposals(OccurrenceLocation[] proposals,
			List<Integer> starts) throws Exception {
		// String[] lines = pdttFile.getExpected().split("\n");
		proposals = olderLocations(proposals);
		boolean proposalsEqual = true;
		if (proposals == null && starts.size() == 0) {
			// proposalsEqual = true;
		} else if (proposals.length == starts.size() / 2) {
			for (int i = 0; i < proposals.length; i++) {
				if (!(proposals[i].getOffset() == starts.get(i * 2) && (proposals[i]
						.getOffset() + proposals[i].getLength()) == starts
						.get(i * 2 + 1))) {
					proposalsEqual = false;
					break;
				}
			}
		} else {
			proposalsEqual = false;
		}

		if (!proposalsEqual) {
			StringBuilder errorBuf = new StringBuilder();
			errorBuf.append("\nEXPECTED COMPLETIONS LIST:\n-----------------------------\n");
			for (int i = 0; i < starts.size() / 2; i++) {
				errorBuf.append('[').append(starts.get(i * 2)).append(',')
						.append(starts.get(i * 2 + 1) - starts.get(i * 2))
						.append(']').append("\n");
			}
			errorBuf.append("\nACTUAL COMPLETIONS LIST:\n-----------------------------\n");
			for (OccurrenceLocation p : proposals) {
				errorBuf.append('[').append(p.getOffset()).append(',')
						.append(p.getLength()).append(']').append("\n");
			}
			fail(errorBuf.toString());
		}
	}

