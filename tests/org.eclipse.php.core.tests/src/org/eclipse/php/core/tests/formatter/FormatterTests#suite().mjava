	public static Test suite() {

		TestSuite suite = new TestSuite("Formatter Tests");

		for (final PHPVersion phpVersion : TESTS.keySet()) {
			TestSuite phpVerSuite = new TestSuite(phpVersion.getAlias());

			for (String testsDirectory : TESTS.get(phpVersion)) {

				for (final String fileName : getPDTTFiles(testsDirectory)) {
					try {
						final PdttFile pdttFile = new PdttFile(fileName);
						filesMap.put(pdttFile, null);

						phpVerSuite.addTest(new FormatterTests("/" + fileName) {
							
							protected void setUp() throws Exception {
								PHPCoreTests.setProjectPhpVersion(project, phpVersion);
							}

							protected void runTest() throws Throwable {
								
								IFile file = filesMap.get(pdttFile);
								
								IStructuredModel modelForEdit = StructuredModelManager.getModelManager().getModelForEdit(file);
								try {
									IDocument document = modelForEdit.getStructuredDocument();
									String beforeFormat = document.get();

									PhpFormatProcessorImpl formatter = new PhpFormatProcessorImpl();
									formatter.formatDocument(document, 0, document.getLength());
									
									assertContents(pdttFile.getExpected(), document.get());

									// change the document text as was before the formatting
									document.set(beforeFormat);
									modelForEdit.save();
								} finally {
									if (modelForEdit != null) {
										modelForEdit.releaseFromEdit();
									}
								}
							}
						});
					} catch (final Exception e) {
						phpVerSuite.addTest(new TestCase(fileName) { // dummy test indicating PDTT file parsing failure
								protected void runTest() throws Throwable {
									throw e;
								}
							});
					}
				}

			}
			suite.addTest(phpVerSuite);
		}

		// Create a setup wrapper
		TestSetup setup = new TestSetup(suite) {
			protected void setUp() throws Exception {
				setUpSuite();
			}

			protected void tearDown() throws Exception {
				tearDownSuite();
			}
		};

		return setup;
	}

