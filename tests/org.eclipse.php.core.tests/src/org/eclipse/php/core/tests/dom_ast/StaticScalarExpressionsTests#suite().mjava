	public static TestSuite suite() {
		TestSuite suite = new TestSuite("Static Scalar Expressions Tests");
		for (Object[] d : DATA) {

			final String desc = (String) d[0];
			final String str = (String) d[1];
			final int offset = (Integer) d[2];
			final boolean expectedStaticScalar = (Boolean) d[3];

			suite.addTest(new StaticScalarExpressionsTests(desc) {

				/**
				 * Checks if the expression that is located in the given offset
				 * is static scalar
				 */
				protected void runTest() throws Exception {
					StringReader reader = new StringReader(str);
					Program program = ASTParser.newParser(reader,
							PHPVersion.PHP5,
							ProjectOptions.useShortTags((IProject) null))
							.createAST(new NullProgressMonitor());

					final ASTNode locateNode = Locator.locateNode(program,
							offset);
					Assert.assertTrue(
							desc
									+ " test fails. offset should locate an expression node was "
									+ locateNode.getClass().getName(),
							locateNode instanceof Expression);

					Expression expression = (Expression) locateNode;
					final boolean actualStaticScalar = expression
							.isStaticScalar();

					Assert.assertTrue(desc + " test fails. Expression"
							+ locateNode.toString() + " should "
							+ (!expectedStaticScalar ? "not" : "")
							+ "be static scalar",
							actualStaticScalar == expectedStaticScalar);
				}
			});
		}
		return suite;
	}

