	@BeforeList
	public void setUpSuite() throws Exception {
		IProblemPreferences problemPreferences = PHPCorePlugin.getDefault().getProblemPreferences();
		for (PHPProblemIdentifier ident : PHPProblemIdentifier.values()) {
			InstanceScope.INSTANCE.getNode(problemPreferences.getPreferenceQualifier(ident))
					.put(PHPCoreConstants.SEVERITY, ProblemSeverity.WARNING.name());
		}
		// disable
		problemPreferences.setSeverity(PHPProblemIdentifier.UnexpectedNamespaceDeclaration, ProblemSeverity.IGNORE,
				InstanceScope.INSTANCE);
		problemPreferences.setSeverity(PHPProblemIdentifier.FirstClassMustMatchFileName, ProblemSeverity.IGNORE,
				InstanceScope.INSTANCE);
		ResourcesPlugin.getWorkspace().run((m) -> {
			project = TestUtils.createProject("ErrorReportingTests");
			TestUtils.setProjectPHPVersion(project, getPHPVersion());
			try {
				for (final String fileName : fileNames) {
					PdttFile pdttFile = new PdttFile(fileName);
					pdttFiles.put(fileName, pdttFile);
					files.put(fileName, createFile(pdttFile.getFile().trim()));
					for (String otherFile : pdttFile.getOtherFiles()) {
						createFile(otherFile.trim());
					}
				}
			} catch (Exception e) {
				Logger.logException(e);
				fail(e.getMessage());
			}
		}, null);
		// Perform full build to trigger errors check
		project.build(IncrementalProjectBuilder.FULL_BUILD, null);
		TestUtils.waitForAutoBuild();
	}

