	protected void parse(InputStream stream, String charsetName)
			throws Exception {
		super.parse(stream, null);

		List<ExpectedProposal> expectedProposals = new LinkedList<ExpectedProposal>();
		String[] lines = getExpected().split("\n");
		for (String line : lines) {
			int i = line.indexOf('(');
			int j = line.indexOf(')');
			if (i == -1 || j == -1) { // wrong format
				continue;
			}
			String type = line.substring(0, i);
			ExpectedProposal proposal = new ExpectedProposal();
			proposal.name = line.substring(i + 1, j);
			if ("type".equalsIgnoreCase(type)) {
				proposal.type = IModelElement.TYPE;
			} else if ("method".equalsIgnoreCase(type)) {
				proposal.type = IModelElement.METHOD;
			} else if ("field".equalsIgnoreCase(type)) {
				proposal.type = IModelElement.FIELD;
			} else if ("sourceModule".equalsIgnoreCase(type)) {
				proposal.type = IModelElement.SOURCE_MODULE;
			} else if ("archiveFolder".equalsIgnoreCase(type)) {
				proposal.type = IModelElement.SCRIPT_FOLDER;
			} else if ("keyword".equalsIgnoreCase(type)) {
			} else { // wrong format
				continue;
			}
			expectedProposals.add(proposal);
		}
		this.expectedProposals = (ExpectedProposal[]) expectedProposals
				.toArray(new ExpectedProposal[expectedProposals.size()]);
	}

