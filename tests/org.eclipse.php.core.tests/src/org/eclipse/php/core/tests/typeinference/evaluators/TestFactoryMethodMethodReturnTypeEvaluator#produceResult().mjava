	@Override
	public Object produceResult() {
		FactoryMethodMethodReturnTypeGoal goal = (FactoryMethodMethodReturnTypeGoal) this.goal;
		Pattern pattern = Pattern.compile("^factoryMethodName(?<argumentIndex>\\d*)"); //$NON-NLS-1$
		Matcher matcher = pattern.matcher(goal.getMethodName());
		if (matcher.find()) {
			int argumentIndex;
			if (matcher.group("argumentIndex").length() == 0) { //$NON-NLS-1$
				argumentIndex = 0;
			} else {
				argumentIndex = Integer.parseInt(matcher.group("argumentIndex")); //$NON-NLS-1$
			}
			String[] arguments = goal.getArgNames();
			if (arguments != null && arguments.length > argumentIndex && arguments[argumentIndex] != null
					&& arguments[argumentIndex].length() > 0) {
				switch (arguments[argumentIndex]) {
				default:
					return new PHPClassType(NamespaceReference.NAMESPACE_DELIMITER.concat(arguments[argumentIndex]));
				}
			}
		}

		return UnknownType.INSTANCE;
	}

