	protected void waitForIndexerNoDelay() {
		final Semaphore waitForIndexerSemaphore = new Semaphore(0);
		final Thread waitForIndexerThread = new WaitForIndexerThread();
		AbstractJob noDelayRequest = new AbstractJob() {
			@Override
			protected void run() throws CoreException, IOException {
				// Interrupt if wait until ready job is sleeping
				waitForIndexerThread.interrupt();
				// Indexer finished as we are here, release semaphore
				waitForIndexerSemaphore.release();
			}
			@Override
			protected String getName() {
				return "WAIT-UNTIL-READY-NO-DELAY-JOB";
			}
		};
		ModelManager.getModelManager().getIndexManager().request(noDelayRequest);
		/*
		 * Start "Wait Until Ready" job to notify JobManager#delaySignal (will
		 * cause awaiting jobs to run immediately).
		 */
		waitForIndexerThread.start();
		try {
			waitForIndexerSemaphore.acquire();
		} catch (InterruptedException e) {
			Logger.logException(e);
		}
	}

