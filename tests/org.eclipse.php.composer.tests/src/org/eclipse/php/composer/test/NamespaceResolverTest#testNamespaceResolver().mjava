	@Test
	public void testNamespaceResolver() throws CoreException, IOException {
		project = TestUtils.createProject("namespace-resolver"); //$NON-NLS-1$

		assertNotNull(project);

		ComposerCoreTestPlugin.copyProjectFiles(project);
		project.refreshLocal(IResource.DEPTH_INFINITE, null);

		TestUtils.setProjectPHPVersion(project, PHPVersion.PHP5_3);

		PHPFacets.setFacetedVersion(project, PHPVersion.PHP5_3);
		FacetManager.installFacets(project, PHPVersion.PHP5_3, new NullProgressMonitor());

		project.build(IncrementalProjectBuilder.FULL_BUILD, null);

		TestUtils.waitForIndexer();
		TestUtils.waitForAutoBuild();

		IComposerProject project = ComposerPlugin.getDefault().getComposerProject(this.project);

		IFile composerJson = project.getComposerJson();
		assertNotNull(composerJson);

		assertTrue(project.getProject().hasNature(PHPNature.ID));
		assertTrue(FacetManager.hasComposerFacet(this.project));

		assertEquals("Foo\\Bar", project.getNamespace(new Path("src/Foo/Bar"))); //$NON-NLS-1$ //$NON-NLS-2$
		assertEquals("Foo\\Bar\\Baz", project.getNamespace(new Path("src/Foo/Bar/Baz"))); //$NON-NLS-1$ //$NON-NLS-2$
		assertEquals("Hello\\World", project.getNamespace(new Path("src/HelloWorld"))); //$NON-NLS-1$ //$NON-NLS-2$
		assertEquals("", project.getNamespace(new Path("src/Null/"))); //$NON-NLS-1$ //$NON-NLS-2$
		assertEquals("Wurst", project.getNamespace(new Path("src/Null/Wurst"))); //$NON-NLS-1$ //$NON-NLS-2$
		assertEquals("Blut\\Wurst", project.getNamespace(new Path("src/Null/Blut/Wurst"))); //$NON-NLS-1$ //$NON-NLS-2$

	}

