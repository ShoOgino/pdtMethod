	protected void doTestComposerPackage(ComposerPackage phpPackage) {
		assertNotNull(phpPackage);

		assertEquals(NAME, phpPackage.getName());
		assertEquals(TYPE, phpPackage.getType());
		assertEquals(DESCRIPTION, phpPackage.getDescription());

		assertEquals(KEYWORDS[0], phpPackage.getKeywords().get(0));
		assertEquals(HOMEPAGE, phpPackage.getHomepage());

		assertEquals(TARGET_DIR, phpPackage.getTargetDir());
		assertEquals(MINIMUM_STABILITY, phpPackage.getMinimumStability());

		assertNotNull("Authors not NULL", phpPackage.getAuthors());
		assertEquals(2, phpPackage.getAuthors().size());

		Person robert = phpPackage.getAuthors().get(0);
		assertEquals(PERSON1, robert.getName());
		assertEquals(PERSON1_EMAIL, robert.getEmail());
		assertEquals(PERSON1_ROLE, robert.getRole());

		Person gossi = phpPackage.getAuthors().get(1);
		assertEquals(PERSON2, gossi.getName());
		assertEquals(PERSON2_HOMEPAGE, gossi.getHomepage());
		assertEquals(PERSON2_ROLE, gossi.getRole());

		assertEquals(2, phpPackage.getLicense().size());
		assertEquals(LICENSE, phpPackage.getLicense().get(0));
		assertEquals(LICENSE_EPL, phpPackage.getLicense().get(1));

		assertEquals(KEYWORDS.length, phpPackage.getKeywords().size());
	}

