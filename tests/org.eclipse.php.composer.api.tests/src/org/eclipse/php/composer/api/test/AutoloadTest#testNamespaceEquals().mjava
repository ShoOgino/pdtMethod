	@Test
	public void testNamespaceEquals() {
		Namespace n1, n2;

		// positives
		n1 = new Namespace();
		n2 = n1;
		assertTrue(n1.equals(n2));

		n1.setNamespace("test");
		n2 = n1.clone();
		assertTrue(n1.equals(n2));

		n1 = new Namespace();
		n1.add("bla");
		n2 = n1.clone();
		assertTrue(n1.equals(n2));

		n1.add("boink");
		n2 = n1.clone();
		assertTrue(n1.equals(n2));

		// negatives
		n1 = new Namespace();
		n1.setNamespace("test");
		n2 = new Namespace();
		n2.setNamespace("wurst");
		assertFalse(n1.equals(n2));

		n1 = new Namespace();
		n1.add("bla");
		n2 = new Namespace();
		n2.add("boink");
		assertFalse(n1.equals(n2));

		n1 = new Namespace();
		n1.setNamespace("test");
		n2 = new Namespace();
		n2.add("boink");
		assertFalse(n1.equals(n2));

		n1 = new Namespace();
		n1.add("boink");
		n2 = new Namespace();
		n2.setNamespace("test");
		assertFalse(n1.equals(n2));

		n1 = new Namespace();
		n1.setNamespace("test");
		n1.add("bla");
		n2 = new Namespace();
		n2.setNamespace("test");
		n2.add("boink");
		assertFalse(n1.equals(n2));
	}

