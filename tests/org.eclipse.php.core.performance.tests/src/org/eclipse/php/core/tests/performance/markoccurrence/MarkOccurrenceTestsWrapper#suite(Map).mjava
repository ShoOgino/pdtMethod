	public Test suite(final Map map) {
		project = ResourcesPlugin.getWorkspace().getRoot().getProject(map.get(ProjectSuite.PROJECT).toString());
		perfMonitor = PHPCorePerformanceTests.getPerformanceMonitor();
		TestSuite suite = new TestSuite("Auto Mark Occurrence Tests");

		// for (final PHPVersion phpVersion : TESTS.keySet()) {
		// TestSuite phpVerSuite = new TestSuite(phpVersion.getAlias());
		final PHPVersion phpVersion = (PHPVersion) map.get(ProjectSuite.PHP_VERSION);

		for (String testsDirectory : TESTS.get(phpVersion)) {
			testsDirectory = testsDirectory.replaceAll("project", map.get(ProjectSuite.PROJECT).toString());
			for (final String fileName : getPDTTFiles(testsDirectory,
					PHPCorePerformanceTests.getDefault().getBundle())) {
				try {
					final PdttFile pdttFile = new PdttFile(PHPCorePerformanceTests.getDefault().getBundle(), fileName);
					MarkOccurrenceTests test = new MarkOccurrenceTests(phpVersion.getAlias() + " - /" + fileName) {

						protected void setUp() throws Exception {
							TestUtils.setProjectPHPVersion(project, phpVersion);
							pdttFile.applyPreferences();
						}

						protected void tearDown() throws Exception {
							if (testFile != null) {
								testFile.delete(true, null);
								testFile = null;
							}
						}

						protected void runTest() throws Throwable {
							runMarkOccurrence(pdttFile.getFile(), fileName);
						}
					};
					suite.addTest(test);
				} catch (final Exception e) {
					suite.addTest(new TestCase(fileName) { // dummy
						// test
						// indicating
						// PDTT
						// file
						// parsing
						// failure
						protected void runTest() throws Throwable {
							throw e;
						}
					});
				}
			}
		}
		return suite;
	}

