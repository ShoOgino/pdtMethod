	@Test
	public void highlighter(String fileName) throws Exception {
		final PdttFile pdttFile = new PdttFile(PHPUiTests.getDefault()
				.getBundle(), fileName);
		String result = "";
		createFile(new ByteArrayInputStream(pdttFile.getFile().getBytes()));
		ISourceModule module = getSourceModule();
		assertNotNull(module);

		String index = fileName.substring(fileName.lastIndexOf('/') + 1,
				fileName.indexOf('.'));
		int endIndex = index.indexOf('-');
		if (endIndex != -1) {
			index = index.substring(0, endIndex);
		}
		AbstractSemanticHighlighting highlighter = highlighters.get(index);
		assertNotNull(highlighter);
		Program program = getProgram(module);
		highlighter.initDefaultPreferences();
		Position[] positions = highlighter.consumes(program);
		assertNoDuplicates(highlighter.getDisplayName(), positions);
		result += highlighter.getClass().getName() + ":\n";
		for (Position position : positions) {
			result += "highlight("
					+ pdttFile.getFile().substring(position.getOffset(),
							position.getOffset() + position.getLength())
					+ ")\n";
		}
		assertEquals(pdttFile.getExpected(), result);
		// We check the other highlighters for failure
		for (AbstractSemanticHighlighting h : highlighters.values()) {
			if (h != highlighter) {
				h.initDefaultPreferences();
				positions = h.consumes(program);
				assertNoDuplicates(highlighter.getDisplayName(), positions);
			}
		}
	}

