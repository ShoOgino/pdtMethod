	private void handleModifyPackage(final TableViewer packagesViewer) {
		IStructuredSelection selection = (IStructuredSelection) packagesViewer.getSelection();
		Object[] selectedRepos = selection.toArray();
		if (selectedRepos.length > 0) {
			final IPackage toModify = (IPackage) selectedRepos[0];
			final IPackageSearchService searchService = getSearchService();
			final PackageDetailsJob packageDetails = new PackageDetailsJob(toModify, searchService);
			packageDetails.addJobChangeListener(new JobChangeAdapter() {
				@Override
				public void done(IJobChangeEvent event) {
					int result = event.getResult().getSeverity();
					if (result == IStatus.OK) {
						final AddDependencyWizard wizard = new AddDependencyWizard(searchService, getAllPackages(),
								packageDetails.getPackage());
						final WizardDialog dialog = new AddDependencyWizardDialog(getSite().getShell(), wizard);
						final IPackages oldSection = getPackages(toModify.getType());
						Display.getDefault().asyncExec(new Runnable() {

							@Override
							public void run() {
								if (dialog.open() != Dialog.OK) {
									return;
								}

								toModify.setType(wizard.getPackage().getType());
								toModify.setVersionConstraint(wizard.getPackage().getVersionConstraint());

								IPackages newSection = getPackages(toModify.getType());
								if (oldSection == newSection) {
									newSection.addPackage(toModify, true);
								} else {
									oldSection.removePackage(toModify, false);
									newSection.addPackage(toModify, true);
								}
								packagesViewer.setInput(getAllPackages());
							}
						});
					} else if (result == Status.CANCEL) {
						return;
					} else {
						MessageDialog.openError(getSite().getShell(), Messages.GeneralPage_PackageModifyErrorTitle,
								MessageFormat.format(Messages.GeneralPage_PackageModifyErrorMessage,
										toModify.getName()));
					}
				}
			});
			packageDetails.setUser(true);
			packageDetails.schedule();
		}
	}

