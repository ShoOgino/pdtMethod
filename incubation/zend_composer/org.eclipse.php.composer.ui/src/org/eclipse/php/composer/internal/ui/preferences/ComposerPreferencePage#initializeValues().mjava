	private void initializeValues() {
		String repos = ComposerPreferences.get(ComposerPreferences.REPOSITORIES_NODE);
		if (repos != null) {
			IRepositories repositories = ModelFactory.createRepositories();
			input = repositories.deserialize(repos);
		}
		viewer.setInput(input);
		viewer.refresh();

		boolean updatePhar = ComposerPreferences.getBoolean(ComposerPreferences.UPDATE_COMPOSER_PHAR_NODE, true);
		updateButton.setSelection(updatePhar);

		String phar = ComposerPreferences.get(ComposerPreferences.COMPOSER_PHAR_NODE);
		if (phar.equals(ComposerPreferences.getDefaultComposerPhar())) {
			useDefaultButton.setSelection(true);
			composerPharText.setEnabled(false);
			browseButton.setEnabled(false);
		} else {
			useCustomButton.setSelection(true);
			composerPharText.setText(phar);
		}

		initPHPExecs();

		String phpExec = ComposerPreferences.get(ComposerPreferences.PHP_EXEC_NODE);
		if (phpExec != null) {
			String[] items = phpCombo.getItems();
			for (int i = 0; i < items.length; i++) {
				if (items[i].equals(phpExec)) {
					phpCombo.select(i);
					break;
				}
			}
		}
		setValid(validatePage());
	}

