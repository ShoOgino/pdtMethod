	@Override
	public void run(boolean fork, boolean cancelable,
			IRunnableWithProgress runnable) throws InvocationTargetException,
			InterruptedException {
		try {
			if (getWizard().needsProgressMonitor()) {
				if (cancelable && fork) {
					Button cancelButton = getButton(IDialogConstants.CANCEL_ID);
					((ProgressMonitorPart) getProgressMonitor())
							.attachToCancelComponent(cancelButton);
				}
				((ProgressMonitorPart) getProgressMonitor()).setVisible(true);
			}

			lockUI = true;
			ModalContext.run(runnable, fork, getProgressMonitor(), getShell()
					.getDisplay());
		} finally {
			// explicitly invoke done() on our progress monitor so
			// that its
			// label does not spill over to the next invocation, see
			// bug 271530
			if (getProgressMonitor() != null
					&& !((ProgressMonitorPart) getProgressMonitor())
							.isDisposed()) {
				getProgressMonitor().done();
			}
			lockUI = false;
		}
	}

