	private boolean validatePage() {
		setErrorMessage(null);
		if (selectedPackage != null) {
			if (isAlreadyAdded(selectedPackage)) {
				setErrorMessage(MessageFormat.format(
						Messages.AddDependencyPage_DuplicateError,
						selectedPackage.getName(), selectedPackage.getType()
								.getName()));
			}
			if (versionTypeCombo.getSelectionIndex() == MATCHES_TYPE) {
				VersionConstraintValidator constraintValidator = new VersionConstraintValidator();

				String version = equalsCombo.getText();
				if (version.trim().isEmpty()) {
					setErrorMessage(Messages.AddDependencyPage_EqualsVersionError);
					return false;
				}
				String message = constraintValidator
						.validate(getVersionConstraint());
				if (message != null) {
					setErrorMessage(message);
					return false;
				}
			}
			if (versionTypeCombo.getSelectionIndex() == RANGE_TYPE) {
				String version = minCombo.getText();
				if (version.trim().isEmpty()) {
					setErrorMessage(Messages.AddDependencyPage_MinVersionError);
					return false;
				}
				version = maxCombo.getText();
				if (version.trim().isEmpty()) {
					setErrorMessage(Messages.AddDependencyPage_MaxVersionError);
					return false;
				}
			}
		} else {
			return false;
		}
		return true;
	}

