	private void doSearchNextPage() {
		if (searchText.getText().isEmpty() || !contentProvider.hasNextPage()) {
			return;
		}

		IRunnableWithProgress nextPageTask = new IRunnableWithProgress() {

			@Override
			public void run(IProgressMonitor monitor)
					throws InvocationTargetException, InterruptedException {
				try {
					monitor.beginTask(Messages.AddDependencyPage_SearchingJob,
							IProgressMonitor.UNKNOWN);

					contentProvider.nextPage(monitor);
				} catch (IOException e) {
					throw new InvocationTargetException(e);
				} finally {
					monitor.done();
				}
			}
		};
		try {
			run(nextPageTask);
		} catch (InvocationTargetException e) {
			ComposerUIPlugin.logError(e.getCause());
			setErrorMessage(Messages.AddDependencyPage_SearchError);
		} catch (InterruptedException e) {
			ComposerUIPlugin.logError(e);
		}

		refreshSearchViewer();
	}

