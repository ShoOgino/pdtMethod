	private void createPHPExecSection(Composite parent) {
		Group group = new Group(parent, SWT.NONE);
		group.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		group.setText(Messages.ComposerPreferencePage_PhpSection);
		group.setLayout(new GridLayout(3, false));

		Label blackberyDescLabel = new Label(group, SWT.WRAP);
		blackberyDescLabel.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, false, false, 3, 1));
		blackberyDescLabel.setText(Messages.ComposerPreferencePage_PhpDesc);

		Label label = new Label(group, SWT.NONE);
		label.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		label.setText(Messages.ComposerPreferencePage_PhpLabel);

		phpCombo = new Combo(group, SWT.BORDER | SWT.READ_ONLY);
		GridData gd = new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1);
		gd.widthHint = 300;
		phpCombo.setLayoutData(gd);
		phpCombo.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				setValid(validatePage());
			}
		});
		Button button = new Button(group, SWT.NONE);
		button.setText(Messages.ComposerPreferencePage_PhpManage);
		gd = new GridData(SWT.FILL, SWT.FILL, false, true);
		gd.widthHint = 90;
		button.setLayoutData(gd);
		button.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				PreferenceDialog dialog = PreferencesUtil.createPreferenceDialogOn(getShell(), PHP_EXECS_PREFS_PAGE_ID,
						new String[] { PHP_EXECS_PREFS_PAGE_ID, ID }, null);
				if (dialog.open() == Window.OK) {
					String[] phpExecsNames = ComposerService.getPHPExecNames();
					for (String name : phpExecsNames) {
						if (!phpCombo.isDisposed()) {
							phpCombo.add(name);
						}
					}
				}
			}
		});
	}

