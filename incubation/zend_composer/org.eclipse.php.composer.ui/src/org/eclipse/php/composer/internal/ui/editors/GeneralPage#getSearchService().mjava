	private IPackageSearchService getSearchService() {
		IRepositories repositories = model.getRepositories();

		if (repositories == null) {
			return new PackagistSearchService();
		}
		List<IRepository> repositoryList = repositories.getRepositories();
		if (repositoryList.isEmpty()) {
			return new PackagistSearchService();
		}
		if (repositoryList.size() == 1) {
			IRepository repository = repositoryList.get(0);
			if (repository.getUrl().equalsIgnoreCase(PackagistSearchService.PACKAGIST_REPO)
					&& repository.getType() == RepositoryType.COMPOSER) {
				return new PackagistSearchService();
			}
		}
		return new CLISearchService(composer);
	}

