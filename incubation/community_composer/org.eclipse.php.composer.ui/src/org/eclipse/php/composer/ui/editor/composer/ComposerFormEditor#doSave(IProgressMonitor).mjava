	public void doSave(IProgressMonitor monitor) {
		try {
			saving = true;
			IDocument document = documentProvider.getDocument(getEditorInput());

			if (isJsonEditor()) {
				parse(document.get());
			} else {
				validateJson(document.get());
			}

			if (!isJsonEditor() && isValidJson()) {
				document.set(composerPackage.toJson());
			}

			// write
			documentProvider.aboutToChange(getEditorInput());
			documentProvider.saveDocument(monitor, getEditorInput(), document, true);
			documentProvider.changed(getEditorInput());

			jsonDump = document.get();

			setDirty(false);
			saving = false;

			// save actions
			IPreferenceStore store = ComposerPlugin.getDefault().getPreferenceStore();
			PreferencesSupport prefSupport = new PreferencesSupport(ComposerPlugin.ID, store);

			Boolean buildpath = prefSupport.getBooleanPreferencesValue(ComposerPreferenceConstants.SAVEACTION_BUILDPATH,
					false, project);
			Boolean update = prefSupport.getBooleanPreferencesValue(ComposerPreferenceConstants.SAVEACTION_UPDATE,
					false, project);

			update = update && (newDepSinceLastSave || newDevDepSinceLastSave);

			if (update) {
				ComposerJob job;

				if (newDevDepSinceLastSave || hasDevDepsInstalled()) {
					job = new UpdateDevJob(project);
				} else {
					job = new UpdateJob(project);
				}

				job.setUser(false);
				job.schedule();

				newDepSinceLastSave = false;
				newDevDepSinceLastSave = false;
			}

			if (buildpath && !update) {
				buildPathManager.update();
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

