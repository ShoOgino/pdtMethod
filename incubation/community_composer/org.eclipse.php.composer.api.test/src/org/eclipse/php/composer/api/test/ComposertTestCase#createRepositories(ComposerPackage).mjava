	private void createRepositories(ComposerPackage phpPackage) {
		Repositories repos = phpPackage.getRepositories();

		ComposerRepository composerRepo = new ComposerRepository();
		composerRepo.setUrl(COMPOSER_URL);
		repos.add(composerRepo);

		JsonObject options = composerRepo.getOptions();
		JsonObject ssl = new JsonObject();
		ssl.set("verify_peer", true);
		options.set("ssl", ssl);

		SubversionRepository svnRepo = new SubversionRepository();
		svnRepo.setUrl(SVN_URL); // haha
		svnRepo.setTrunkPath(TRUNK);
		svnRepo.setTagsPath(TAGS);
		svnRepo.setBranchesPath(BRANCHES);
		repos.add(svnRepo);

		PearRepository pearRepo = new PearRepository();
		pearRepo.setUrl(PEAR_URL);
		pearRepo.setVendorAlias(PEAR_ALIAS);
		repos.add(pearRepo);

		PackageRepository pkgRepo = new PackageRepository();
		repos.add(pkgRepo);

		RepositoryPackage pkg = pkgRepo.getPackage();
		pkg.setName(SMARTY);
		pkg.setVersion(SMARTY_VERSION);

		Distribution dist = pkg.getDist();
		dist.setType(SMARTY_DIST);
		dist.setUrl(SMARTY_ZIP);

		Source src = pkg.getSource();
		src.setType(SMARTY_SOURCE);
		src.setUrl(SMARTY_SVN);
		src.setReference(SMARTY_REFERENCE);

		VcsRepository vcsRepo = new VcsRepository();
		vcsRepo.setUrl(VCS_URL);
		repos.add(vcsRepo);
	}

